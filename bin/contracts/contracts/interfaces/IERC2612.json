{
    "contractName": "IERC2612",
    "abi": [
        {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "nonces",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8"
                },
                {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"d:/Github/new_token/contracts/contracts/interfaces/draft-IERC2612.sol\":\"IERC2612\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"d:/Github/new_token/contracts/contracts/interfaces/draft-IERC2612.sol\":{\"keccak256\":\"0x35c3a3a4651b05eaad020a605ee2b412a17333f7ae28441357042630d6afc711\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://233e8a8e155de3f0f0ca46bd86a18b0e74a5573797f406daeb5c311984a7eaec\",\"dweb:/ipfs/QmQCRn4pg4WVwmAd3ddXfzLVqkZWSPHk5HgG4ZiQDnCxQs\"]},\"d:/Github/new_token/contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xce9deccc737640bfe6b2986687e4ed78cd1c0ae714c170866fe0582f691ecec8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://592905288248b63548cdbc2f7f1d9ed932be81929bd2fa06f0009d7733001c5a\",\"dweb:/ipfs/QmWBEaBFT1JrdhjYiKmWxjm9hUUo1ovJgY9R9YsQDJkTy8\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "",
    "sourceMap": "",
    "deployedSourceMap": "",
    "sourcePath": "d:/Github/new_token/contracts/contracts/interfaces/draft-IERC2612.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.10+commit.fc410830"
    },
    "ast": {
        "absolutePath": "d:/Github/new_token/contracts/contracts/interfaces/draft-IERC2612.sol",
        "exportedSymbols": {
            "IERC20Permit": [
                22460
            ],
            "IERC2612": [
                8356
            ]
        },
        "id": 8357,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 8352,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "98:23:48"
            },
            {
                "absolutePath": "d:/Github/new_token/contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
                "file": "../token/ERC20/extensions/draft-IERC20Permit.sol",
                "id": 8353,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 8357,
                "sourceUnit": 22461,
                "src": "123:58:48",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 8354,
                            "name": "IERC20Permit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22460,
                            "src": "205:12:48"
                        },
                        "id": 8355,
                        "nodeType": "InheritanceSpecifier",
                        "src": "205:12:48"
                    }
                ],
                "canonicalName": "IERC2612",
                "contractDependencies": [],
                "contractKind": "interface",
                "fullyImplemented": false,
                "id": 8356,
                "linearizedBaseContracts": [
                    8356,
                    22460
                ],
                "name": "IERC2612",
                "nameLocation": "193:8:48",
                "nodeType": "ContractDefinition",
                "nodes": [],
                "scope": 8357,
                "src": "183:37:48",
                "usedErrors": []
            }
        ],
        "src": "98:123:48"
    },
    "functionHashes": {
        "DOMAIN_SEPARATOR()": "3644e515",
        "nonces(address)": "7ecebe00",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
    },
    "gasEstimates": null
}