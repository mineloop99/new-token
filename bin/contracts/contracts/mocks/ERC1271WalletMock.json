{
    "contractName": "ERC1271WalletMock",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "originalOwner",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "hash",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                }
            ],
            "name": "isValidSignature",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "magicValue",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originalOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"d:/Github/new_token/contracts/contracts/mocks/ERC1271WalletMock.sol\":\"ERC1271WalletMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"d:/Github/new_token/contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xcf02b12b43a19c47f55f3cb134bdb21e58bf40ed75aea99664b35d039f725719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://690f336b242e4b5be0540e358dd50d45338bd83782ad2a0226a473fc8f918165\",\"dweb:/ipfs/QmPnnme73tgoW5GZqGLHT7oA9u6866LbMqRyw4uNh1X7vS\"]},\"d:/Github/new_token/contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x82f9ddd6ba056e6b754bae633896ffa7855ce3b0a5e4f270d0e5cfdcb699e1ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e16f9f43758b9c50f5ca070a0bbca7cf82b87ea4b7734ce31fafcc856abffab0\",\"dweb:/ipfs/QmY2umKSTt3VWWupAfCYY4GHJsDhDgJGFXeFrRzdbu7CDp\"]},\"d:/Github/new_token/contracts/contracts/mocks/ERC1271WalletMock.sol\":{\"keccak256\":\"0x75b8d5e4ed03b84c6feef0d78aae6bbc7d03076938ad52f4f1f0a29d4d5afc41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6007697db66b63ac5c280e834feb52b9e13412f21f062523eb1fe31f86575f4\",\"dweb:/ipfs/QmUafdF4kEnGV4wvLtSAAR94eWmVoJbhEcYB69ogH3BK9b\"]},\"d:/Github/new_token/contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x00f8a1bd52713525eb90f70b64f028de5c075fb6298cc9de2e8f0c022e1595ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b5121409ef8f276add2cb646a4614809fb824012addf8f584d0bb2e0bb7ba53\",\"dweb:/ipfs/QmdN1Yk9Xmskgk2Y6DWNX7EmXU5EtKroCGHiQrHpXSWRZp\"]},\"d:/Github/new_token/contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x1ca01170c4e9306009d086c132f39f1d8b23707fd3c706393105e715d9dcb24b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://176d1be20be0bfc798afbd4c41deed1e4a93f0bca07446d8585a5886da63e240\",\"dweb:/ipfs/QmVKjuixYBtJ42jxYQFgqukYfwFgPY5WHeA4E5fMFWAsY9\"]},\"d:/Github/new_token/contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xfd5da6aed7e3dcb2f9165cbc8f55fa7d4f12edd36fb3dcf4f093542569969725\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78443004e55df13f78e90c9d333d8f3a25fd3227254a298393aeb3fe8dd8cfd1\",\"dweb:/ipfs/QmPcF4p3ZtD3sSZnSgEt74GscBsw13uwWGeKYLHX8SGYX6\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b506040516108d33803806108d383398101604081905261002f91610167565b61003833610047565b61004181610097565b50610197565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661015b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b61016481610047565b50565b60006020828403121561017957600080fd5b81516001600160a01b038116811461019057600080fd5b9392505050565b61072d806101a66000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631626ba7e14610051578063715018a6146100825780638da5cb5b1461008c578063f2fde38b146100a7575b600080fd5b61006461005f3660046105fd565b6100ba565b6040516001600160e01b031990911681526020015b60405180910390f35b61008a6100f6565b005b6000546040516001600160a01b039091168152602001610079565b61008a6100b53660046106b8565b610161565b600080546001600160a01b03166100d1848461022c565b6001600160a01b0316146100e65760006100ef565b630b135d3f60e11b5b9392505050565b6000546001600160a01b031633146101555760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61015f6000610250565b565b6000546001600160a01b031633146101bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161014c565b6001600160a01b0381166102205760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161014c565b61022981610250565b50565b600080600061023b85856102a0565b9150915061024881610310565b509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808251604114156102d75760208301516040840151606085015160001a6102cb878285856104cb565b94509450505050610309565b82516040141561030157602083015160408401516102f68683836105b8565b935093505050610309565b506000905060025b9250929050565b6000816004811115610324576103246106e1565b141561032d5750565b6001816004811115610341576103416106e1565b141561038f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161014c565b60028160048111156103a3576103a36106e1565b14156103f15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161014c565b6003816004811115610405576104056106e1565b141561045e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161014c565b6004816004811115610472576104726106e1565b14156102295760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161014c565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561050257506000905060036105af565b8460ff16601b1415801561051a57508460ff16601c14155b1561052b57506000905060046105af565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561057f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105a8576000600192509250506105af565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016105d9878288856104cb565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561061057600080fd5b82359150602083013567ffffffffffffffff8082111561062f57600080fd5b818501915085601f83011261064357600080fd5b813581811115610655576106556105e7565b604051601f8201601f19908116603f0116810190838211818310171561067d5761067d6105e7565b8160405282815288602084870101111561069657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156106ca57600080fd5b81356001600160a01b03811681146100ef57600080fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212207b5152c7bd4ff1cb2a9b6e41969c5ae88e9691fb1f522c637b735ec7475c1fd564736f6c634300080a0033",
    "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631626ba7e14610051578063715018a6146100825780638da5cb5b1461008c578063f2fde38b146100a7575b600080fd5b61006461005f3660046105fd565b6100ba565b6040516001600160e01b031990911681526020015b60405180910390f35b61008a6100f6565b005b6000546040516001600160a01b039091168152602001610079565b61008a6100b53660046106b8565b610161565b600080546001600160a01b03166100d1848461022c565b6001600160a01b0316146100e65760006100ef565b630b135d3f60e11b5b9392505050565b6000546001600160a01b031633146101555760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61015f6000610250565b565b6000546001600160a01b031633146101bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161014c565b6001600160a01b0381166102205760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161014c565b61022981610250565b50565b600080600061023b85856102a0565b9150915061024881610310565b509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808251604114156102d75760208301516040840151606085015160001a6102cb878285856104cb565b94509450505050610309565b82516040141561030157602083015160408401516102f68683836105b8565b935093505050610309565b506000905060025b9250929050565b6000816004811115610324576103246106e1565b141561032d5750565b6001816004811115610341576103416106e1565b141561038f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161014c565b60028160048111156103a3576103a36106e1565b14156103f15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161014c565b6003816004811115610405576104056106e1565b141561045e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161014c565b6004816004811115610472576104726106e1565b14156102295760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161014c565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561050257506000905060036105af565b8460ff16601b1415801561051a57508460ff16601c14155b1561052b57506000905060046105af565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561057f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105a8576000600192509250506105af565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016105d9878288856104cb565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561061057600080fd5b82359150602083013567ffffffffffffffff8082111561062f57600080fd5b818501915085601f83011261064357600080fd5b813581811115610655576106556105e7565b604051601f8201601f19908116603f0116810190838211818310171561067d5761067d6105e7565b8160405282815288602084870101111561069657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156106ca57600080fd5b81356001600160a01b03811681146100ef57600080fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212207b5152c7bd4ff1cb2a9b6e41969c5ae88e9691fb1f522c637b735ec7475c1fd564736f6c634300080a0033",
    "sourceMap": "170:369:72:-:0;;;224:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:8;719:10:195;921:18:8;:32::i;:::-;269::72;287:13;269:17;:32::i;:::-;224:84;170:369;;2270:187:8;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;719:10:195;1248:23:8;1240:68;;;;-1:-1:-1;;;1240:68:8;;511:2:223;1240:68:8;;;493:21:223;;;530:18;;;523:30;589:34;569:18;;;562:62;641:18;;1240:68:8;;;;;;;;;-1:-1:-1;;;;;2006:22:8;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:8;;872:2:223;1998:73:8::1;::::0;::::1;854:21:223::0;911:2;891:18;;;884:30;950:34;930:18;;;923:62;-1:-1:-1;;;1001:18:223;;;994:36;1047:19;;1998:73:8::1;670:402:223::0;1998:73:8::1;2081:28;2100:8:::0;2081:18:::1;:28::i;:::-;1918:198:::0;:::o;14:290:223:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:223;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:223:o;670:402::-;170:369:72;;;;;;",
    "deployedSourceMap": "170:369:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;314:223;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1302:33:223;;;1284:52;;1272:2;1257:18;314:223:72;;;;;;;;1668:101:8;;;:::i;:::-;;1036:85;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:8;;;1493:51:223;;1481:2;1466:18;1036:85:8;1347:203:223;1918:198:8;;;;;;:::i;:::-;;:::i;314:223:72:-;408:17;1108:6:8;;-1:-1:-1;;;;;1108:6:8;444:30:72;458:4;464:9;444:13;:30::i;:::-;-1:-1:-1;;;;;444:41:72;;:86;;528:1;444:86;;;-1:-1:-1;;;444:86:72;437:93;314:223;-1:-1:-1;;;314:223:72:o;1668:101:8:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;719:10:195;1248:23:8;1240:68;;;;-1:-1:-1;;;1240:68:8;;2048:2:223;1240:68:8;;;2030:21:223;;;2067:18;;;2060:30;2126:34;2106:18;;;2099:62;2178:18;;1240:68:8;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;719:10:195;1248:23:8;1240:68;;;;-1:-1:-1;;;1240:68:8;;2048:2:223;1240:68:8;;;2030:21:223;;;2067:18;;;2060:30;2126:34;2106:18;;;2099:62;2178:18;;1240:68:8;1846:356:223;1240:68:8;-1:-1:-1;;;;;2006:22:8;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:8;;2409:2:223;1998:73:8::1;::::0;::::1;2391:21:223::0;2448:2;2428:18;;;2421:30;2487:34;2467:18;;;2460:62;-1:-1:-1;;;2538:18:223;;;2531:36;2584:19;;1998:73:8::1;2207:402:223::0;1998:73:8::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;4293:227:202:-;4371:7;4391:17;4410:18;4432:27;4443:4;4449:9;4432:10;:27::i;:::-;4390:69;;;;4469:18;4481:5;4469:11;:18::i;:::-;-1:-1:-1;4504:9:202;4293:227;-1:-1:-1;;;4293:227:202:o;2270:187:8:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;2228:1279:202:-;2309:7;2318:12;2539:9;:16;2559:2;2539:22;2535:966;;;2828:4;2813:20;;2807:27;2877:4;2862:20;;2856:27;2934:4;2919:20;;2913:27;2577:9;2905:36;2975:25;2986:4;2905:36;2807:27;2856;2975:10;:25::i;:::-;2968:32;;;;;;;;;2535:966;3021:9;:16;3041:2;3021:22;3017:484;;;3290:4;3275:20;;3269:27;3340:4;3325:20;;3319:27;3380:23;3391:4;3269:27;3319;3380:10;:23::i;:::-;3373:30;;;;;;;;3017:484;-1:-1:-1;3450:1:202;;-1:-1:-1;3454:35:202;3017:484;2228:1279;;;;;:::o;533:631::-;610:20;601:5;:29;;;;;;;;:::i;:::-;;597:561;;;533:631;:::o;597:561::-;706:29;697:5;:38;;;;;;;;:::i;:::-;;693:465;;;751:34;;-1:-1:-1;;;751:34:202;;2948:2:223;751:34:202;;;2930:21:223;2987:2;2967:18;;;2960:30;3026:26;3006:18;;;2999:54;3070:18;;751:34:202;2746:348:223;693:465:202;815:35;806:5;:44;;;;;;;;:::i;:::-;;802:356;;;866:41;;-1:-1:-1;;;866:41:202;;3301:2:223;866:41:202;;;3283:21:223;3340:2;3320:18;;;3313:30;3379:33;3359:18;;;3352:61;3430:18;;866:41:202;3099:355:223;802:356:202;937:30;928:5;:39;;;;;;;;:::i;:::-;;924:234;;;983:44;;-1:-1:-1;;;983:44:202;;3661:2:223;983:44:202;;;3643:21:223;3700:2;3680:18;;;3673:30;3739:34;3719:18;;;3712:62;-1:-1:-1;;;3790:18:223;;;3783:32;3832:19;;983:44:202;3459:398:223;924:234:202;1057:30;1048:5;:39;;;;;;;;:::i;:::-;;1044:114;;;1103:44;;-1:-1:-1;;;1103:44:202;;4064:2:223;1103:44:202;;;4046:21:223;4103:2;4083:18;;;4076:30;4142:34;4122:18;;;4115:62;-1:-1:-1;;;4193:18:223;;;4186:32;4235:19;;1103:44:202;3862:398:223;5744:1603:202;5870:7;;6794:66;6781:79;;6777:161;;;-1:-1:-1;6892:1:202;;-1:-1:-1;6896:30:202;6876:51;;6777:161;6951:1;:7;;6956:2;6951:7;;:18;;;;;6962:1;:7;;6967:2;6962:7;;6951:18;6947:100;;;-1:-1:-1;7001:1:202;;-1:-1:-1;7005:30:202;6985:51;;6947:100;7158:24;;;7141:14;7158:24;;;;;;;;;4492:25:223;;;4565:4;4553:17;;4533:18;;;4526:45;;;;4587:18;;;4580:34;;;4630:18;;;4623:34;;;7158:24:202;;4464:19:223;;7158:24:202;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7158:24:202;;-1:-1:-1;;7158:24:202;;;-1:-1:-1;;;;;;;7196:20:202;;7192:101;;7248:1;7252:29;7232:50;;;;;;;7192:101;7311:6;-1:-1:-1;7319:20:202;;-1:-1:-1;5744:1603:202;;;;;;;;:::o;4774:379::-;4884:7;;-1:-1:-1;;;;;4981:75:202;;5082:3;5078:12;;;5092:2;5074:21;5121:25;5132:4;5074:21;5141:1;4981:75;5121:10;:25::i;:::-;5114:32;;;;;;4774:379;;;;;;:::o;14:127:223:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:989;223:6;231;284:2;272:9;263:7;259:23;255:32;252:52;;;300:1;297;290:12;252:52;336:9;323:23;313:33;;397:2;386:9;382:18;369:32;420:18;461:2;453:6;450:14;447:34;;;477:1;474;467:12;447:34;515:6;504:9;500:22;490:32;;560:7;553:4;549:2;545:13;541:27;531:55;;582:1;579;572:12;531:55;618:2;605:16;640:2;636;633:10;630:36;;;646:18;;:::i;:::-;721:2;715:9;689:2;775:13;;-1:-1:-1;;771:22:223;;;795:2;767:31;763:40;751:53;;;819:18;;;839:22;;;816:46;813:72;;;865:18;;:::i;:::-;905:10;901:2;894:22;940:2;932:6;925:18;980:7;975:2;970;966;962:11;958:20;955:33;952:53;;;1001:1;998;991:12;952:53;1057:2;1052;1048;1044:11;1039:2;1031:6;1027:15;1014:46;1102:1;1097:2;1092;1084:6;1080:15;1076:24;1069:35;1123:6;1113:16;;;;;;;146:989;;;;;:::o;1555:286::-;1614:6;1667:2;1655:9;1646:7;1642:23;1638:32;1635:52;;;1683:1;1680;1673:12;1635:52;1709:23;;-1:-1:-1;;;;;1761:31:223;;1751:42;;1741:70;;1807:1;1804;1797:12;2614:127;2675:10;2670:3;2666:20;2663:1;2656:31;2706:4;2703:1;2696:15;2730:4;2727:1;2720:15",
    "sourcePath": "d:/Github/new_token/contracts/contracts/mocks/ERC1271WalletMock.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.10+commit.fc410830"
    },
    "ast": {
        "absolutePath": "d:/Github/new_token/contracts/contracts/mocks/ERC1271WalletMock.sol",
        "exportedSymbols": {
            "Context": [
                26510
            ],
            "ECDSA": [
                27617
            ],
            "ERC1271WalletMock": [
                10120
            ],
            "IERC1271": [
                8122
            ],
            "Ownable": [
                2979
            ],
            "Strings": [
                27013
            ]
        },
        "id": 10121,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 10074,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:72"
            },
            {
                "absolutePath": "d:/Github/new_token/contracts/contracts/access/Ownable.sol",
                "file": "../access/Ownable.sol",
                "id": 10075,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 10121,
                "sourceUnit": 2980,
                "src": "58:31:72",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "d:/Github/new_token/contracts/contracts/interfaces/IERC1271.sol",
                "file": "../interfaces/IERC1271.sol",
                "id": 10076,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 10121,
                "sourceUnit": 8123,
                "src": "90:36:72",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "d:/Github/new_token/contracts/contracts/utils/cryptography/ECDSA.sol",
                "file": "../utils/cryptography/ECDSA.sol",
                "id": 10077,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 10121,
                "sourceUnit": 27618,
                "src": "127:41:72",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 10078,
                            "name": "Ownable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2979,
                            "src": "200:7:72"
                        },
                        "id": 10079,
                        "nodeType": "InheritanceSpecifier",
                        "src": "200:7:72"
                    },
                    {
                        "baseName": {
                            "id": 10080,
                            "name": "IERC1271",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8122,
                            "src": "209:8:72"
                        },
                        "id": 10081,
                        "nodeType": "InheritanceSpecifier",
                        "src": "209:8:72"
                    }
                ],
                "canonicalName": "ERC1271WalletMock",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 10120,
                "linearizedBaseContracts": [
                    10120,
                    8122,
                    2979,
                    26510
                ],
                "name": "ERC1271WalletMock",
                "nameLocation": "179:17:72",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 10090,
                            "nodeType": "Block",
                            "src": "259:49:72",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 10087,
                                                "name": "originalOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10083,
                                                "src": "287:13:72",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 10086,
                                            "name": "transferOwnership",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2958,
                                            "src": "269:17:72",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 10088,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "269:32:72",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 10089,
                                    "nodeType": "ExpressionStatement",
                                    "src": "269:32:72"
                                }
                            ]
                        },
                        "id": 10091,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 10084,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 10083,
                                    "mutability": "mutable",
                                    "name": "originalOwner",
                                    "nameLocation": "244:13:72",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 10091,
                                    "src": "236:21:72",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 10082,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "236:7:72",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "235:23:72"
                        },
                        "returnParameters": {
                            "id": 10085,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "259:0:72"
                        },
                        "scope": 10120,
                        "src": "224:84:72",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            8121
                        ],
                        "body": {
                            "id": 10118,
                            "nodeType": "Block",
                            "src": "427:110:72",
                            "statements": [
                                {
                                    "expression": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 10108,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "arguments": [
                                                    {
                                                        "id": 10103,
                                                        "name": "hash",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 10093,
                                                        "src": "458:4:72",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "id": 10104,
                                                        "name": "signature",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 10095,
                                                        "src": "464:9:72",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 10101,
                                                        "name": "ECDSA",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 27617,
                                                        "src": "444:5:72",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_ECDSA_$27617_$",
                                                            "typeString": "type(library ECDSA)"
                                                        }
                                                    },
                                                    "id": 10102,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "recover",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 27383,
                                                    "src": "444:13:72",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                                                    }
                                                },
                                                "id": 10105,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "444:30:72",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 10106,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2907,
                                                    "src": "478:5:72",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                        "typeString": "function () view returns (address)"
                                                    }
                                                },
                                                "id": 10107,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "478:7:72",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "444:41:72",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseExpression": {
                                            "arguments": [
                                                {
                                                    "hexValue": "30",
                                                    "id": 10114,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "528:1:72",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    }
                                                ],
                                                "id": 10113,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "521:6:72",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_bytes4_$",
                                                    "typeString": "type(bytes4)"
                                                },
                                                "typeName": {
                                                    "id": 10112,
                                                    "name": "bytes4",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "521:6:72",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 10115,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "521:9:72",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                            }
                                        },
                                        "id": 10116,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "444:86:72",
                                        "trueExpression": {
                                            "expression": {
                                                "expression": {
                                                    "id": 10109,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "488:4:72",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_ERC1271WalletMock_$10120",
                                                        "typeString": "contract ERC1271WalletMock"
                                                    }
                                                },
                                                "id": 10110,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "isValidSignature",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 10119,
                                                "src": "488:21:72",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                                    "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                                                }
                                            },
                                            "id": 10111,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "488:30:72",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                        }
                                    },
                                    "functionReturnParameters": 10100,
                                    "id": 10117,
                                    "nodeType": "Return",
                                    "src": "437:93:72"
                                }
                            ]
                        },
                        "functionSelector": "1626ba7e",
                        "id": 10119,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "isValidSignature",
                        "nameLocation": "323:16:72",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 10097,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "390:8:72"
                        },
                        "parameters": {
                            "id": 10096,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 10093,
                                    "mutability": "mutable",
                                    "name": "hash",
                                    "nameLocation": "348:4:72",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 10119,
                                    "src": "340:12:72",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 10092,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "340:7:72",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 10095,
                                    "mutability": "mutable",
                                    "name": "signature",
                                    "nameLocation": "367:9:72",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 10119,
                                    "src": "354:22:72",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 10094,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "354:5:72",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "339:38:72"
                        },
                        "returnParameters": {
                            "id": 10100,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 10099,
                                    "mutability": "mutable",
                                    "name": "magicValue",
                                    "nameLocation": "415:10:72",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 10119,
                                    "src": "408:17:72",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                    },
                                    "typeName": {
                                        "id": 10098,
                                        "name": "bytes4",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "408:6:72",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "407:19:72"
                        },
                        "scope": 10120,
                        "src": "314:223:72",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 10121,
                "src": "170:369:72",
                "usedErrors": []
            }
        ],
        "src": "33:507:72"
    },
    "functionHashes": {
        "isValidSignature(bytes32,bytes)": "1626ba7e",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "367400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "isValidSignature(bytes32,bytes)": "infinite",
            "owner()": "2323",
            "renounceOwnership()": "28114",
            "transferOwnership(address)": "28318"
        }
    }
}