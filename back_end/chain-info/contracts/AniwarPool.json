{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_aniToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EnterStaking",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LeaveStaking",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BONUS_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateRewardDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "enterStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "leaveStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "safeAniTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_apy",
          "type": "uint256"
        }
      ],
      "name": "setApy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "setEndTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "multiplierNumber",
          "type": "uint256"
        }
      ],
      "name": "updateMultiplier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "updateUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timeLastStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "15": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "16": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "2": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "23": "contracts/AniwarPool.sol",
    "3": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/Pausable.sol",
    "4": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
    "6": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "9": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/AniwarPool.sol",
    "exportedSymbols": {
      "Address": [
        5549
      ],
      "AniwarPool": [
        1327
      ],
      "Context": [
        5000
      ],
      "IERC20": [
        3825
      ],
      "Ownable": [
        3747
      ],
      "Pausable": [
        3035
      ],
      "ReentrancyGuard": [
        3865
      ],
      "SafeERC20": [
        4089
      ]
    },
    "id": 1328,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 773,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:23"
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 774,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1328,
        "sourceUnit": 3748,
        "src": "58:52:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 775,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1328,
        "sourceUnit": 4090,
        "src": "111:65:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 776,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1328,
        "sourceUnit": 3036,
        "src": "177:55:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 777,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1328,
        "sourceUnit": 3866,
        "src": "233:62:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 778,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3747,
              "src": "320:7:23"
            },
            "id": 779,
            "nodeType": "InheritanceSpecifier",
            "src": "320:7:23"
          },
          {
            "baseName": {
              "id": 780,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3035,
              "src": "329:8:23"
            },
            "id": 781,
            "nodeType": "InheritanceSpecifier",
            "src": "329:8:23"
          },
          {
            "baseName": {
              "id": 782,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3865,
              "src": "339:15:23"
            },
            "id": 783,
            "nodeType": "InheritanceSpecifier",
            "src": "339:15:23"
          }
        ],
        "canonicalName": "AniwarPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1327,
        "linearizedBaseContracts": [
          1327,
          3865,
          3035,
          3747,
          5000
        ],
        "name": "AniwarPool",
        "nameLocation": "306:10:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 787,
            "libraryName": {
              "id": 784,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4089,
              "src": "367:9:23"
            },
            "nodeType": "UsingForDirective",
            "src": "361:27:23",
            "typeName": {
              "id": 786,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 785,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3825,
                "src": "381:6:23"
              },
              "referencedDeclaration": 3825,
              "src": "381:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3825",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 792,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nameLocation": "417:11:23",
            "nodeType": "VariableDeclaration",
            "scope": 1327,
            "src": "393:62:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 788,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "393:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 790,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "441:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 789,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "431:9:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 791,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "431:24:23",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "AniwarPool.UserInfo",
            "id": 799,
            "members": [
              {
                "constant": false,
                "id": 794,
                "mutability": "mutable",
                "name": "timeLastStaked",
                "nameLocation": "521:14:23",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "513:22:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 793,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "513:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 796,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "590:6:23",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "582:14:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 795,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "582:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 798,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nameLocation": "659:10:23",
                "nodeType": "VariableDeclaration",
                "scope": 799,
                "src": "651:18:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 797,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "651:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nameLocation": "494:8:23",
            "nodeType": "StructDefinition",
            "scope": 1327,
            "src": "487:205:23",
            "visibility": "public"
          },
          {
            "canonicalName": "AniwarPool.PoolInfo",
            "id": 809,
            "members": [
              {
                "constant": false,
                "id": 802,
                "mutability": "mutable",
                "name": "lpToken",
                "nameLocation": "757:7:23",
                "nodeType": "VariableDeclaration",
                "scope": 809,
                "src": "750:14:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$3825",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 801,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 800,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3825,
                    "src": "750:6:23"
                  },
                  "referencedDeclaration": 3825,
                  "src": "750:6:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3825",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 804,
                "mutability": "mutable",
                "name": "apy",
                "nameLocation": "815:3:23",
                "nodeType": "VariableDeclaration",
                "scope": 809,
                "src": "807:11:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 803,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "807:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 806,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "871:9:23",
                "nodeType": "VariableDeclaration",
                "scope": 809,
                "src": "863:17:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 805,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "863:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 808,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "898:7:23",
                "nodeType": "VariableDeclaration",
                "scope": 809,
                "src": "890:15:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 807,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "890:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nameLocation": "731:8:23",
            "nodeType": "StructDefinition",
            "scope": 1327,
            "src": "724:188:23",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8aa28550",
            "id": 812,
            "mutability": "mutable",
            "name": "BONUS_MULTIPLIER",
            "nameLocation": "978:16:23",
            "nodeType": "VariableDeclaration",
            "scope": 1327,
            "src": "963:35:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 810,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "963:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 811,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "997:1:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a2f3d09",
            "id": 815,
            "mutability": "mutable",
            "name": "poolInfo",
            "nameLocation": "1047:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 1327,
            "src": "1031:24:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
              "typeString": "struct AniwarPool.PoolInfo"
            },
            "typeName": {
              "id": 814,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 813,
                "name": "PoolInfo",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 809,
                "src": "1031:8:23"
              },
              "referencedDeclaration": 809,
              "src": "1031:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PoolInfo_$809_storage_ptr",
                "typeString": "struct AniwarPool.PoolInfo"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1959a002",
            "id": 820,
            "mutability": "mutable",
            "name": "userInfo",
            "nameLocation": "1145:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 1327,
            "src": "1109:44:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$799_storage_$",
              "typeString": "mapping(address => struct AniwarPool.UserInfo)"
            },
            "typeName": {
              "id": 819,
              "keyType": {
                "id": 816,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1117:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1109:28:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$799_storage_$",
                "typeString": "mapping(address => struct AniwarPool.UserInfo)"
              },
              "valueType": {
                "id": 818,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 817,
                  "name": "UserInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "1128:8:23"
                },
                "referencedDeclaration": 799,
                "src": "1128:8:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                  "typeString": "struct AniwarPool.UserInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 826,
            "name": "EnterStaking",
            "nameLocation": "1166:12:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1195:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "1179:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1209:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "1201:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:38:23"
            },
            "src": "1160:57:23"
          },
          {
            "anonymous": false,
            "id": 832,
            "name": "LeaveStaking",
            "nameLocation": "1228:12:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 828,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1257:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1241:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1271:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1263:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1240:38:23"
            },
            "src": "1222:57:23"
          },
          {
            "anonymous": false,
            "id": 838,
            "name": "ClaimReward",
            "nameLocation": "1290:11:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1318:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "1302:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1332:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "1324:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1301:38:23"
            },
            "src": "1284:56:23"
          },
          {
            "anonymous": false,
            "id": 844,
            "name": "EmergencyWithdraw",
            "nameLocation": "1351:17:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1385:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "1369:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 842,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1399:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "1391:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:38:23"
            },
            "src": "1345:62:23"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "1507:279:23",
              "statements": [
                {
                  "assignments": [
                    855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 855,
                      "mutability": "mutable",
                      "name": "startTime",
                      "nameLocation": "1525:9:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 872,
                      "src": "1517:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 854,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1517:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 860,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 856,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1537:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1537:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 858,
                      "name": "_startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "1555:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1537:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1517:48:23"
                },
                {
                  "expression": {
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 861,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "1599:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                        "typeString": "struct AniwarPool.PoolInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 863,
                          "name": "_aniToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "1642:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3825",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 864,
                          "name": "_apy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "1670:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 865,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "1699:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 866,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 855,
                            "src": "1731:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3331353536393236",
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1743:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31556926_by_1",
                              "typeString": "int_const 31556926"
                            },
                            "value": "31556926"
                          },
                          "src": "1731:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$3825",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 862,
                        "name": "PoolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "1610:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PoolInfo_$809_storage_ptr_$",
                          "typeString": "type(struct AniwarPool.PoolInfo storage pointer)"
                        }
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "lpToken",
                        "apy",
                        "startTime",
                        "endTime"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1610:169:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$809_memory_ptr",
                        "typeString": "struct AniwarPool.PoolInfo memory"
                      }
                    },
                    "src": "1599:180:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                      "typeString": "struct AniwarPool.PoolInfo storage ref"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:180:23"
                }
              ]
            },
            "id": 873,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "_aniToken",
                  "nameLocation": "1441:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "1434:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3825",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 845,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3825,
                      "src": "1434:6:23"
                    },
                    "referencedDeclaration": 3825,
                    "src": "1434:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3825",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "_apy",
                  "nameLocation": "1468:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "1460:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nameLocation": "1490:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "1482:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1424:82:23"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1507:0:23"
            },
            "scope": 1327,
            "src": "1413:373:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "1861:52:23",
              "statements": [
                {
                  "expression": {
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 880,
                      "name": "BONUS_MULTIPLIER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "1871:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 881,
                      "name": "multiplierNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 875,
                      "src": "1890:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1871:35:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "1871:35:23"
                }
              ]
            },
            "functionSelector": "5ffe6146",
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 878,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 877,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3690,
                  "src": "1851:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1851:9:23"
              }
            ],
            "name": "updateMultiplier",
            "nameLocation": "1801:16:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "multiplierNumber",
                  "nameLocation": "1826:16:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "1818:24:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1817:26:23"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1861:0:23"
            },
            "scope": 1327,
            "src": "1792:121:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "2039:36:23",
              "statements": [
                {
                  "expression": {
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 892,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "2049:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                          "typeString": "struct AniwarPool.PoolInfo storage ref"
                        }
                      },
                      "id": 894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "apy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 804,
                      "src": "2049:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 895,
                      "name": "_apy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "2064:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2049:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "2049:19:23"
                }
              ]
            },
            "functionSelector": "3b3f5e36",
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 890,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 889,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3690,
                  "src": "2029:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "2029:9:23"
              }
            ],
            "name": "setApy",
            "nameLocation": "2001:6:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "_apy",
                  "nameLocation": "2016:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 899,
                  "src": "2008:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2007:14:23"
            },
            "returnParameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2039:0:23"
            },
            "scope": 1327,
            "src": "1992:83:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 919,
              "nodeType": "Block",
              "src": "2209:90:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 907,
                          "name": "_endTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 901,
                          "src": "2227:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 908,
                            "name": "getCurrentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "2238:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2238:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2227:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 906,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2219:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2219:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:36:23"
                },
                {
                  "expression": {
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 913,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "2265:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                          "typeString": "struct AniwarPool.PoolInfo storage ref"
                        }
                      },
                      "id": 915,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 808,
                      "src": "2265:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 916,
                      "name": "_endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "2284:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2265:27:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "2265:27:23"
                }
              ]
            },
            "functionSelector": "ccb98ffc",
            "id": 920,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 904,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 903,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3690,
                  "src": "2199:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "2199:9:23"
              }
            ],
            "name": "setEndTime",
            "nameLocation": "2163:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "_endTime",
                  "nameLocation": "2182:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "2174:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2173:18:23"
            },
            "returnParameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2209:0:23"
            },
            "scope": 1327,
            "src": "2154:145:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "2399:627:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 928,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "2417:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                              "typeString": "struct AniwarPool.PoolInfo storage ref"
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 808,
                          "src": "2417:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 930,
                            "name": "getCurrentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "2436:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2436:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2417:35:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54696d653a204661726d2068617320656e646564",
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2454:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92e5e801bc0cc204af15df5ef94c94d3e5d2ab8ff161911c68335a9c41b0ab42",
                          "typeString": "literal_string \"Time: Farm has ended\""
                        },
                        "value": "Time: Farm has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92e5e801bc0cc204af15df5ef94c94d3e5d2ab8ff161911c68335a9c41b0ab42",
                          "typeString": "literal_string \"Time: Farm has ended\""
                        }
                      ],
                      "id": 927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2409:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2409:68:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "2409:68:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 940,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2535:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2535:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 944,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2555:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AniwarPool_$1327",
                                    "typeString": "contract AniwarPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AniwarPool_$1327",
                                    "typeString": "contract AniwarPool"
                                  }
                                ],
                                "id": 943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2547:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 942,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2547:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2547:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 937,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "2508:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                                  "typeString": "struct AniwarPool.PoolInfo storage ref"
                                }
                              },
                              "id": 938,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 802,
                              "src": "2508:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3825",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3784,
                            "src": "2508:26:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2508:53:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 947,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 922,
                          "src": "2565:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2508:64:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c6f77616e63653a204e6f7420656e6f75676820416c6c6f77616e6365",
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2586:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea9be2296d78834893af53f57e742705e615919347ff0fd998ace0ccf0928385",
                          "typeString": "literal_string \"Allowance: Not enough Allowance\""
                        },
                        "value": "Allowance: Not enough Allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea9be2296d78834893af53f57e742705e615919347ff0fd998ace0ccf0928385",
                          "typeString": "literal_string \"Allowance: Not enough Allowance\""
                        }
                      ],
                      "id": 936,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2487:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:142:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "2487:142:23"
                },
                {
                  "assignments": [
                    954
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 954,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "2656:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1004,
                      "src": "2639:21:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                        "typeString": "struct AniwarPool.UserInfo"
                      },
                      "typeName": {
                        "id": 953,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 952,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "2639:8:23"
                        },
                        "referencedDeclaration": 799,
                        "src": "2639:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 959,
                  "initialValue": {
                    "baseExpression": {
                      "id": 955,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "2663:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$799_storage_$",
                        "typeString": "mapping(address => struct AniwarPool.UserInfo storage ref)"
                      }
                    },
                    "id": 958,
                    "indexExpression": {
                      "expression": {
                        "id": 956,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2672:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2672:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2663:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$799_storage",
                      "typeString": "struct AniwarPool.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2639:44:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 960,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 922,
                      "src": "2697:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2707:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2697:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 990,
                  "nodeType": "IfStatement",
                  "src": "2693:231:23",
                  "trueBody": {
                    "id": 989,
                    "nodeType": "Block",
                    "src": "2710:214:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 970,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2783:3:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 971,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2783:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2775:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 968,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2775:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2775:19:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 975,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2820:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AniwarPool_$1327",
                                    "typeString": "contract AniwarPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AniwarPool_$1327",
                                    "typeString": "contract AniwarPool"
                                  }
                                ],
                                "id": 974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2812:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 973,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2812:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2812:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 977,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "2843:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 963,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "2724:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                                  "typeString": "struct AniwarPool.PoolInfo storage ref"
                                }
                              },
                              "id": 966,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 802,
                              "src": "2724:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3825",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3922,
                            "src": "2724:33:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3825_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3825_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2724:140:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 979,
                        "nodeType": "ExpressionStatement",
                        "src": "2724:140:23"
                      },
                      {
                        "expression": {
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 980,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 954,
                              "src": "2878:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                                "typeString": "struct AniwarPool.UserInfo storage pointer"
                              }
                            },
                            "id": 982,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 796,
                            "src": "2878:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 983,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 954,
                                "src": "2892:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                                  "typeString": "struct AniwarPool.UserInfo storage pointer"
                                }
                              },
                              "id": 984,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 796,
                              "src": "2892:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 985,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "2906:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2892:21:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2878:35:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 988,
                        "nodeType": "ExpressionStatement",
                        "src": "2878:35:23"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 991,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "2933:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo storage pointer"
                        }
                      },
                      "id": 993,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeLastStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 794,
                      "src": "2933:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 994,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2955:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2955:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2933:37:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 997,
                  "nodeType": "ExpressionStatement",
                  "src": "2933:37:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 999,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2999:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2999:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1001,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 922,
                        "src": "3011:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 998,
                      "name": "EnterStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 826,
                      "src": "2986:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2986:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1003,
                  "nodeType": "EmitStatement",
                  "src": "2981:38:23"
                }
              ]
            },
            "functionSelector": "41441d3b",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 925,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 924,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3864,
                  "src": "2386:12:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "2386:12:23"
              }
            ],
            "name": "enterStaking",
            "nameLocation": "2349:12:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2370:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "2362:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2362:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2361:17:23"
            },
            "returnParameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2399:0:23"
            },
            "scope": 1327,
            "src": "2340:686:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1070,
              "nodeType": "Block",
              "src": "3146:392:23",
              "statements": [
                {
                  "assignments": [
                    1016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1016,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "3173:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "3156:21:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$809_storage_ptr",
                        "typeString": "struct AniwarPool.PoolInfo"
                      },
                      "typeName": {
                        "id": 1015,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1014,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 809,
                          "src": "3156:8:23"
                        },
                        "referencedDeclaration": 809,
                        "src": "3156:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$809_storage_ptr",
                          "typeString": "struct AniwarPool.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1018,
                  "initialValue": {
                    "id": 1017,
                    "name": "poolInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 815,
                    "src": "3180:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                      "typeString": "struct AniwarPool.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3156:32:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1020,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3209:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3209:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1019,
                      "name": "updateUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "3198:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:22:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "3198:22:23"
                },
                {
                  "assignments": [
                    1026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1026,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "3247:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "3230:21:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                        "typeString": "struct AniwarPool.UserInfo"
                      },
                      "typeName": {
                        "id": 1025,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1024,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "3230:8:23"
                        },
                        "referencedDeclaration": 799,
                        "src": "3230:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1031,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1027,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "3254:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$799_storage_$",
                        "typeString": "mapping(address => struct AniwarPool.UserInfo storage ref)"
                      }
                    },
                    "id": 1030,
                    "indexExpression": {
                      "expression": {
                        "id": 1028,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3263:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3263:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3254:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$799_storage",
                      "typeString": "struct AniwarPool.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3230:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1033,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "3292:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                              "typeString": "struct AniwarPool.UserInfo storage pointer"
                            }
                          },
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 796,
                          "src": "3292:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1035,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "3307:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3292:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261773a206e6f7420676f6f64",
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3316:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        },
                        "value": "withdraw: not good"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        }
                      ],
                      "id": 1032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3284:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3284:53:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "3284:53:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1040,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "3351:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3361:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3351:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1063,
                  "nodeType": "IfStatement",
                  "src": "3347:137:23",
                  "trueBody": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "3364:120:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1043,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "3378:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                                "typeString": "struct AniwarPool.UserInfo storage pointer"
                              }
                            },
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 796,
                            "src": "3378:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1046,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "3392:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                                  "typeString": "struct AniwarPool.UserInfo storage pointer"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 796,
                              "src": "3392:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1048,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "3406:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3392:21:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3378:35:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1051,
                        "nodeType": "ExpressionStatement",
                        "src": "3378:35:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1057,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3453:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3453:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1059,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "3465:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1052,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "3427:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$809_storage_ptr",
                                  "typeString": "struct AniwarPool.PoolInfo storage pointer"
                                }
                              },
                              "id": 1055,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 802,
                              "src": "3427:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3825",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3896,
                            "src": "3427:25:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3825_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3825_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3427:46:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1061,
                        "nodeType": "ExpressionStatement",
                        "src": "3427:46:23"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1065,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3511:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3511:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1067,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "3523:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1064,
                      "name": "LeaveStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "3498:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3498:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1069,
                  "nodeType": "EmitStatement",
                  "src": "3493:38:23"
                }
              ]
            },
            "functionSelector": "1058d281",
            "id": 1071,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1010,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1009,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2991,
                  "src": "3119:13:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "3119:13:23"
              },
              {
                "id": 1012,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1011,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3864,
                  "src": "3133:12:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "3133:12:23"
              }
            ],
            "name": "leaveStaking",
            "nameLocation": "3082:12:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3103:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "3095:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3095:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3094:17:23"
            },
            "returnParameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3146:0:23"
            },
            "scope": 1327,
            "src": "3073:465:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "3593:291:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1076,
                        "name": "getCurrentTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "3607:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3607:16:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 1078,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "3627:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                          "typeString": "struct AniwarPool.PoolInfo storage ref"
                        }
                      },
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 808,
                      "src": "3627:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3607:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1083,
                  "nodeType": "IfStatement",
                  "src": "3603:73:23",
                  "trueBody": {
                    "id": 1082,
                    "nodeType": "Block",
                    "src": "3645:31:23",
                    "statements": [
                      {
                        "functionReturnParameters": 1075,
                        "id": 1081,
                        "nodeType": "Return",
                        "src": "3659:7:23"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1086
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1086,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "3702:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "3685:21:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                        "typeString": "struct AniwarPool.UserInfo"
                      },
                      "typeName": {
                        "id": 1085,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1084,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "3685:8:23"
                        },
                        "referencedDeclaration": 799,
                        "src": "3685:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1090,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1087,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "3709:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$799_storage_$",
                        "typeString": "mapping(address => struct AniwarPool.UserInfo storage ref)"
                      }
                    },
                    "id": 1089,
                    "indexExpression": {
                      "id": 1088,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "3718:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3709:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$799_storage",
                      "typeString": "struct AniwarPool.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3685:46:23"
                },
                {
                  "expression": {
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1091,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1086,
                        "src": "3741:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo storage pointer"
                        }
                      },
                      "id": 1093,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 798,
                      "src": "3741:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1095,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "3793:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                              "typeString": "struct AniwarPool.UserInfo storage pointer"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timeLastStaked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 794,
                          "src": "3793:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1097,
                            "name": "getCurrentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "3826:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3826:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1099,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "3856:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                              "typeString": "struct AniwarPool.UserInfo storage pointer"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 796,
                          "src": "3856:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1094,
                        "name": "calculateRewardDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "3760:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 1101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3760:117:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3741:136:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:136:23"
                }
              ]
            },
            "functionSelector": "ed03b336",
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUser",
            "nameLocation": "3553:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "3572:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "3564:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3564:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3563:22:23"
            },
            "returnParameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3593:0:23"
            },
            "scope": 1327,
            "src": "3544:340:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1157,
              "nodeType": "Block",
              "src": "3969:306:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3990:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3990:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1112,
                      "name": "updateUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "3979:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3979:22:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "3979:22:23"
                },
                {
                  "assignments": [
                    1119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1119,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "4028:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1157,
                      "src": "4011:21:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                        "typeString": "struct AniwarPool.UserInfo"
                      },
                      "typeName": {
                        "id": 1118,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1117,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "4011:8:23"
                        },
                        "referencedDeclaration": 799,
                        "src": "4011:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1124,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1120,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "4035:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$799_storage_$",
                        "typeString": "mapping(address => struct AniwarPool.UserInfo storage ref)"
                      }
                    },
                    "id": 1123,
                    "indexExpression": {
                      "expression": {
                        "id": 1121,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4044:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4044:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4035:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$799_storage",
                      "typeString": "struct AniwarPool.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4011:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1126,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "4073:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                              "typeString": "struct AniwarPool.UserInfo storage pointer"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 798,
                          "src": "4073:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4091:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4073:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657761726420416d6f756e743a207775743f",
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4094:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d34aa8b90f77ff517a65586c45ba567e04108d06dcfcde04dcefffb9aa5189a7",
                          "typeString": "literal_string \"Reward Amount: wut?\""
                        },
                        "value": "Reward Amount: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d34aa8b90f77ff517a65586c45ba567e04108d06dcfcde04dcefffb9aa5189a7",
                          "typeString": "literal_string \"Reward Amount: wut?\""
                        }
                      ],
                      "id": 1125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4065:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4065:51:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "4065:51:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1138,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4156:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4156:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1140,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1119,
                          "src": "4168:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                            "typeString": "struct AniwarPool.UserInfo storage pointer"
                          }
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 798,
                        "src": "4168:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1133,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "4126:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                            "typeString": "struct AniwarPool.PoolInfo storage ref"
                          }
                        },
                        "id": 1136,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 802,
                        "src": "4126:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3825",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3896,
                      "src": "4126:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3825_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3825_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4126:58:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "4126:58:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4211:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4211:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1147,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1119,
                          "src": "4223:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                            "typeString": "struct AniwarPool.UserInfo storage pointer"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 798,
                        "src": "4223:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1144,
                      "name": "ClaimReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "4199:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4199:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "EmitStatement",
                  "src": "4194:45:23"
                },
                {
                  "expression": {
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1151,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "4249:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo storage pointer"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 798,
                      "src": "4249:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4267:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4249:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "4249:19:23"
                }
              ]
            },
            "functionSelector": "b88a802f",
            "id": 1158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1107,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2991,
                  "src": "3942:13:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "3942:13:23"
              },
              {
                "id": 1110,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1109,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3864,
                  "src": "3956:12:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "3956:12:23"
              }
            ],
            "name": "claimReward",
            "nameLocation": "3921:11:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3932:2:23"
            },
            "returnParameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3969:0:23"
            },
            "scope": 1327,
            "src": "3912:363:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1204,
              "nodeType": "Block",
              "src": "4393:245:23",
              "statements": [
                {
                  "assignments": [
                    1165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1165,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "4420:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1204,
                      "src": "4403:21:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                        "typeString": "struct AniwarPool.UserInfo"
                      },
                      "typeName": {
                        "id": 1164,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1163,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 799,
                          "src": "4403:8:23"
                        },
                        "referencedDeclaration": 799,
                        "src": "4403:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1170,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1166,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "4427:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$799_storage_$",
                        "typeString": "mapping(address => struct AniwarPool.UserInfo storage ref)"
                      }
                    },
                    "id": 1169,
                    "indexExpression": {
                      "expression": {
                        "id": 1167,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4436:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4436:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4427:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$799_storage",
                      "typeString": "struct AniwarPool.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4403:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1178,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4495:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4495:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4487:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1176,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4487:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4487:19:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1181,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1165,
                          "src": "4508:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                            "typeString": "struct AniwarPool.UserInfo storage pointer"
                          }
                        },
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 796,
                        "src": "4508:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1171,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "4457:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                            "typeString": "struct AniwarPool.PoolInfo storage ref"
                          }
                        },
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 802,
                        "src": "4457:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3825",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3896,
                      "src": "4457:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3825_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3825_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4457:63:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "4457:63:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4553:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4553:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1188,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1165,
                          "src": "4565:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                            "typeString": "struct AniwarPool.UserInfo storage pointer"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 796,
                        "src": "4565:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1185,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "4535:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4535:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1191,
                  "nodeType": "EmitStatement",
                  "src": "4530:47:23"
                },
                {
                  "expression": {
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1192,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1165,
                        "src": "4587:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo storage pointer"
                        }
                      },
                      "id": 1194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 796,
                      "src": "4587:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4601:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4587:15:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "4587:15:23"
                },
                {
                  "expression": {
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1198,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1165,
                        "src": "4612:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$799_storage_ptr",
                          "typeString": "struct AniwarPool.UserInfo storage pointer"
                        }
                      },
                      "id": 1200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 798,
                      "src": "4612:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4630:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4612:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1203,
                  "nodeType": "ExpressionStatement",
                  "src": "4612:19:23"
                }
              ]
            },
            "functionSelector": "db2e21bc",
            "id": 1205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1160,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2991,
                  "src": "4379:13:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "4379:13:23"
              }
            ],
            "name": "emergencyWithdraw",
            "nameLocation": "4352:17:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4369:2:23"
            },
            "returnParameters": {
              "id": 1162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4393:0:23"
            },
            "scope": 1327,
            "src": "4343:295:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1253,
              "nodeType": "Block",
              "src": "4814:276:23",
              "statements": [
                {
                  "assignments": [
                    1217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1217,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nameLocation": "4832:10:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1253,
                      "src": "4824:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4824:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1224,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1218,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1209,
                            "src": "4846:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1219,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "4852:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4846:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1221,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4845:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1222,
                      "name": "BONUS_MULTIPLIER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "4861:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4845:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4824:53:23"
                },
                {
                  "assignments": [
                    1226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1226,
                      "mutability": "mutable",
                      "name": "numberOfDays",
                      "nameLocation": "4895:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1253,
                      "src": "4887:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4887:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1230,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1227,
                      "name": "multiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "4910:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3836343030",
                      "id": 1228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4923:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "86400"
                    },
                    "src": "4910:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4887:41:23"
                },
                {
                  "assignments": [
                    1232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1232,
                      "mutability": "mutable",
                      "name": "apyPerDay",
                      "nameLocation": "4971:9:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1253,
                      "src": "4963:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1231,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4963:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1240,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1233,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "4984:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                                "typeString": "struct AniwarPool.PoolInfo storage ref"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "apy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 804,
                            "src": "4984:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 1235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4999:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "4984:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1237,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4983:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "333635",
                      "id": 1238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5007:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_365_by_1",
                        "typeString": "int_const 365"
                      },
                      "value": "365"
                    },
                    "src": "4983:27:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4963:47:23"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1241,
                              "name": "_userAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1211,
                              "src": "5028:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1242,
                              "name": "numberOfDays",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1226,
                              "src": "5042:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5028:26:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1244,
                            "name": "apyPerDay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1232,
                            "src": "5057:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5028:38:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1246,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5027:40:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 1247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5071:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 1248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5078:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "5071:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        }
                      ],
                      "id": 1250,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5070:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "5027:56:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1215,
                  "id": 1252,
                  "nodeType": "Return",
                  "src": "5020:63:23"
                }
              ]
            },
            "functionSelector": "6780d2db",
            "id": 1254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRewardDebt",
            "nameLocation": "4685:19:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "4722:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "4714:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4714:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4745:3:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "4737:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4737:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1211,
                  "mutability": "mutable",
                  "name": "_userAmount",
                  "nameLocation": "4766:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "4758:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4758:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4704:79:23"
            },
            "returnParameters": {
              "id": 1215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "4805:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4804:9:23"
            },
            "scope": 1327,
            "src": "4676:414:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1298,
              "nodeType": "Block",
              "src": "5272:239:23",
              "statements": [
                {
                  "assignments": [
                    1264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1264,
                      "mutability": "mutable",
                      "name": "aniBal",
                      "nameLocation": "5290:6:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1298,
                      "src": "5282:14:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5282:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1273,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1270,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5334:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AniwarPool_$1327",
                              "typeString": "contract AniwarPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AniwarPool_$1327",
                              "typeString": "contract AniwarPool"
                            }
                          ],
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5326:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1268,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5326:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5326:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1265,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "5299:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                            "typeString": "struct AniwarPool.PoolInfo storage ref"
                          }
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 802,
                        "src": "5299:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3825",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3764,
                      "src": "5299:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5299:41:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5282:58:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1274,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
                      "src": "5354:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1275,
                      "name": "aniBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "5364:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5354:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1296,
                    "nodeType": "Block",
                    "src": "5441:64:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1292,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1256,
                              "src": "5481:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1293,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "5486:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1287,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "5455:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                                  "typeString": "struct AniwarPool.PoolInfo storage ref"
                                }
                              },
                              "id": 1290,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 802,
                              "src": "5455:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3825",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3774,
                            "src": "5455:25:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5455:39:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1295,
                        "nodeType": "ExpressionStatement",
                        "src": "5455:39:23"
                      }
                    ]
                  },
                  "id": 1297,
                  "nodeType": "IfStatement",
                  "src": "5350:155:23",
                  "trueBody": {
                    "id": 1286,
                    "nodeType": "Block",
                    "src": "5372:63:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1282,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1256,
                              "src": "5412:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1283,
                              "name": "aniBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "5417:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1277,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "5386:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$809_storage",
                                  "typeString": "struct AniwarPool.PoolInfo storage ref"
                                }
                              },
                              "id": 1280,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 802,
                              "src": "5386:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3825",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3774,
                            "src": "5386:25:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5386:38:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1285,
                        "nodeType": "ExpressionStatement",
                        "src": "5386:38:23"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8502b5ca",
            "id": 1299,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1261,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1260,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3690,
                  "src": "5262:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5262:9:23"
              }
            ],
            "name": "safeAniTransfer",
            "nameLocation": "5209:15:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5233:3:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1299,
                  "src": "5225:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5225:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1258,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5246:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1299,
                  "src": "5238:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5238:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5224:30:23"
            },
            "returnParameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5272:0:23"
            },
            "scope": 1327,
            "src": "5200:311:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1307,
              "nodeType": "Block",
              "src": "5573:39:23",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1304,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "5590:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "5590:15:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1303,
                  "id": 1306,
                  "nodeType": "Return",
                  "src": "5583:22:23"
                }
              ]
            },
            "functionSelector": "29cb924d",
            "id": 1308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "5526:14:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5540:2:23"
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1308,
                  "src": "5564:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5564:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5563:9:23"
            },
            "scope": 1327,
            "src": "5517:95:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1316,
              "nodeType": "Block",
              "src": "5652:25:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1313,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3018,
                      "src": "5662:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5662:8:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1315,
                  "nodeType": "ExpressionStatement",
                  "src": "5662:8:23"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 1317,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1310,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3690,
                  "src": "5642:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5642:9:23"
              }
            ],
            "name": "pause",
            "nameLocation": "5627:5:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5632:2:23"
            },
            "returnParameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5652:0:23"
            },
            "scope": 1327,
            "src": "5618:59:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1325,
              "nodeType": "Block",
              "src": "5719:27:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1322,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3034,
                      "src": "5729:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5729:10:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1324,
                  "nodeType": "ExpressionStatement",
                  "src": "5729:10:23"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 1326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1320,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1319,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3690,
                  "src": "5709:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5709:9:23"
              }
            ],
            "name": "unpause",
            "nameLocation": "5692:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5699:2:23"
            },
            "returnParameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5719:0:23"
            },
            "scope": 1327,
            "src": "5683:63:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1328,
        "src": "297:5451:23",
        "usedErrors": []
      }
    ],
    "src": "32:5717:23"
  },
  "bytecode": "608060405260016002553480156200001657600080fd5b506040516200144a3803806200144a833981016040819052620000399162000130565b6200004433620000e0565b6000805460ff60a01b191681556001805562000061824262000175565b90506040518060800160405280856001600160a01b03168152602001848152602001828152602001826301e1853e6200009b919062000175565b90528051600380546001600160a01b0319166001600160a01b039092169190911790556020810151600455604081015160055560600151600655506200019c92505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156200014657600080fd5b83516001600160a01b03811681146200015e57600080fd5b602085015160409095015190969495509392505050565b600082198211156200019757634e487b7160e01b600052601160045260246000fd5b500190565b61129e80620001ac6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063b88a802f1161007c578063b88a802f146102b1578063ccb98ffc146102b9578063db2e21bc146102cc578063e63ab1e9146102d4578063ed03b336146102fb578063f2fde38b1461030e57600080fd5b8063715018a61461026a5780638456cb59146102725780638502b5ca1461027a5780638aa285501461028d5780638da5cb5b1461029657600080fd5b806341441d3b116100ff57806341441d3b146101cb5780635a2f3d09146101de5780635c975abb146102275780635ffe6146146102445780636780d2db1461025757600080fd5b80631058d2811461013c5780631959a0021461015157806329cb924d146101a05780633b3f5e36146101b05780633f4ba83a146101c3575b600080fd5b61014f61014a366004610ff0565b610321565b005b61018061015f366004611025565b60076020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b425b604051908152602001610197565b61014f6101be366004610ff0565b61044e565b61014f61047d565b61014f6101d9366004610ff0565b6104b1565b6003546004546005546006546101fd936001600160a01b031692919084565b604080516001600160a01b0390951685526020850193909352918301526060820152608001610197565b600054600160a01b900460ff166040519015158152602001610197565b61014f610252366004610ff0565b610664565b6101a2610265366004611040565b610693565b61014f610716565b61014f61074a565b61014f61028836600461106c565b61077c565b6101a260025481565b6000546040516001600160a01b039091168152602001610197565b61014f6108d9565b61014f6102c7366004610ff0565b6109f1565b61014f610a2c565b6101a27f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b61014f610309366004611025565b610acd565b61014f61031c366004611025565b610b1e565b600054600160a01b900460ff16156103545760405162461bcd60e51b815260040161034b90611096565b60405180910390fd5b600260015414156103775760405162461bcd60e51b815260040161034b906110c0565b6002600155600361038733610acd565b33600090815260076020526040902060018101548311156103df5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015260640161034b565b8215610410578281600101546103f5919061110d565b60018201558154610410906001600160a01b03163385610bb9565b60405183815233907fbeeac20c93f16ecc5d2707dffeb3263a7f99053ac0aa548803e9e8b5a00074389060200160405180910390a250506001805550565b6000546001600160a01b031633146104785760405162461bcd60e51b815260040161034b90611124565b600455565b6000546001600160a01b031633146104a75760405162461bcd60e51b815260040161034b90611124565b6104af610c1c565b565b600260015414156104d45760405162461bcd60e51b815260040161034b906110c0565b600260015542600654116105215760405162461bcd60e51b8152602060048201526014602482015273151a5b594e8811985c9b481a185cc8195b99195960621b604482015260640161034b565b600354604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e90604401602060405180830381865afa15801561056f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105939190611159565b10156105e15760405162461bcd60e51b815260206004820152601f60248201527f416c6c6f77616e63653a204e6f7420656e6f75676820416c6c6f77616e636500604482015260640161034b565b33600090815260076020526040902081156106245760035461060e906001600160a01b0316333085610cb9565b81816001015461061e9190611172565b60018201555b42815560405182815233907ff4202ce22960ada59aa4bb9f0e324d8f77576be8352767dfc0aca182a4bf8e459060200160405180910390a2505060018055565b6000546001600160a01b0316331461068e5760405162461bcd60e51b815260040161034b90611124565b600255565b60008060025485856106a5919061110d565b6106af919061118a565b905060006106c062015180836111a9565b9050600061016d6003600101546103e86106da919061118a565b6106e491906111a9565b9050620f4240816106f5848861118a565b6106ff919061118a565b61070991906111a9565b93505050505b9392505050565b6000546001600160a01b031633146107405760405162461bcd60e51b815260040161034b90611124565b6104af6000610cf1565b6000546001600160a01b031633146107745760405162461bcd60e51b815260040161034b90611124565b6104af610d41565b6000546001600160a01b031633146107a65760405162461bcd60e51b815260040161034b90611124565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108139190611159565b90508082111561089b5760035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044015b6020604051808303816000875af1158015610871573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089591906111cb565b50505050565b60035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb90604401610852565b505050565b600054600160a01b900460ff16156109035760405162461bcd60e51b815260040161034b90611096565b600260015414156109265760405162461bcd60e51b815260040161034b906110c0565b600260015561093433610acd565b336000908152600760205260409020600281015461098a5760405162461bcd60e51b815260206004820152601360248201527252657761726420416d6f756e743a207775743f60681b604482015260640161034b565b60028101546003546109a9916001600160a01b03909116903390610bb9565b600281015460405190815233907fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e9060200160405180910390a2600060029091015560018055565b6000546001600160a01b03163314610a1b5760405162461bcd60e51b815260040161034b90611124565b428111610a2757600080fd5b600655565b600054600160a01b900460ff1615610a565760405162461bcd60e51b815260040161034b90611096565b33600081815260076020526040902060018101546003549192610a82926001600160a01b031691610bb9565b600181015460405190815233907f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96959060200160405180910390a2600060018201819055600290910155565b6006544210610ad95750565b6001600160a01b03811660009081526007602052604090208054610b0290428360010154610693565b816002016000828254610b159190611172565b90915550505050565b6000546001600160a01b03163314610b485760405162461bcd60e51b815260040161034b90611124565b6001600160a01b038116610bad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034b565b610bb681610cf1565b50565b6040516001600160a01b0383166024820152604481018290526108d490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610da6565b600054600160a01b900460ff16610c6c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161034b565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6040516001600160a01b03808516602483015283166044820152606481018290526108959085906323b872dd60e01b90608401610be5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615610d6b5760405162461bcd60e51b815260040161034b90611096565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c9c3390565b6000610dfb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e789092919063ffffffff16565b8051909150156108d45780806020019051810190610e1991906111cb565b6108d45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161034b565b6060610e878484600085610e8f565b949350505050565b606082471015610ef05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161034b565b843b610f3e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161034b565b600080866001600160a01b03168587604051610f5a9190611219565b60006040518083038185875af1925050503d8060008114610f97576040519150601f19603f3d011682016040523d82523d6000602084013e610f9c565b606091505b5091509150610fac828286610fb7565b979650505050505050565b60608315610fc657508161070f565b825115610fd65782518084602001fd5b8160405162461bcd60e51b815260040161034b9190611235565b60006020828403121561100257600080fd5b5035919050565b80356001600160a01b038116811461102057600080fd5b919050565b60006020828403121561103757600080fd5b61070f82611009565b60008060006060848603121561105557600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561107f57600080fd5b61108883611009565b946020939093013593505050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561111f5761111f6110f7565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561116b57600080fd5b5051919050565b60008219821115611185576111856110f7565b500190565b60008160001904831182151516156111a4576111a46110f7565b500290565b6000826111c657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156111dd57600080fd5b8151801515811461070f57600080fd5b60005b838110156112085781810151838201526020016111f0565b838111156108955750506000910152565b6000825161122b8184602087016111ed565b9190910192915050565b60208152600082518060208401526112548160408501602087016111ed565b601f01601f1916919091016040019291505056fea2646970667358221220069701ccb884b3fcd5ea23bebcd01f4026f908b4e53e858bc6cdd356ac38384264736f6c634300080b0033",
  "bytecodeSha1": "b9a63deef241073fde6b7156cc98d10d46648846",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "AniwarPool",
  "coverageMap": {
    "branches": {
      "15": {
        "Address.functionCallWithValue": {
          "60": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "61": [
            7335,
            7342,
            false
          ],
          "62": [
            7476,
            7497,
            false
          ]
        }
      },
      "16": {},
      "2": {
        "Ownable.transferOwnership": {
          "63": [
            1934,
            1956,
            true
          ]
        }
      },
      "23": {
        "AniwarPool.enterStaking": {
          "54": [
            2417,
            2452,
            true
          ],
          "55": [
            2508,
            2572,
            true
          ],
          "56": [
            2697,
            2708,
            false
          ]
        },
        "AniwarPool.leaveStaking": {
          "52": [
            3292,
            3314,
            true
          ],
          "53": [
            3351,
            3362,
            false
          ]
        },
        "AniwarPool.safeAniTransfer": {
          "57": [
            5354,
            5370,
            false
          ]
        },
        "AniwarPool.setEndTime": {
          "58": [
            2227,
            2254,
            true
          ]
        },
        "AniwarPool.updateUser": {
          "59": [
            3607,
            3643,
            false
          ]
        }
      },
      "3": {},
      "4": {
        "Pausable.paused": {
          "64": [
            2259,
            2278,
            true
          ]
        }
      },
      "6": {},
      "9": {
        "SafeERC20._callOptionalReturn": {
          "65": [
            3668,
            3689,
            false
          ],
          "66": [
            3752,
            3782,
            true
          ]
        }
      }
    },
    "statements": {
      "15": {
        "Address.functionCall": {
          "46": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "47": [
            4737,
            4818
          ],
          "48": [
            4828,
            4888
          ],
          "49": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "50": [
            7358,
            7375
          ],
          "51": [
            7802,
            7822
          ]
        }
      },
      "16": {
        "Context._msgSender": {
          "8": [
            659,
            676
          ]
        }
      },
      "2": {
        "Ownable._setOwner": {
          "41": [
            2131,
            2148
          ],
          "42": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "2": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "19": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "35": [
            1926,
            1999
          ],
          "36": [
            2009,
            2028
          ]
        }
      },
      "23": {
        "AniwarPool.calculateRewardDebt": {
          "18": [
            5020,
            5083
          ]
        },
        "AniwarPool.claimReward": {
          "23": [
            3979,
            4001
          ],
          "24": [
            4065,
            4116
          ],
          "25": [
            4126,
            4184
          ],
          "26": [
            4194,
            4239
          ],
          "27": [
            4249,
            4268
          ]
        },
        "AniwarPool.emergencyWithdraw": {
          "30": [
            4457,
            4520
          ],
          "31": [
            4530,
            4577
          ],
          "32": [
            4587,
            4602
          ],
          "33": [
            4612,
            4631
          ]
        },
        "AniwarPool.enterStaking": {
          "11": [
            2409,
            2477
          ],
          "12": [
            2487,
            2629
          ],
          "13": [
            2724,
            2864
          ],
          "14": [
            2878,
            2913
          ],
          "15": [
            2933,
            2970
          ],
          "16": [
            2981,
            3019
          ]
        },
        "AniwarPool.getCurrentTime": {
          "0": [
            5583,
            5605
          ]
        },
        "AniwarPool.leaveStaking": {
          "3": [
            3198,
            3220
          ],
          "4": [
            3284,
            3337
          ],
          "5": [
            3378,
            3413
          ],
          "6": [
            3427,
            3473
          ],
          "7": [
            3493,
            3531
          ]
        },
        "AniwarPool.pause": {
          "20": [
            5662,
            5670
          ]
        },
        "AniwarPool.safeAniTransfer": {
          "21": [
            5386,
            5424
          ],
          "22": [
            5455,
            5494
          ]
        },
        "AniwarPool.setApy": {
          "9": [
            2049,
            2068
          ]
        },
        "AniwarPool.setEndTime": {
          "28": [
            2219,
            2255
          ],
          "29": [
            2265,
            2292
          ]
        },
        "AniwarPool.unpause": {
          "10": [
            5729,
            5739
          ]
        },
        "AniwarPool.updateMultiplier": {
          "17": [
            1871,
            1906
          ]
        },
        "AniwarPool.updateUser": {
          "34": [
            3741,
            3877
          ]
        }
      },
      "3": {
        "Pausable._pause": {
          "43": [
            1865,
            1879
          ],
          "44": [
            1889,
            1914
          ]
        },
        "Pausable._unpause": {
          "38": [
            2111,
            2126
          ],
          "39": [
            2136,
            2163
          ]
        },
        "Pausable.paused": {
          "1": [
            1104,
            1118
          ]
        }
      },
      "4": {},
      "6": {},
      "9": {
        "SafeERC20._callOptionalReturn": {
          "45": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "37": [
            746,
            832
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "40": [
            983,
            1079
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "297:5451:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:465;;;;;;:::i;:::-;;:::i;:::-;;1109:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;770:25:27;;;826:2;811:18;;804:34;;;;854:18;;;847:34;758:2;743:18;1109:44:23;;;;;;;;5517:95;5590:15;5517:95;;;1038:25:27;;;1026:2;1011:18;5517:95:23;892:177:27;1992:83:23;;;;;;:::i;:::-;;:::i;5683:63::-;;;:::i;2340:686::-;;;;;;:::i;:::-;;:::i;1031:24::-;;;;;;;;;;;-1:-1:-1;;;;;1031:24:23;;;;;;;;;;-1:-1:-1;;;;;1338:32:27;;;1320:51;;1402:2;1387:18;;1380:34;;;;1430:18;;;1423:34;1488:2;1473:18;;1466:34;1307:3;1292:19;1031:24:23;1074:432:27;1041:84:3;1088:4;1111:7;-1:-1:-1;;;1111:7:3;;;;1041:84;;1676:14:27;;1669:22;1651:41;;1639:2;1624:18;1041:84:3;1511:187:27;1792:121:23;;;;;;:::i;:::-;;:::i;4676:414::-;;;;;;:::i;:::-;;:::i;1605:92:2:-;;;:::i;5618:59:23:-;;;:::i;5200:311::-;;;;;;:::i;:::-;;:::i;963:35::-;;;;;;973:85:2;1019:7;1045:6;973:85;;-1:-1:-1;;;;;1045:6:2;;;2429:51:27;;2417:2;2402:18;973:85:2;2283:203:27;3912:363:23;;;:::i;2154:145::-;;;;;;:::i;:::-;;:::i;4343:295::-;;;:::i;393:62::-;;431:24;393:62;;3544:340;;;;;;:::i;:::-;;:::i;1846:189:2:-;;;;;;:::i;:::-;;:::i;3073:465:23:-;1088:4:3;1111:7;-1:-1:-1;;;1111:7:3;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:3;;;;;;;:::i;:::-;;;;;;;;;1680:1:4::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:4::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;3180:8:23::2;3198:22;3209:10;3198;:22::i;:::-;3263:10;3230:21;3254:20:::0;;;:8:::2;:20;::::0;;;;3292:11:::2;::::0;::::2;::::0;:22;-1:-1:-1;3292:22:23::2;3284:53;;;::::0;-1:-1:-1;;;3284:53:23;;3580:2:27;3284:53:23::2;::::0;::::2;3562:21:27::0;3619:2;3599:18;;;3592:30;-1:-1:-1;;;3638:18:27;;;3631:48;3696:18;;3284:53:23::2;3378:342:27::0;3284:53:23::2;3351:11:::0;;3347:137:::2;;3406:7;3392:4;:11;;;:21;;;;:::i;:::-;3378:11;::::0;::::2;:35:::0;3427:12;;:46:::2;::::0;-1:-1:-1;;;;;3427:12:23::2;3453:10;3465:7:::0;3427:25:::2;:46::i;:::-;3498:33;::::0;1038:25:27;;;3511:10:23::2;::::0;3498:33:::2;::::0;1026:2:27;1011:18;3498:33:23::2;;;;;;;-1:-1:-1::0;;1637:1:4::1;2562:22:::0;;-1:-1:-1;3073:465:23:o;1992:83::-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:16;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;2049:12:23;:19;1992:83::o;5683:63::-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:16;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;5729:10:23::1;:8;:10::i;:::-;5683:63::o:0;2340:686::-;1680:1:4;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:4;;;;;;;:::i;:::-;1680:1;2389:7;:18;5590:15:23;2417:16;;:35:::1;2409:68;;;::::0;-1:-1:-1;;;2409:68:23;;4550:2:27;2409:68:23::1;::::0;::::1;4532:21:27::0;4589:2;4569:18;;;4562:30;-1:-1:-1;;;4608:18:27;;;4601:50;4668:18;;2409:68:23::1;4348:344:27::0;2409:68:23::1;2508:8;:16:::0;:53:::1;::::0;-1:-1:-1;;;2508:53:23;;2535:10:::1;2508:53;::::0;::::1;4909:34:27::0;2555:4:23::1;4959:18:27::0;;;4952:43;2565:7:23;;-1:-1:-1;;;;;2508:16:23::1;::::0;:26:::1;::::0;4844:18:27;;2508:53:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;2487:142;;;::::0;-1:-1:-1;;;2487:142:23;;5397:2:27;2487:142:23::1;::::0;::::1;5379:21:27::0;5436:2;5416:18;;;5409:30;5475:33;5455:18;;;5448:61;5526:18;;2487:142:23::1;5195:355:27::0;2487:142:23::1;2672:10;2639:21;2663:20:::0;;;:8:::1;:20;::::0;;;;2697:11;;2693:231:::1;;2724:8;:16:::0;:140:::1;::::0;-1:-1:-1;;;;;2724:16:23::1;2783:10;2820:4;2843:7:::0;2724:33:::1;:140::i;:::-;2906:7;2892:4;:11;;;:21;;;;:::i;:::-;2878:11;::::0;::::1;:35:::0;2693:231:::1;2955:15;2933:37:::0;;2986:33:::1;::::0;1038:25:27;;;2999:10:23::1;::::0;2986:33:::1;::::0;1026:2:27;1011:18;2986:33:23::1;;;;;;;-1:-1:-1::0;;1637:1:4;2562:22;;2340:686:23:o;1792:121::-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:16;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1871:16:23::1;:35:::0;1792:121::o;4676:414::-;4805:7;4824:18;4861:16;;4852:5;4846:3;:11;;;;:::i;:::-;4845:32;;;;:::i;:::-;4824:53;-1:-1:-1;4887:20:23;4910:18;4923:5;4824:53;4910:18;:::i;:::-;4887:41;;4963:17;5007:3;4984:8;:12;;;4999:4;4984:19;;;;:::i;:::-;4983:27;;;;:::i;:::-;4963:47;-1:-1:-1;5071:11:23;4963:47;5028:26;5042:12;5028:11;:26;:::i;:::-;:38;;;;:::i;:::-;5027:56;;;;:::i;:::-;5020:63;;;;;4676:414;;;;;;:::o;1605:92:2:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:16;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;5618:59:23:-:0;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:16;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;5662:8:23::1;:6;:8::i;5200:311::-:0;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:16;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;5299:8:23::1;:16:::0;:41:::1;::::0;-1:-1:-1;;;5299:41:23;;5334:4:::1;5299:41;::::0;::::1;2429:51:27::0;5282:14:23::1;::::0;-1:-1:-1;;;;;5299:16:23::1;::::0;:26:::1;::::0;2402:18:27;;5299:41:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5282:58;;5364:6;5354:7;:16;5350:155;;;5386:8;:16:::0;:38:::1;::::0;-1:-1:-1;;;5386:38:23;;-1:-1:-1;;;;;6275:32:27;;;5386:38:23::1;::::0;::::1;6257:51:27::0;6324:18;;;6317:34;;;5386:16:23;;::::1;::::0;:25:::1;::::0;6230:18:27;;5386:38:23::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5272:239;5200:311:::0;;:::o;5350:155::-:1;5455:8;:16:::0;:39:::1;::::0;-1:-1:-1;;;5455:39:23;;-1:-1:-1;;;;;6275:32:27;;;5455:39:23::1;::::0;::::1;6257:51:27::0;6324:18;;;6317:34;;;5455:16:23;;::::1;::::0;:25:::1;::::0;6230:18:27;;5455:39:23::1;6083:274:27::0;5350:155:23::1;5272:239;5200:311:::0;;:::o;3912:363::-;1088:4:3;1111:7;-1:-1:-1;;;1111:7:3;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:3;;;;;;;:::i;:::-;1680:1:4::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:4::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;3979:22:23::2;3990:10;3979;:22::i;:::-;4044:10;4011:21;4035:20:::0;;;:8:::2;:20;::::0;;;;4073:15:::2;::::0;::::2;::::0;4065:51:::2;;;::::0;-1:-1:-1;;;4065:51:23;;6846:2:27;4065:51:23::2;::::0;::::2;6828:21:27::0;6885:2;6865:18;;;6858:30;-1:-1:-1;;;6904:18:27;;;6897:49;6963:18;;4065:51:23::2;6644:343:27::0;4065:51:23::2;4168:15;::::0;::::2;::::0;4126:8:::2;:16:::0;:58:::2;::::0;-1:-1:-1;;;;;4126:16:23;;::::2;::::0;4156:10:::2;::::0;4126:29:::2;:58::i;:::-;4223:15;::::0;::::2;::::0;4199:40:::2;::::0;1038:25:27;;;4211:10:23::2;::::0;4199:40:::2;::::0;1026:2:27;1011:18;4199:40:23::2;;;;;;;4267:1;4249:15;::::0;;::::2;:19:::0;1637:1:4::1;2562:22:::0;;3912:363:23:o;2154:145::-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:16;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;5590:15:23;2227:8:::1;:27;2219:36;;;::::0;::::1;;2265:16:::0;:27;2154:145::o;4343:295::-;1088:4:3;1111:7;-1:-1:-1;;;1111:7:3;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:3;;;;;;;:::i;:::-;4436:10:23::1;4403:21;4427:20:::0;;;:8:::1;:20;::::0;;;;4508:11:::1;::::0;::::1;::::0;4457:8:::1;:16:::0;4427:20;;4457:63:::1;::::0;-1:-1:-1;;;;;4457:16:23::1;::::0;:29:::1;:63::i;:::-;4565:11;::::0;::::1;::::0;4535:42:::1;::::0;1038:25:27;;;4553:10:23::1;::::0;4535:42:::1;::::0;1026:2:27;1011:18;4535:42:23::1;;;;;;;4601:1;4587:11;::::0;::::1;:15:::0;;;4612::::1;::::0;;::::1;:19:::0;4343:295::o;3544:340::-;3627:16;;5590:15;3607:36;3603:73;;3544:340;:::o;3603:73::-;-1:-1:-1;;;;;3709:22:23;;3685:21;3709:22;;;:8;:22;;;;;3793:19;;3760:117;;5590:15;3856:4;:11;;;3760:19;:117::i;:::-;3741:4;:15;;;:136;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;3544:340:23:o;1846:189:2:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:16;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;7194:2:27;1926:73:2::1;::::0;::::1;7176:21:27::0;7233:2;7213:18;;;7206:30;7272:34;7252:18;;;7245:62;-1:-1:-1;;;7323:18:27;;;7316:36;7369:19;;1926:73:2::1;6992:402:27::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;634:205:9:-;773:58;;-1:-1:-1;;;;;6275:32:27;;773:58:9;;;6257:51:27;6324:18;;;6317:34;;;746:86:9;;766:5;;-1:-1:-1;;;796:23:9;6230:18:27;;773:58:9;;;;-1:-1:-1;;773:58:9;;;;;;;;;;;;;;-1:-1:-1;;;;;773:58:9;-1:-1:-1;;;;;;773:58:9;;;;;;;;;;746:19;:86::i;2053:117:3:-;1088:4;1111:7;-1:-1:-1;;;1111:7:3;;;;1612:41;;;;-1:-1:-1;;;1612:41:3;;7601:2:27;1612:41:3;;;7583:21:27;7640:2;7620:18;;;7613:30;-1:-1:-1;;;7659:18:27;;;7652:50;7719:18;;1612:41:3;7399:344:27;1612:41:3;2121:5:::1;2111:15:::0;;-1:-1:-1;;;;2111:15:3::1;::::0;;2141:22:::1;666:10:16::0;2150:12:3::1;2141:22;::::0;-1:-1:-1;;;;;2447:32:27;;;2429:51;;2417:2;2402:18;2141:22:3::1;;;;;;;2053:117::o:0;845:241:9:-;1010:68;;-1:-1:-1;;;;;8006:15:27;;;1010:68:9;;;7988:34:27;8058:15;;8038:18;;;8031:43;8090:18;;;8083:34;;;983:96:9;;1003:5;;-1:-1:-1;;;1033:27:9;7923:18:27;;1010:68:9;7748:375:27;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;1806:115:3:-;1088:4;1111:7;-1:-1:-1;;;1111:7:3;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:3;;;;;;;:::i;:::-;1865:7:::1;:14:::0;;-1:-1:-1;;;;1865:14:3::1;-1:-1:-1::0;;;1865:14:3::1;::::0;;1894:20:::1;1901:12;666:10:16::0;;587:96;3140:706:9;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:9;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:9;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:9;;8330:2:27;3744:85:9;;;8312:21:27;8369:2;8349:18;;;8342:30;8408:34;8388:18;;;8381:62;-1:-1:-1;;;8459:18:27;;;8452:40;8509:19;;3744:85:9;8128:406:27;3461:223:15;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:15:o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:15;;8741:2:27;4737:81:15;;;8723:21:27;8780:2;8760:18;;;8753:30;8819:34;8799:18;;;8792:62;-1:-1:-1;;;8870:18:27;;;8863:36;8916:19;;4737:81:15;8539:402:27;4737:81:15;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:15;;9148:2:27;4828:60:15;;;9130:21:27;9187:2;9167:18;;;9160:30;9226:31;9206:18;;;9199:59;9275:18;;4828:60:15;8946:353:27;4828:60:15;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:15;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:15:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:15;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:15;;;;;;;;:::i;14:180:27:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:27;;14:180;-1:-1:-1;14:180:27:o;199:173::-;267:20;;-1:-1:-1;;;;;316:31:27;;306:42;;296:70;;362:1;359;352:12;296:70;199:173;;;:::o;377:186::-;436:6;489:2;477:9;468:7;464:23;460:32;457:52;;;505:1;502;495:12;457:52;528:29;547:9;528:29;:::i;1703:316::-;1780:6;1788;1796;1849:2;1837:9;1828:7;1824:23;1820:32;1817:52;;;1865:1;1862;1855:12;1817:52;-1:-1:-1;;1888:23:27;;;1958:2;1943:18;;1930:32;;-1:-1:-1;2009:2:27;1994:18;;;1981:32;;1703:316;-1:-1:-1;1703:316:27:o;2024:254::-;2092:6;2100;2153:2;2141:9;2132:7;2128:23;2124:32;2121:52;;;2169:1;2166;2159:12;2121:52;2192:29;2211:9;2192:29;:::i;:::-;2182:39;2268:2;2253:18;;;;2240:32;;-1:-1:-1;;;2024:254:27:o;2673:340::-;2875:2;2857:21;;;2914:2;2894:18;;;2887:30;-1:-1:-1;;;2948:2:27;2933:18;;2926:46;3004:2;2989:18;;2673:340::o;3018:355::-;3220:2;3202:21;;;3259:2;3239:18;;;3232:30;3298:33;3293:2;3278:18;;3271:61;3364:2;3349:18;;3018:355::o;3725:127::-;3786:10;3781:3;3777:20;3774:1;3767:31;3817:4;3814:1;3807:15;3841:4;3838:1;3831:15;3857:125;3897:4;3925:1;3922;3919:8;3916:34;;;3930:18;;:::i;:::-;-1:-1:-1;3967:9:27;;3857:125::o;3987:356::-;4189:2;4171:21;;;4208:18;;;4201:30;4267:34;4262:2;4247:18;;4240:62;4334:2;4319:18;;3987:356::o;5006:184::-;5076:6;5129:2;5117:9;5108:7;5104:23;5100:32;5097:52;;;5145:1;5142;5135:12;5097:52;-1:-1:-1;5168:16:27;;5006:184;-1:-1:-1;5006:184:27:o;5555:128::-;5595:3;5626:1;5622:6;5619:1;5616:13;5613:39;;;5632:18;;:::i;:::-;-1:-1:-1;5668:9:27;;5555:128::o;5688:168::-;5728:7;5794:1;5790;5786:6;5782:14;5779:1;5776:21;5771:1;5764:9;5757:17;5753:45;5750:71;;;5801:18;;:::i;:::-;-1:-1:-1;5841:9:27;;5688:168::o;5861:217::-;5901:1;5927;5917:132;;5971:10;5966:3;5962:20;5959:1;5952:31;6006:4;6003:1;5996:15;6034:4;6031:1;6024:15;5917:132;-1:-1:-1;6063:9:27;;5861:217::o;6362:277::-;6429:6;6482:2;6470:9;6461:7;6457:23;6453:32;6450:52;;;6498:1;6495;6488:12;6450:52;6530:9;6524:16;6583:5;6576:13;6569:21;6562:5;6559:32;6549:60;;6605:1;6602;6595:12;9304:258;9376:1;9386:113;9400:6;9397:1;9394:13;9386:113;;;9476:11;;;9470:18;9457:11;;;9450:39;9422:2;9415:10;9386:113;;;9517:6;9514:1;9511:13;9508:48;;;-1:-1:-1;;9552:1:27;9534:16;;9527:27;9304:258::o;9567:274::-;9696:3;9734:6;9728:13;9750:53;9796:6;9791:3;9784:4;9776:6;9772:17;9750:53;:::i;:::-;9819:16;;;;;9567:274;-1:-1:-1;;9567:274:27:o;9846:383::-;9995:2;9984:9;9977:21;9958:4;10027:6;10021:13;10070:6;10065:2;10054:9;10050:18;10043:34;10086:66;10145:6;10140:2;10129:9;10125:18;10120:2;10112:6;10108:15;10086:66;:::i;:::-;10213:2;10192:15;-1:-1:-1;;10188:29:27;10173:45;;;;10220:2;10169:54;;9846:383;-1:-1:-1;;9846:383:27:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    297,
    5748
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xCCB98FFC EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xED03B336 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8502B5CA EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41441D3B GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x41441D3B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x5A2F3D09 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x6780D2DB EQ PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1058D281 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x3B3F5E36 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x47D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x1FD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x197 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x716 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x74A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH2 0x1A2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x1A2 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x1025 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH2 0x14F PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x1025 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x377 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 PUSH2 0x387 CALLER PUSH2 0xACD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x410 JUMPI DUP3 DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE DUP2 SLOAD PUSH2 0x410 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP6 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xBEEAC20C93F16ECC5D2707DFFEB3263A7F99053AC0AA548803E9E8B5A0007438 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0xC1C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE TIMESTAMP PUSH1 0x6 SLOAD GT PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151A5B594E8811985C9B481A185CC8195B991959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST LT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E63653A204E6F7420656E6F75676820416C6C6F77616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 ISZERO PUSH2 0x624 JUMPI PUSH1 0x3 SLOAD PUSH2 0x60E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0xCB9 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST TIMESTAMP DUP2 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF4202CE22960ADA59AA4BB9F0E324D8F77576BE8352767DFC0ACA182A4BF8E45 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD DUP6 DUP6 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6C0 PUSH3 0x15180 DUP4 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16D PUSH1 0x3 PUSH1 0x1 ADD SLOAD PUSH2 0x3E8 PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH3 0xF4240 DUP2 PUSH2 0x6F5 DUP5 DUP9 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH2 0x4AF PUSH1 0x0 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x89B JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x871 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x895 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x852 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x934 CALLER PUSH2 0xACD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x52657761726420416D6F756E743A207775743F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x9A9 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1124 JUMP JUMPDEST TIMESTAMP DUP2 GT PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1096 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 PUSH2 0xA82 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0xAD9 JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xB02 SWAP1 TIMESTAMP DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x693 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB15 SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0xCF1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x8D4 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x895 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC9C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE78 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x8D4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE87 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xE8F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFAC DUP3 DUP3 DUP7 PUSH2 0xFB7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xFC6 JUMPI POP DUP2 PUSH2 0x70F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xFD6 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70F DUP3 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1088 DUP4 PUSH2 0x1009 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x111F JUMPI PUSH2 0x111F PUSH2 0x10F7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x116B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1185 JUMPI PUSH2 0x1185 PUSH2 0x10F7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x11A4 JUMPI PUSH2 0x11A4 PUSH2 0x10F7 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1208 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11F0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x895 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x122B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1254 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD SWAP8 ADD 0xCC 0xB8 DUP5 0xB3 0xFC 0xD5 0xEA 0x23 0xBE 0xBC 0xD0 0x1F BLOCKHASH 0x26 0xF9 ADDMOD 0xB4 0xE5 RETURNDATACOPY DUP6 DUP12 0xC6 0xCD 0xD3 JUMP 0xAC CODESIZE CODESIZE TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "6": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "16": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "17": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "POP",
      "path": "23"
    },
    "18": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "21": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "LT",
      "path": "23"
    },
    "22": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x137"
    },
    "25": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "26": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "29": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "SHR",
      "path": "23"
    },
    "32": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "33": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "GT",
      "path": "23"
    },
    "39": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "43": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "44": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB88A802F"
    },
    "49": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "GT",
      "path": "23"
    },
    "50": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "54": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "55": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB88A802F"
    },
    "60": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "61": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B1"
    },
    "64": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "65": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "66": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xCCB98FFC"
    },
    "71": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "72": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B9"
    },
    "75": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "76": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "77": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDB2E21BC"
    },
    "82": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "83": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CC"
    },
    "86": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "87": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "88": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xE63AB1E9"
    },
    "93": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "94": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D4"
    },
    "97": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "98": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "99": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xED03B336"
    },
    "104": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "105": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FB"
    },
    "108": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "109": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "110": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "116": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x30E"
    },
    "119": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "120": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "123": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "124": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "125": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "126": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "132": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26A"
    },
    "135": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "136": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "137": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8456CB59"
    },
    "142": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "143": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x272"
    },
    "146": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "147": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "148": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8502B5CA"
    },
    "153": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "154": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27A"
    },
    "157": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "158": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "159": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8AA28550"
    },
    "164": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "165": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x28D"
    },
    "168": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "169": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "170": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8DA5CB5B"
    },
    "175": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "176": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x296"
    },
    "179": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "180": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "183": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "184": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "185": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "186": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x41441D3B"
    },
    "191": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "GT",
      "path": "23"
    },
    "192": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "196": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "197": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x41441D3B"
    },
    "202": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "203": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CB"
    },
    "206": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "207": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "208": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x5A2F3D09"
    },
    "213": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "214": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1DE"
    },
    "217": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "218": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "219": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x5C975ABB"
    },
    "224": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "225": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x227"
    },
    "228": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "229": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "230": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x5FFE6146"
    },
    "235": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "236": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x244"
    },
    "239": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "240": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "241": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6780D2DB"
    },
    "246": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "247": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x257"
    },
    "250": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "251": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "254": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "255": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "256": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "257": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1058D281"
    },
    "262": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "263": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13C"
    },
    "266": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "267": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "268": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1959A002"
    },
    "273": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "274": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x151"
    },
    "277": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "278": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "279": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x29CB924D"
    },
    "284": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "285": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A0"
    },
    "288": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "289": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "290": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3B3F5E36"
    },
    "295": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "296": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B0"
    },
    "299": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "300": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "301": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3F4BA83A"
    },
    "306": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "EQ",
      "path": "23"
    },
    "307": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C3"
    },
    "310": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "311": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "312": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "314": {
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "315": {
      "first_revert": true,
      "fn": null,
      "offset": [
        297,
        5748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "316": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "317": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "320": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14A"
    },
    "323": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "324": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "326": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFF0"
    },
    "329": {
      "fn": "AniwarPool.leaveStaking",
      "jump": "i",
      "offset": [
        3073,
        3538
      ],
      "op": "JUMP",
      "path": "23"
    },
    "330": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "331": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x321"
    },
    "334": {
      "fn": "AniwarPool.leaveStaking",
      "jump": "i",
      "offset": [
        3073,
        3538
      ],
      "op": "JUMP",
      "path": "23"
    },
    "335": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "336": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "STOP",
      "path": "23"
    },
    "337": {
      "offset": [
        1109,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "338": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x180"
    },
    "341": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15F"
    },
    "344": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "345": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "347": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1025"
    },
    "350": {
      "fn": "AniwarPool.leaveStaking",
      "jump": "i",
      "offset": [
        1109,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "351": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "352": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "354": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "356": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "357": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "359": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "360": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "DUP2",
      "path": "23"
    },
    "361": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "362": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "364": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "365": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "366": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "367": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "368": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "370": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "DUP3",
      "path": "23"
    },
    "371": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "372": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "373": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "375": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "376": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "377": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "378": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "379": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "380": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "381": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "382": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "DUP4",
      "path": "23"
    },
    "383": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "384": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "385": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "387": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "388": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "389": {
      "op": "SWAP4"
    },
    "390": {
      "op": "DUP5"
    },
    "391": {
      "op": "MSTORE"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "394": {
      "op": "DUP5"
    },
    "395": {
      "op": "ADD"
    },
    "396": {
      "op": "SWAP3"
    },
    "397": {
      "op": "SWAP1"
    },
    "398": {
      "op": "SWAP3"
    },
    "399": {
      "op": "MSTORE"
    },
    "400": {
      "op": "SWAP1"
    },
    "401": {
      "op": "DUP3"
    },
    "402": {
      "op": "ADD"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "406": {
      "op": "ADD"
    },
    "407": {
      "offset": [
        1109,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "408": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "410": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "411": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "412": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "413": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SUB",
      "path": "23"
    },
    "414": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "415": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        1109,
        1153
      ],
      "op": "RETURN",
      "path": "23"
    },
    "416": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5517,
        5612
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "417": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5590,
        5605
      ],
      "op": "TIMESTAMP",
      "path": "23",
      "statement": 0
    },
    "418": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5517,
        5612
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "419": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5517,
        5612
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "421": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5517,
        5612
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "422": {
      "op": "SWAP1"
    },
    "423": {
      "op": "DUP2"
    },
    "424": {
      "op": "MSTORE"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "427": {
      "op": "ADD"
    },
    "428": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5517,
        5612
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x197"
    },
    "431": {
      "op": "JUMP"
    },
    "432": {
      "fn": "AniwarPool.setApy",
      "offset": [
        1992,
        2075
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "433": {
      "fn": "AniwarPool.setApy",
      "offset": [
        1992,
        2075
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "436": {
      "fn": "AniwarPool.setApy",
      "offset": [
        1992,
        2075
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE"
    },
    "439": {
      "fn": "AniwarPool.setApy",
      "offset": [
        1992,
        2075
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "440": {
      "fn": "AniwarPool.setApy",
      "offset": [
        1992,
        2075
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "442": {
      "fn": "AniwarPool.setApy",
      "offset": [
        1992,
        2075
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFF0"
    },
    "445": {
      "fn": "AniwarPool.setApy",
      "jump": "i",
      "offset": [
        1992,
        2075
      ],
      "op": "JUMP",
      "path": "23"
    },
    "446": {
      "fn": "AniwarPool.setApy",
      "offset": [
        1992,
        2075
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "447": {
      "fn": "AniwarPool.setApy",
      "offset": [
        1992,
        2075
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x44E"
    },
    "450": {
      "fn": "AniwarPool.setApy",
      "jump": "i",
      "offset": [
        1992,
        2075
      ],
      "op": "JUMP",
      "path": "23"
    },
    "451": {
      "fn": "AniwarPool.unpause",
      "offset": [
        5683,
        5746
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "452": {
      "fn": "AniwarPool.unpause",
      "offset": [
        5683,
        5746
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "455": {
      "fn": "AniwarPool.unpause",
      "offset": [
        5683,
        5746
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x47D"
    },
    "458": {
      "fn": "AniwarPool.unpause",
      "jump": "i",
      "offset": [
        5683,
        5746
      ],
      "op": "JUMP",
      "path": "23"
    },
    "459": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2340,
        3026
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "460": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2340,
        3026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "463": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2340,
        3026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D9"
    },
    "466": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2340,
        3026
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "467": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2340,
        3026
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "469": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2340,
        3026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFF0"
    },
    "472": {
      "fn": "AniwarPool.enterStaking",
      "jump": "i",
      "offset": [
        2340,
        3026
      ],
      "op": "JUMP",
      "path": "23"
    },
    "473": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2340,
        3026
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "474": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2340,
        3026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4B1"
    },
    "477": {
      "fn": "AniwarPool.enterStaking",
      "jump": "i",
      "offset": [
        2340,
        3026
      ],
      "op": "JUMP",
      "path": "23"
    },
    "478": {
      "offset": [
        1031,
        1055
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "479": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "481": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "482": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "484": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "485": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "487": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "488": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "490": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "491": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FD"
    },
    "494": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "501": {
      "op": "SHL"
    },
    "502": {
      "op": "SUB"
    },
    "503": {
      "offset": [
        1031,
        1055
      ],
      "op": "AND",
      "path": "23"
    },
    "504": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "505": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "506": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "507": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "DUP5",
      "path": "23"
    },
    "508": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "JUMP",
      "path": "23"
    },
    "509": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "510": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "512": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "DUP1",
      "path": "23"
    },
    "513": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        1031,
        1055
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "520": {
      "op": "SHL"
    },
    "521": {
      "op": "SUB"
    },
    "522": {
      "op": "SWAP1"
    },
    "523": {
      "op": "SWAP6"
    },
    "524": {
      "op": "AND"
    },
    "525": {
      "op": "DUP6"
    },
    "526": {
      "op": "MSTORE"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "529": {
      "op": "DUP6"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "op": "SWAP4"
    },
    "532": {
      "op": "SWAP1"
    },
    "533": {
      "op": "SWAP4"
    },
    "534": {
      "op": "MSTORE"
    },
    "535": {
      "op": "SWAP2"
    },
    "536": {
      "op": "DUP4"
    },
    "537": {
      "op": "ADD"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "541": {
      "op": "DUP3"
    },
    "542": {
      "op": "ADD"
    },
    "543": {
      "op": "MSTORE"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "546": {
      "op": "ADD"
    },
    "547": {
      "offset": [
        1031,
        1055
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x197"
    },
    "550": {
      "op": "JUMP"
    },
    "551": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "552": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "554": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 1
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "559": {
      "op": "SHL"
    },
    "560": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "561": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "3"
    },
    "562": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "564": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "3"
    },
    "565": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "567": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "568": {
      "op": "SWAP1"
    },
    "569": {
      "op": "ISZERO"
    },
    "570": {
      "op": "ISZERO"
    },
    "571": {
      "op": "DUP2"
    },
    "572": {
      "op": "MSTORE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "575": {
      "op": "ADD"
    },
    "576": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x197"
    },
    "579": {
      "op": "JUMP"
    },
    "580": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1792,
        1913
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "581": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1792,
        1913
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "584": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1792,
        1913
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x252"
    },
    "587": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1792,
        1913
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "588": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1792,
        1913
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "590": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1792,
        1913
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFF0"
    },
    "593": {
      "fn": "AniwarPool.updateMultiplier",
      "jump": "i",
      "offset": [
        1792,
        1913
      ],
      "op": "JUMP",
      "path": "23"
    },
    "594": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1792,
        1913
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "595": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1792,
        1913
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x664"
    },
    "598": {
      "fn": "AniwarPool.updateMultiplier",
      "jump": "i",
      "offset": [
        1792,
        1913
      ],
      "op": "JUMP",
      "path": "23"
    },
    "599": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "600": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A2"
    },
    "603": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x265"
    },
    "606": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "607": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "609": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1040"
    },
    "612": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4676,
        5090
      ],
      "op": "JUMP",
      "path": "23"
    },
    "613": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "614": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x693"
    },
    "617": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4676,
        5090
      ],
      "op": "JUMP",
      "path": "23"
    },
    "618": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "619": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "622": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x716"
    },
    "625": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "626": {
      "fn": "AniwarPool.pause",
      "offset": [
        5618,
        5677
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "627": {
      "fn": "AniwarPool.pause",
      "offset": [
        5618,
        5677
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "630": {
      "fn": "AniwarPool.pause",
      "offset": [
        5618,
        5677
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x74A"
    },
    "633": {
      "fn": "AniwarPool.pause",
      "jump": "i",
      "offset": [
        5618,
        5677
      ],
      "op": "JUMP",
      "path": "23"
    },
    "634": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "635": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "638": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x288"
    },
    "641": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "642": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "644": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x106C"
    },
    "647": {
      "fn": "AniwarPool.safeAniTransfer",
      "jump": "i",
      "offset": [
        5200,
        5511
      ],
      "op": "JUMP",
      "path": "23"
    },
    "648": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "649": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x77C"
    },
    "652": {
      "fn": "AniwarPool.safeAniTransfer",
      "jump": "i",
      "offset": [
        5200,
        5511
      ],
      "op": "JUMP",
      "path": "23"
    },
    "653": {
      "offset": [
        963,
        998
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "654": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        963,
        998
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A2"
    },
    "657": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        963,
        998
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "659": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        963,
        998
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "660": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        963,
        998
      ],
      "op": "DUP2",
      "path": "23"
    },
    "661": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        963,
        998
      ],
      "op": "JUMP",
      "path": "23"
    },
    "662": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "663": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "665": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 2
    },
    "666": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "668": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "675": {
      "op": "SHL"
    },
    "676": {
      "op": "SUB"
    },
    "677": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "678": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "679": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "680": {
      "op": "DUP2"
    },
    "681": {
      "op": "MSTORE"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "684": {
      "op": "ADD"
    },
    "685": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x197"
    },
    "688": {
      "op": "JUMP"
    },
    "689": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        3912,
        4275
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "690": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        3912,
        4275
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "693": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        3912,
        4275
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8D9"
    },
    "696": {
      "fn": "AniwarPool.claimReward",
      "jump": "i",
      "offset": [
        3912,
        4275
      ],
      "op": "JUMP",
      "path": "23"
    },
    "697": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2154,
        2299
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "698": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2154,
        2299
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "701": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2154,
        2299
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C7"
    },
    "704": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2154,
        2299
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "705": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2154,
        2299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "707": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2154,
        2299
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFF0"
    },
    "710": {
      "fn": "AniwarPool.setEndTime",
      "jump": "i",
      "offset": [
        2154,
        2299
      ],
      "op": "JUMP",
      "path": "23"
    },
    "711": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2154,
        2299
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "712": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2154,
        2299
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9F1"
    },
    "715": {
      "fn": "AniwarPool.setEndTime",
      "jump": "i",
      "offset": [
        2154,
        2299
      ],
      "op": "JUMP",
      "path": "23"
    },
    "716": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4343,
        4638
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "717": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4343,
        4638
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "720": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4343,
        4638
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA2C"
    },
    "723": {
      "fn": "AniwarPool.emergencyWithdraw",
      "jump": "i",
      "offset": [
        4343,
        4638
      ],
      "op": "JUMP",
      "path": "23"
    },
    "724": {
      "offset": [
        393,
        455
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "725": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        393,
        455
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A2"
    },
    "728": {
      "offset": [
        431,
        455
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
    },
    "761": {
      "offset": [
        393,
        455
      ],
      "op": "DUP2",
      "path": "23"
    },
    "762": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        393,
        455
      ],
      "op": "JUMP",
      "path": "23"
    },
    "763": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "764": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "767": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x309"
    },
    "770": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "771": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "773": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1025"
    },
    "776": {
      "fn": "AniwarPool.updateUser",
      "jump": "i",
      "offset": [
        3544,
        3884
      ],
      "op": "JUMP",
      "path": "23"
    },
    "777": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "778": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xACD"
    },
    "781": {
      "fn": "AniwarPool.updateUser",
      "jump": "i",
      "offset": [
        3544,
        3884
      ],
      "op": "JUMP",
      "path": "23"
    },
    "782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31C"
    },
    "789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1025"
    },
    "795": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "797": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB1E"
    },
    "800": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "801": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3073,
        3538
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "802": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "804": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "809": {
      "op": "SHL"
    },
    "810": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "811": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "3"
    },
    "812": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "814": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "3"
    },
    "815": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "816": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x354"
    },
    "819": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "820": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "822": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "3"
    },
    "831": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "832": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "834": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "3"
    },
    "835": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B"
    },
    "838": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "839": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1096"
    },
    "842": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "3"
    },
    "843": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "844": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "846": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "847": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "DUP1",
      "path": "3"
    },
    "848": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "849": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SUB",
      "path": "3"
    },
    "850": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "851": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "852": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "853": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "855": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "857": {
      "fn": "Pausable.paused",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "858": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "4"
    },
    "859": {
      "fn": "Pausable.paused",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "860": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x377"
    },
    "863": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "864": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "866": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "875": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "876": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "878": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "4"
    },
    "879": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34B"
    },
    "882": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "883": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C0"
    },
    "886": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "4"
    },
    "887": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "888": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "890": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "892": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "893": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3180,
        3188
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "895": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3198,
        3220
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 3,
      "value": "0x387"
    },
    "898": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3209,
        3219
      ],
      "op": "CALLER",
      "path": "23"
    },
    "899": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3198,
        3208
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xACD"
    },
    "902": {
      "fn": "AniwarPool.leaveStaking",
      "jump": "i",
      "offset": [
        3198,
        3220
      ],
      "op": "JUMP",
      "path": "23"
    },
    "903": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3198,
        3220
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "904": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3263,
        3273
      ],
      "op": "CALLER",
      "path": "23"
    },
    "905": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3230,
        3251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "907": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3254,
        3274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "908": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3254,
        3274
      ],
      "op": "DUP2",
      "path": "23"
    },
    "909": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3254,
        3274
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "910": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3254,
        3262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "912": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3254,
        3274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "914": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3254,
        3274
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "915": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3254,
        3274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "917": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3254,
        3274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "918": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3254,
        3274
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "919": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3292,
        3303
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 4,
      "value": "0x1"
    },
    "921": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3292,
        3303
      ],
      "op": "DUP2",
      "path": "23"
    },
    "922": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3292,
        3303
      ],
      "op": "ADD",
      "path": "23"
    },
    "923": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3292,
        3303
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "924": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3292,
        3314
      ],
      "op": "DUP4",
      "path": "23"
    },
    "925": {
      "op": "GT"
    },
    "926": {
      "branch": 52,
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3292,
        3314
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "927": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3DF"
    },
    "930": {
      "branch": 52,
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "931": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "933": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "940": {
      "op": "SHL"
    },
    "941": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "DUP2",
      "path": "23"
    },
    "942": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "945": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "947": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "DUP3",
      "path": "23"
    },
    "948": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "ADD",
      "path": "23"
    },
    "949": {
      "op": "MSTORE"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "954": {
      "op": "DUP3"
    },
    "955": {
      "op": "ADD"
    },
    "956": {
      "op": "MSTORE"
    },
    "957": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "978": {
      "op": "SHL"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "981": {
      "op": "DUP3"
    },
    "982": {
      "op": "ADD"
    },
    "983": {
      "op": "MSTORE"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "986": {
      "op": "ADD"
    },
    "987": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x34B"
    },
    "990": {
      "op": "JUMP"
    },
    "991": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3284,
        3337
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "992": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3351,
        3362
      ],
      "op": "DUP3",
      "path": "23"
    },
    "993": {
      "branch": 53,
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3351,
        3362
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "994": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3347,
        3484
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x410"
    },
    "997": {
      "branch": 53,
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3347,
        3484
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "998": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3406,
        3413
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 5
    },
    "999": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3392,
        3396
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1000": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3392,
        3403
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1002": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3392,
        3403
      ],
      "op": "ADD",
      "path": "23"
    },
    "1003": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3392,
        3403
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1004": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3392,
        3413
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3F5"
    },
    "1007": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3392,
        3413
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1008": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3392,
        3413
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1009": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3392,
        3413
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x110D"
    },
    "1012": {
      "fn": "AniwarPool.leaveStaking",
      "jump": "i",
      "offset": [
        3392,
        3413
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1013": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3392,
        3413
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1014": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3378,
        3389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1016": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3378,
        3389
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1017": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3378,
        3389
      ],
      "op": "ADD",
      "path": "23"
    },
    "1018": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3378,
        3413
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1019": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3427,
        3439
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 6
    },
    "1020": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3427,
        3439
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1021": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3427,
        3473
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x410"
    },
    "1024": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3427,
        3473
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3427,
        3439
      ],
      "op": "AND",
      "path": "23"
    },
    "1034": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3453,
        3463
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1035": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3465,
        3472
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1036": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3427,
        3452
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBB9"
    },
    "1039": {
      "fn": "AniwarPool.leaveStaking",
      "jump": "i",
      "offset": [
        3427,
        3473
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1040": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3427,
        3473
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1041": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 7,
      "value": "0x40"
    },
    "1043": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1044": {
      "op": "DUP4"
    },
    "1045": {
      "op": "DUP2"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3511,
        3521
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1048": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3511,
        3521
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1049": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xBEEAC20C93F16ECC5D2707DFFEB3263A7F99053AC0AA548803E9E8B5A0007438"
    },
    "1082": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1085": {
      "op": "ADD"
    },
    "1086": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1088": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1089": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1090": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1091": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "SUB",
      "path": "23"
    },
    "1092": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1093": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        3498,
        3531
      ],
      "op": "LOG2",
      "path": "23"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1098": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1099": {
      "fn": "AniwarPool.leaveStaking",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1100": {
      "op": "POP"
    },
    "1101": {
      "fn": "AniwarPool.leaveStaking",
      "jump": "o",
      "offset": [
        3073,
        3538
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1102": {
      "fn": "AniwarPool.setApy",
      "offset": [
        1992,
        2075
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1103": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1105": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1112": {
      "op": "SHL"
    },
    "1113": {
      "op": "SUB"
    },
    "1114": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "1115": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 8
    },
    "1116": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1117": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x478"
    },
    "1120": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1121": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1123": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1124": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1132": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1133": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1135": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1136": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "1139": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1140": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "1143": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1144": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1145": {
      "fn": "AniwarPool.setApy",
      "offset": [
        2049,
        2061
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 9,
      "value": "0x4"
    },
    "1147": {
      "fn": "AniwarPool.setApy",
      "offset": [
        2049,
        2068
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1148": {
      "fn": "AniwarPool.setApy",
      "jump": "o",
      "offset": [
        1992,
        2075
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1149": {
      "fn": "AniwarPool.unpause",
      "offset": [
        5683,
        5746
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1150": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1152": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1159": {
      "op": "SHL"
    },
    "1160": {
      "op": "SUB"
    },
    "1161": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "1162": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1163": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1164": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A7"
    },
    "1167": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1168": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1170": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1177": {
      "op": "SHL"
    },
    "1178": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1179": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1180": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1182": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1183": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "1186": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1187": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "1190": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1191": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1192": {
      "fn": "AniwarPool.unpause",
      "offset": [
        5729,
        5739
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 10,
      "value": "0x4AF"
    },
    "1195": {
      "fn": "AniwarPool.unpause",
      "offset": [
        5729,
        5737
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC1C"
    },
    "1198": {
      "fn": "AniwarPool.unpause",
      "jump": "i",
      "offset": [
        5729,
        5739
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1199": {
      "fn": "AniwarPool.unpause",
      "offset": [
        5729,
        5739
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1200": {
      "fn": "AniwarPool.unpause",
      "jump": "o",
      "offset": [
        5683,
        5746
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1201": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2340,
        3026
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1202": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1204": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1206": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1207": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "4"
    },
    "1208": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1209": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D4"
    },
    "1212": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1213": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1215": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1222": {
      "op": "SHL"
    },
    "1223": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1224": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1225": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1227": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "4"
    },
    "1228": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34B"
    },
    "1231": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1232": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C0"
    },
    "1235": {
      "fn": "AniwarPool.enterStaking",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1236": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1237": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1239": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1241": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1242": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5590,
        5605
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "1243": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2417,
        2433
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 11,
      "value": "0x6"
    },
    "1245": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2417,
        2433
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1246": {
      "branch": 54,
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2417,
        2452
      ],
      "op": "GT",
      "path": "23"
    },
    "1247": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x521"
    },
    "1250": {
      "branch": 54,
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1251": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1253": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1262": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1265": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1267": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1268": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "ADD",
      "path": "23"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1274": {
      "op": "DUP3"
    },
    "1275": {
      "op": "ADD"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "PUSH20",
      "value": "0x151A5B594E8811985C9B481A185CC8195B991959"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1303": {
      "op": "DUP3"
    },
    "1304": {
      "op": "ADD"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x34B"
    },
    "1312": {
      "op": "JUMP"
    },
    "1313": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2409,
        2477
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1314": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2516
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 12,
      "value": "0x3"
    },
    "1316": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2524
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1317": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1319": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1320": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1329": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1330": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2535,
        2545
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1331": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1333": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1334": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "ADD",
      "path": "23"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2555,
        2559
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1339": {
      "op": "DUP3"
    },
    "1340": {
      "op": "ADD"
    },
    "1341": {
      "op": "MSTORE"
    },
    "1342": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2565,
        2572
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1343": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2565,
        2572
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "SUB"
    },
    "1352": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2524
      ],
      "op": "AND",
      "path": "23"
    },
    "1353": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2524
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1354": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2534
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDD62ED3E"
    },
    "1359": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2534
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1362": {
      "op": "ADD"
    },
    "1363": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1365": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1367": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1368": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1369": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1370": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "SUB",
      "path": "23"
    },
    "1371": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1372": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1373": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "GAS",
      "path": "23"
    },
    "1374": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "1375": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1376": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1377": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1378": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x56F"
    },
    "1381": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1382": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1383": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1385": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1386": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "1387": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1388": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1390": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1391": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1392": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "POP",
      "path": "23"
    },
    "1393": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "POP",
      "path": "23"
    },
    "1394": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "POP",
      "path": "23"
    },
    "1395": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "POP",
      "path": "23"
    },
    "1396": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1398": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1399": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1400": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "1402": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "NOT",
      "path": "23"
    },
    "1403": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "1405": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1406": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "ADD",
      "path": "23"
    },
    "1407": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "AND",
      "path": "23"
    },
    "1408": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1409": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "ADD",
      "path": "23"
    },
    "1410": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1411": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1413": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1414": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "POP",
      "path": "23"
    },
    "1415": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1416": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "ADD",
      "path": "23"
    },
    "1417": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1418": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x593"
    },
    "1421": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1422": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1423": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1159"
    },
    "1426": {
      "fn": "AniwarPool.enterStaking",
      "jump": "i",
      "offset": [
        2508,
        2561
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1427": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2561
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1428": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2572
      ],
      "op": "LT",
      "path": "23"
    },
    "1429": {
      "branch": 55,
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2508,
        2572
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1430": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5E1"
    },
    "1433": {
      "branch": 55,
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1434": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1436": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1445": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1448": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1450": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1451": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "ADD",
      "path": "23"
    },
    "1452": {
      "op": "MSTORE"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1457": {
      "op": "DUP3"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "op": "MSTORE"
    },
    "1460": {
      "op": "PUSH32",
      "value": "0x416C6C6F77616E63653A204E6F7420656E6F75676820416C6C6F77616E636500"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1495": {
      "op": "DUP3"
    },
    "1496": {
      "op": "ADD"
    },
    "1497": {
      "op": "MSTORE"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1500": {
      "op": "ADD"
    },
    "1501": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x34B"
    },
    "1504": {
      "op": "JUMP"
    },
    "1505": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2487,
        2629
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1506": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2672,
        2682
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1507": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2639,
        2660
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1509": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2663,
        2683
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1510": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2663,
        2683
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1511": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2663,
        2683
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1512": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2663,
        2671
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "1514": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2663,
        2683
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1516": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2663,
        2683
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1517": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2663,
        2683
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1519": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2663,
        2683
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1520": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2663,
        2683
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1521": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2697,
        2708
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1522": {
      "branch": 56,
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2697,
        2708
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1523": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2693,
        2924
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x624"
    },
    "1526": {
      "branch": 56,
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2693,
        2924
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1527": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2724,
        2732
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 13,
      "value": "0x3"
    },
    "1529": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2724,
        2740
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1530": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2724,
        2864
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x60E"
    },
    "1533": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2724,
        2864
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "op": "SUB"
    },
    "1542": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2724,
        2740
      ],
      "op": "AND",
      "path": "23"
    },
    "1543": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2783,
        2793
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1544": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2820,
        2824
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "1545": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2843,
        2850
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1546": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2724,
        2757
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCB9"
    },
    "1549": {
      "fn": "AniwarPool.enterStaking",
      "jump": "i",
      "offset": [
        2724,
        2864
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1550": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2724,
        2864
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1551": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2906,
        2913
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 14
    },
    "1552": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2892,
        2896
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1553": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2892,
        2903
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1555": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2892,
        2903
      ],
      "op": "ADD",
      "path": "23"
    },
    "1556": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2892,
        2903
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1557": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2892,
        2913
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x61E"
    },
    "1560": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2892,
        2913
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1561": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2892,
        2913
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1562": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2892,
        2913
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1172"
    },
    "1565": {
      "fn": "AniwarPool.enterStaking",
      "jump": "i",
      "offset": [
        2892,
        2913
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1566": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2892,
        2913
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1567": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2878,
        2889
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1569": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2878,
        2889
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1570": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2878,
        2889
      ],
      "op": "ADD",
      "path": "23"
    },
    "1571": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2878,
        2913
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1572": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2693,
        2924
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1573": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2955,
        2970
      ],
      "op": "TIMESTAMP",
      "path": "23",
      "statement": 15
    },
    "1574": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2933,
        2970
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1575": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2933,
        2970
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1576": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 16,
      "value": "0x40"
    },
    "1578": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1579": {
      "op": "DUP3"
    },
    "1580": {
      "op": "DUP2"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2999,
        3009
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1583": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2999,
        3009
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1584": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xF4202CE22960ADA59AA4BB9F0E324D8F77576BE8352767DFC0ACA182A4BF8E45"
    },
    "1617": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1623": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1624": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1625": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1626": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "SUB",
      "path": "23"
    },
    "1627": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1628": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2986,
        3019
      ],
      "op": "LOG2",
      "path": "23"
    },
    "1629": {
      "op": "POP"
    },
    "1630": {
      "op": "POP"
    },
    "1631": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1633": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1634": {
      "fn": "AniwarPool.enterStaking",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1635": {
      "fn": "AniwarPool.enterStaking",
      "jump": "o",
      "offset": [
        2340,
        3026
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1636": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1792,
        1913
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1637": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1639": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "1649": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1650": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1651": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x68E"
    },
    "1654": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1655": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1657": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1666": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1667": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1669": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1670": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "1673": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1674": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "1677": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1678": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1679": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1871,
        1887
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 17,
      "value": "0x2"
    },
    "1681": {
      "fn": "AniwarPool.updateMultiplier",
      "offset": [
        1871,
        1906
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1682": {
      "fn": "AniwarPool.updateMultiplier",
      "jump": "o",
      "offset": [
        1792,
        1913
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1683": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1684": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4805,
        4812
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1686": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4824,
        4842
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1687": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4861,
        4877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "1689": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4861,
        4877
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1690": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4852,
        4857
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1691": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4846,
        4849
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1692": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4846,
        4857
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6A5"
    },
    "1695": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4846,
        4857
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1696": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4846,
        4857
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1697": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4846,
        4857
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x110D"
    },
    "1700": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4846,
        4857
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1701": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4846,
        4857
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1702": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4845,
        4877
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6AF"
    },
    "1705": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4845,
        4877
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1706": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4845,
        4877
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1707": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4845,
        4877
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118A"
    },
    "1710": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4845,
        4877
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1711": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4845,
        4877
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1712": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4824,
        4877
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4887,
        4907
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1716": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4910,
        4928
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6C0"
    },
    "1719": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4923,
        4928
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0x15180"
    },
    "1723": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4824,
        4877
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1724": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4910,
        4928
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11A9"
    },
    "1727": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4910,
        4928
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1728": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4910,
        4928
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1729": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4887,
        4928
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1730": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4887,
        4928
      ],
      "op": "POP",
      "path": "23"
    },
    "1731": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4963,
        4980
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1733": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5007,
        5010
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16D"
    },
    "1736": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4984,
        4992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1738": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4984,
        4996
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1740": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4984,
        4996
      ],
      "op": "ADD",
      "path": "23"
    },
    "1741": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4984,
        4996
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1742": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4999,
        5003
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3E8"
    },
    "1745": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4984,
        5003
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6DA"
    },
    "1748": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4984,
        5003
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1749": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4984,
        5003
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1750": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4984,
        5003
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118A"
    },
    "1753": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4984,
        5003
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1754": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4984,
        5003
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1755": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4983,
        5010
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6E4"
    },
    "1758": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4983,
        5010
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1759": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4983,
        5010
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1760": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4983,
        5010
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11A9"
    },
    "1763": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4983,
        5010
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1764": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4983,
        5010
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1765": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4963,
        5010
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1766": {
      "op": "POP"
    },
    "1767": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5071,
        5082
      ],
      "op": "PUSH3",
      "path": "23",
      "statement": 18,
      "value": "0xF4240"
    },
    "1771": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4963,
        5010
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1772": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5028,
        5054
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6F5"
    },
    "1775": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5042,
        5054
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1776": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5028,
        5039
      ],
      "op": "DUP9",
      "path": "23"
    },
    "1777": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5028,
        5054
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118A"
    },
    "1780": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        5028,
        5054
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1781": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5028,
        5054
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1782": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5028,
        5066
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6FF"
    },
    "1785": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5028,
        5066
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1786": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5028,
        5066
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1787": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5028,
        5066
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118A"
    },
    "1790": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        5028,
        5066
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1791": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5028,
        5066
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1792": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5027,
        5083
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x709"
    },
    "1795": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5027,
        5083
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1796": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5027,
        5083
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1797": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5027,
        5083
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11A9"
    },
    "1800": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "i",
      "offset": [
        5027,
        5083
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1801": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5027,
        5083
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1802": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5020,
        5083
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1803": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5020,
        5083
      ],
      "op": "POP",
      "path": "23"
    },
    "1804": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5020,
        5083
      ],
      "op": "POP",
      "path": "23"
    },
    "1805": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5020,
        5083
      ],
      "op": "POP",
      "path": "23"
    },
    "1806": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        5020,
        5083
      ],
      "op": "POP",
      "path": "23"
    },
    "1807": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1808": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1809": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1810": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "POP",
      "path": "23"
    },
    "1811": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "POP",
      "path": "23"
    },
    "1812": {
      "fn": "AniwarPool.calculateRewardDebt",
      "offset": [
        4676,
        5090
      ],
      "op": "POP",
      "path": "23"
    },
    "1813": {
      "fn": "AniwarPool.calculateRewardDebt",
      "jump": "o",
      "offset": [
        4676,
        5090
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1814": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1815": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1817": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1824": {
      "op": "SHL"
    },
    "1825": {
      "op": "SUB"
    },
    "1826": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "1827": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1828": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1829": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "1832": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1833": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1835": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1836": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1842": {
      "op": "SHL"
    },
    "1843": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1844": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1845": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1847": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1848": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "1851": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1852": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "1855": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1856": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 19,
      "value": "0x4AF"
    },
    "1860": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1862": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF1"
    },
    "1865": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1866": {
      "fn": "AniwarPool.pause",
      "offset": [
        5618,
        5677
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1867": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1869": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "SUB"
    },
    "1878": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "1879": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1880": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1881": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x774"
    },
    "1884": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1885": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1887": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1894": {
      "op": "SHL"
    },
    "1895": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1896": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1897": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1899": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1900": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "1903": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1904": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "1907": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1908": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1909": {
      "fn": "AniwarPool.pause",
      "offset": [
        5662,
        5670
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 20,
      "value": "0x4AF"
    },
    "1912": {
      "fn": "AniwarPool.pause",
      "offset": [
        5662,
        5668
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD41"
    },
    "1915": {
      "fn": "AniwarPool.pause",
      "jump": "i",
      "offset": [
        5662,
        5670
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1916": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1917": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1919": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1926": {
      "op": "SHL"
    },
    "1927": {
      "op": "SUB"
    },
    "1928": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "1929": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1930": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "1931": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A6"
    },
    "1934": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1935": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1937": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1946": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1947": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1949": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "1950": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "1953": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1954": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "1957": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1958": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1959": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5307
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1961": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5315
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1962": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1964": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1965": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1972": {
      "op": "SHL"
    },
    "1973": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1974": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1975": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5334,
        5338
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "1976": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1978": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1979": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "ADD",
      "path": "23"
    },
    "1980": {
      "op": "MSTORE"
    },
    "1981": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5282,
        5296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1983": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5282,
        5296
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1990": {
      "op": "SHL"
    },
    "1991": {
      "op": "SUB"
    },
    "1992": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5315
      ],
      "op": "AND",
      "path": "23"
    },
    "1993": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5315
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1994": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5325
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "1999": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5325
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2005": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2007": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2008": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2009": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2010": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "SUB",
      "path": "23"
    },
    "2011": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2012": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2013": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "GAS",
      "path": "23"
    },
    "2014": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "2015": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2016": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2017": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2018": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7EF"
    },
    "2021": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2022": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2023": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2025": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2026": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "2027": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2028": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2030": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2031": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2032": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "POP",
      "path": "23"
    },
    "2033": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "POP",
      "path": "23"
    },
    "2034": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "POP",
      "path": "23"
    },
    "2035": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "POP",
      "path": "23"
    },
    "2036": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2038": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2039": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2040": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2042": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "NOT",
      "path": "23"
    },
    "2043": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2045": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2046": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "ADD",
      "path": "23"
    },
    "2047": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "AND",
      "path": "23"
    },
    "2048": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2049": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "ADD",
      "path": "23"
    },
    "2050": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2051": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2053": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2054": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "POP",
      "path": "23"
    },
    "2055": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2056": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "ADD",
      "path": "23"
    },
    "2057": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2058": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x813"
    },
    "2061": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2062": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2063": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1159"
    },
    "2066": {
      "fn": "AniwarPool.safeAniTransfer",
      "jump": "i",
      "offset": [
        5299,
        5340
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2067": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5299,
        5340
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2068": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5282,
        5340
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2069": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5282,
        5340
      ],
      "op": "POP",
      "path": "23"
    },
    "2070": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5364,
        5370
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2071": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5354,
        5361
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2072": {
      "branch": 57,
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5354,
        5370
      ],
      "op": "GT",
      "path": "23"
    },
    "2073": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5350,
        5505
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2074": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5350,
        5505
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x89B"
    },
    "2077": {
      "branch": 57,
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5350,
        5505
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2078": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5394
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 21,
      "value": "0x3"
    },
    "2080": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5402
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2081": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2083": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2084": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2093": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "op": "SUB"
    },
    "2102": {
      "op": "DUP6"
    },
    "2103": {
      "op": "DUP2"
    },
    "2104": {
      "op": "AND"
    },
    "2105": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2107": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2108": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "ADD",
      "path": "23"
    },
    "2109": {
      "op": "MSTORE"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2112": {
      "op": "DUP3"
    },
    "2113": {
      "op": "ADD"
    },
    "2114": {
      "op": "DUP5"
    },
    "2115": {
      "op": "SWAP1"
    },
    "2116": {
      "op": "MSTORE"
    },
    "2117": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5402
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2118": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5402
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2119": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5402
      ],
      "op": "AND",
      "path": "23"
    },
    "2120": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5402
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2121": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5411
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA9059CBB"
    },
    "2126": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5411
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2129": {
      "op": "ADD"
    },
    "2130": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2131": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2133": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2135": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2136": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2137": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2138": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "SUB",
      "path": "23"
    },
    "2139": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2140": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2142": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP8",
      "path": "23"
    },
    "2143": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "GAS",
      "path": "23"
    },
    "2144": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "CALL",
      "path": "23"
    },
    "2145": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2146": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2147": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2148": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x871"
    },
    "2151": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2152": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2153": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2155": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2156": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "2157": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2158": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2160": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2161": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2162": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "POP",
      "path": "23"
    },
    "2163": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "POP",
      "path": "23"
    },
    "2164": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "POP",
      "path": "23"
    },
    "2165": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "POP",
      "path": "23"
    },
    "2166": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2168": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2169": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2170": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2172": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "NOT",
      "path": "23"
    },
    "2173": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2175": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2176": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "ADD",
      "path": "23"
    },
    "2177": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "AND",
      "path": "23"
    },
    "2178": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2179": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "ADD",
      "path": "23"
    },
    "2180": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2181": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2183": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2184": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "POP",
      "path": "23"
    },
    "2185": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2186": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "ADD",
      "path": "23"
    },
    "2187": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2188": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x895"
    },
    "2191": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2192": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2193": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11CB"
    },
    "2196": {
      "fn": "AniwarPool.safeAniTransfer",
      "jump": "i",
      "offset": [
        5386,
        5424
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2197": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2198": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5386,
        5424
      ],
      "op": "POP",
      "path": "23"
    },
    "2199": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5272,
        5511
      ],
      "op": "POP",
      "path": "23"
    },
    "2200": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "POP",
      "path": "23"
    },
    "2201": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "POP",
      "path": "23"
    },
    "2202": {
      "fn": "AniwarPool.safeAniTransfer",
      "jump": "o",
      "offset": [
        5200,
        5511
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2203": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5350,
        5505
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2204": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5463
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 22,
      "value": "0x3"
    },
    "2206": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5471
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2207": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5494
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2209": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5494
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2210": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2217": {
      "op": "SHL"
    },
    "2218": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5494
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2219": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5494
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "SUB"
    },
    "2228": {
      "op": "DUP6"
    },
    "2229": {
      "op": "DUP2"
    },
    "2230": {
      "op": "AND"
    },
    "2231": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5494
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2233": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5494
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2234": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5494
      ],
      "op": "ADD",
      "path": "23"
    },
    "2235": {
      "op": "MSTORE"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2238": {
      "op": "DUP3"
    },
    "2239": {
      "op": "ADD"
    },
    "2240": {
      "op": "DUP6"
    },
    "2241": {
      "op": "SWAP1"
    },
    "2242": {
      "op": "MSTORE"
    },
    "2243": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5471
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2244": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5471
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2245": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5471
      ],
      "op": "AND",
      "path": "23"
    },
    "2246": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5471
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2247": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5480
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA9059CBB"
    },
    "2252": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5480
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2255": {
      "op": "ADD"
    },
    "2256": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5455,
        5494
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x852"
    },
    "2259": {
      "op": "JUMP"
    },
    "2260": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5350,
        5505
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2261": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5272,
        5511
      ],
      "op": "POP",
      "path": "23"
    },
    "2262": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "POP",
      "path": "23"
    },
    "2263": {
      "fn": "AniwarPool.safeAniTransfer",
      "offset": [
        5200,
        5511
      ],
      "op": "POP",
      "path": "23"
    },
    "2264": {
      "fn": "AniwarPool.safeAniTransfer",
      "jump": "o",
      "offset": [
        5200,
        5511
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2265": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        3912,
        4275
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2266": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2268": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2273": {
      "op": "SHL"
    },
    "2274": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2275": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "3"
    },
    "2276": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2278": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "3"
    },
    "2279": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2280": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x903"
    },
    "2283": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2284": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2286": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2293": {
      "op": "SHL"
    },
    "2294": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2295": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2296": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2298": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "3"
    },
    "2299": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B"
    },
    "2302": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2303": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1096"
    },
    "2306": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2307": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2308": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2310": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2312": {
      "fn": "Pausable.paused",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2313": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "4"
    },
    "2314": {
      "branch": 64,
      "fn": "Pausable.paused",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2315": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x926"
    },
    "2318": {
      "branch": 64,
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2319": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2321": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2322": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2328": {
      "op": "SHL"
    },
    "2329": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2330": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2331": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2333": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "4"
    },
    "2334": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34B"
    },
    "2337": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2338": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C0"
    },
    "2341": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2342": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2343": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2345": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2347": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2348": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        3979,
        4001
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 23,
      "value": "0x934"
    },
    "2351": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        3990,
        4000
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2352": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        3979,
        3989
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xACD"
    },
    "2355": {
      "fn": "AniwarPool.claimReward",
      "jump": "i",
      "offset": [
        3979,
        4001
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2356": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        3979,
        4001
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2357": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4044,
        4054
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2358": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4011,
        4032
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2360": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4035,
        4055
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2361": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4035,
        4055
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2362": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4035,
        4055
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2363": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4035,
        4043
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "2365": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4035,
        4055
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2367": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4035,
        4055
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2368": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4035,
        4055
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2370": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4035,
        4055
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2371": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4035,
        4055
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2372": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4073,
        4088
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 24,
      "value": "0x2"
    },
    "2374": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4073,
        4088
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2375": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4073,
        4088
      ],
      "op": "ADD",
      "path": "23"
    },
    "2376": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4073,
        4088
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2377": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x98A"
    },
    "2380": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2381": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2383": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2390": {
      "op": "SHL"
    },
    "2391": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2392": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2395": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2397": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2398": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "ADD",
      "path": "23"
    },
    "2399": {
      "op": "MSTORE"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2404": {
      "op": "DUP3"
    },
    "2405": {
      "op": "ADD"
    },
    "2406": {
      "op": "MSTORE"
    },
    "2407": {
      "op": "PUSH19",
      "value": "0x52657761726420416D6F756E743A207775743F"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2429": {
      "op": "SHL"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2432": {
      "op": "DUP3"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "MSTORE"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2437": {
      "op": "ADD"
    },
    "2438": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x34B"
    },
    "2441": {
      "op": "JUMP"
    },
    "2442": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4065,
        4116
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2443": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4168,
        4183
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 25,
      "value": "0x2"
    },
    "2445": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4168,
        4183
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2446": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4168,
        4183
      ],
      "op": "ADD",
      "path": "23"
    },
    "2447": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4168,
        4183
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2448": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4134
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2450": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4142
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2451": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4184
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9A9"
    },
    "2454": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4184
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2461": {
      "op": "SHL"
    },
    "2462": {
      "op": "SUB"
    },
    "2463": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4142
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2464": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4142
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2465": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4142
      ],
      "op": "AND",
      "path": "23"
    },
    "2466": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4142
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2467": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4156,
        4166
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2468": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4156,
        4166
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2469": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4155
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBB9"
    },
    "2472": {
      "fn": "AniwarPool.claimReward",
      "jump": "i",
      "offset": [
        4126,
        4184
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2473": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4126,
        4184
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2474": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4223,
        4238
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 26,
      "value": "0x2"
    },
    "2476": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4223,
        4238
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2477": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4223,
        4238
      ],
      "op": "ADD",
      "path": "23"
    },
    "2478": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4223,
        4238
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2479": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2481": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2482": {
      "op": "SWAP1"
    },
    "2483": {
      "op": "DUP2"
    },
    "2484": {
      "op": "MSTORE"
    },
    "2485": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4211,
        4221
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2486": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4211,
        4221
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2487": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E"
    },
    "2520": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2523": {
      "op": "ADD"
    },
    "2524": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2526": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2527": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2528": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2529": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "SUB",
      "path": "23"
    },
    "2530": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2531": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4199,
        4239
      ],
      "op": "LOG2",
      "path": "23"
    },
    "2532": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4267,
        4268
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 27,
      "value": "0x0"
    },
    "2534": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4249,
        4264
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2536": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4249,
        4264
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2537": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4249,
        4264
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2538": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4249,
        4264
      ],
      "op": "ADD",
      "path": "23"
    },
    "2539": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        4249,
        4268
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2540": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2542": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2543": {
      "fn": "AniwarPool.claimReward",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2544": {
      "fn": "AniwarPool.claimReward",
      "jump": "o",
      "offset": [
        3912,
        4275
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2545": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2154,
        2299
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2546": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2548": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "op": "SUB"
    },
    "2557": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "2558": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2559": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2560": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA1B"
    },
    "2563": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2564": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2566": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2573": {
      "op": "SHL"
    },
    "2574": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2575": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2576": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2578": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2579": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "2582": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2583": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "2586": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2587": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2588": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5590,
        5605
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "2589": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2227,
        2235
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 28
    },
    "2590": {
      "branch": 58,
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2227,
        2254
      ],
      "op": "GT",
      "path": "23"
    },
    "2591": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2219,
        2255
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA27"
    },
    "2594": {
      "branch": 58,
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2219,
        2255
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2595": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2219,
        2255
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2597": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2219,
        2255
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2598": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2219,
        2255
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2599": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2219,
        2255
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2600": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2265,
        2281
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 29,
      "value": "0x6"
    },
    "2602": {
      "fn": "AniwarPool.setEndTime",
      "offset": [
        2265,
        2292
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2603": {
      "fn": "AniwarPool.setEndTime",
      "jump": "o",
      "offset": [
        2154,
        2299
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2604": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4343,
        4638
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2605": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2607": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2612": {
      "op": "SHL"
    },
    "2613": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2614": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "3"
    },
    "2615": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2617": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "3"
    },
    "2618": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2619": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA56"
    },
    "2622": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2623": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2625": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2626": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2632": {
      "op": "SHL"
    },
    "2633": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2634": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2635": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2637": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "3"
    },
    "2638": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B"
    },
    "2641": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2642": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1096"
    },
    "2645": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2646": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2647": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4436,
        4446
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2648": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4403,
        4424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2650": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2651": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2652": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2653": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4435
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "2655": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2657": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2658": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2660": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2661": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2662": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4508,
        4519
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 30,
      "value": "0x1"
    },
    "2664": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4508,
        4519
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2665": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4508,
        4519
      ],
      "op": "ADD",
      "path": "23"
    },
    "2666": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4508,
        4519
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2667": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4457,
        4465
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2669": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4457,
        4473
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2670": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2671": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4427,
        4447
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2672": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4457,
        4520
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA82"
    },
    "2675": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4457,
        4520
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "op": "SUB"
    },
    "2684": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4457,
        4473
      ],
      "op": "AND",
      "path": "23"
    },
    "2685": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4457,
        4473
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2686": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4457,
        4486
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBB9"
    },
    "2689": {
      "fn": "AniwarPool.emergencyWithdraw",
      "jump": "i",
      "offset": [
        4457,
        4520
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2690": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4457,
        4520
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2691": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4565,
        4576
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 31,
      "value": "0x1"
    },
    "2693": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4565,
        4576
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2694": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4565,
        4576
      ],
      "op": "ADD",
      "path": "23"
    },
    "2695": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4565,
        4576
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2696": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2698": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2699": {
      "op": "SWAP1"
    },
    "2700": {
      "op": "DUP2"
    },
    "2701": {
      "op": "MSTORE"
    },
    "2702": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4553,
        4563
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2703": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4553,
        4563
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2704": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
    },
    "2737": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2740": {
      "op": "ADD"
    },
    "2741": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2743": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2744": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2745": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2746": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "SUB",
      "path": "23"
    },
    "2747": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2748": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4535,
        4577
      ],
      "op": "LOG2",
      "path": "23"
    },
    "2749": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4601,
        4602
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 32,
      "value": "0x0"
    },
    "2751": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4587,
        4598
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2753": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4587,
        4598
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2754": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4587,
        4598
      ],
      "op": "ADD",
      "path": "23"
    },
    "2755": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4587,
        4602
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2756": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4587,
        4602
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2757": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4587,
        4602
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2758": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4612,
        4627
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 33,
      "value": "0x2"
    },
    "2760": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4612,
        4627
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2761": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4612,
        4627
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2762": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4612,
        4627
      ],
      "op": "ADD",
      "path": "23"
    },
    "2763": {
      "fn": "AniwarPool.emergencyWithdraw",
      "offset": [
        4612,
        4631
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2764": {
      "fn": "AniwarPool.emergencyWithdraw",
      "jump": "o",
      "offset": [
        4343,
        4638
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2765": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2766": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3627,
        3643
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "2768": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3627,
        3643
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2769": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5590,
        5605
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "2770": {
      "branch": 59,
      "fn": "AniwarPool.updateUser",
      "offset": [
        3607,
        3643
      ],
      "op": "LT",
      "path": "23"
    },
    "2771": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3603,
        3676
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAD9"
    },
    "2774": {
      "branch": 59,
      "fn": "AniwarPool.updateUser",
      "offset": [
        3603,
        3676
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2775": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3544,
        3884
      ],
      "op": "POP",
      "path": "23"
    },
    "2776": {
      "fn": "AniwarPool.updateUser",
      "jump": "o",
      "offset": [
        3544,
        3884
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2777": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3603,
        3676
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "op": "SUB"
    },
    "2786": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2787": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "AND",
      "path": "23"
    },
    "2788": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3685,
        3706
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2790": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2791": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2792": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2793": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3717
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "2795": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2797": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2798": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2800": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2801": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3709,
        3731
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2802": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3793,
        3812
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 34
    },
    "2803": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3793,
        3812
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2804": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3760,
        3877
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB02"
    },
    "2807": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3760,
        3877
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2808": {
      "fn": "AniwarPool.getCurrentTime",
      "offset": [
        5590,
        5605
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "2809": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3856,
        3860
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2810": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3856,
        3867
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2812": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3856,
        3867
      ],
      "op": "ADD",
      "path": "23"
    },
    "2813": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3856,
        3867
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2814": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3760,
        3779
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x693"
    },
    "2817": {
      "fn": "AniwarPool.updateUser",
      "jump": "i",
      "offset": [
        3760,
        3877
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2818": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3760,
        3877
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2819": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3745
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2820": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3756
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2822": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3756
      ],
      "op": "ADD",
      "path": "23"
    },
    "2823": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3756
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2825": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2826": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2827": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2828": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB15"
    },
    "2831": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2832": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2833": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1172"
    },
    "2836": {
      "fn": "AniwarPool.updateUser",
      "jump": "i",
      "offset": [
        3741,
        3877
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2837": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2838": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2839": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2840": {
      "fn": "AniwarPool.updateUser",
      "offset": [
        3741,
        3877
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2841": {
      "op": "POP"
    },
    "2842": {
      "op": "POP"
    },
    "2843": {
      "op": "POP"
    },
    "2844": {
      "op": "POP"
    },
    "2845": {
      "fn": "AniwarPool.updateUser",
      "jump": "o",
      "offset": [
        3544,
        3884
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2846": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2847": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2849": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2856": {
      "op": "SHL"
    },
    "2857": {
      "op": "SUB"
    },
    "2858": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "2"
    },
    "2859": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2860": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "2"
    },
    "2861": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB48"
    },
    "2864": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2865": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2867": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2874": {
      "op": "SHL"
    },
    "2875": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2876": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2877": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2879": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "2"
    },
    "2880": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "2883": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2884": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "2887": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2888": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "op": "SUB"
    },
    "2897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 35
    },
    "2898": {
      "branch": 63,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "2"
    },
    "2899": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBAD"
    },
    "2902": {
      "branch": 63,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2912": {
      "op": "SHL"
    },
    "2913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "2"
    },
    "2921": {
      "op": "MSTORE"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2926": {
      "op": "DUP3"
    },
    "2927": {
      "op": "ADD"
    },
    "2928": {
      "op": "MSTORE"
    },
    "2929": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2964": {
      "op": "DUP3"
    },
    "2965": {
      "op": "ADD"
    },
    "2966": {
      "op": "MSTORE"
    },
    "2967": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2979": {
      "op": "DUP3"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "op": "MSTORE"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2984": {
      "op": "ADD"
    },
    "2985": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "2988": {
      "op": "JUMP"
    },
    "2989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 36,
      "value": "0xBB6"
    },
    "2993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2994": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF1"
    },
    "2997": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2999": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "2"
    },
    "3000": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3001": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3002": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 37,
      "value": "0x40"
    },
    "3004": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3011": {
      "op": "SHL"
    },
    "3012": {
      "op": "SUB"
    },
    "3013": {
      "op": "DUP4"
    },
    "3014": {
      "op": "AND"
    },
    "3015": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3017": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3018": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "9"
    },
    "3019": {
      "op": "MSTORE"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3022": {
      "op": "DUP2"
    },
    "3023": {
      "op": "ADD"
    },
    "3024": {
      "op": "DUP3"
    },
    "3025": {
      "op": "SWAP1"
    },
    "3026": {
      "op": "MSTORE"
    },
    "3027": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8D4"
    },
    "3030": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3031": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3032": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3033": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3040": {
      "op": "SHL"
    },
    "3041": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        796,
        819
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3044": {
      "op": "ADD"
    },
    "3045": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3046": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3048": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3049": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3052": {
      "op": "NOT"
    },
    "3053": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3054": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3055": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "9"
    },
    "3056": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "9"
    },
    "3057": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3058": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3059": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3060": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3061": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3062": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3064": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3065": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "9"
    },
    "3066": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3067": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "op": "SUB"
    },
    "3076": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "9"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3083": {
      "op": "SHL"
    },
    "3084": {
      "op": "SUB"
    },
    "3085": {
      "op": "NOT"
    },
    "3086": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3087": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "3088": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "9"
    },
    "3089": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3090": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3091": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3092": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "9"
    },
    "3093": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3094": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3095": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3096": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDA6"
    },
    "3099": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3100": {
      "fn": "Pausable._unpause",
      "offset": [
        2053,
        2170
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3101": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3103": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3108": {
      "op": "SHL"
    },
    "3109": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3110": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "3"
    },
    "3111": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "3113": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "3"
    },
    "3114": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC6C"
    },
    "3117": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3118": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3120": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3127": {
      "op": "SHL"
    },
    "3128": {
      "offset": [
        1612,
        1653
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3129": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3132": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3134": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3135": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "ADD",
      "path": "3"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3141": {
      "op": "DUP3"
    },
    "3142": {
      "op": "ADD"
    },
    "3143": {
      "op": "MSTORE"
    },
    "3144": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "3167": {
      "op": "SHL"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3170": {
      "op": "DUP3"
    },
    "3171": {
      "op": "ADD"
    },
    "3172": {
      "op": "MSTORE"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3175": {
      "op": "ADD"
    },
    "3176": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B"
    },
    "3179": {
      "op": "JUMP"
    },
    "3180": {
      "offset": [
        1612,
        1653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3181": {
      "fn": "Pausable._unpause",
      "offset": [
        2121,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 38,
      "value": "0x0"
    },
    "3183": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3184": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3189": {
      "op": "SHL"
    },
    "3190": {
      "op": "NOT"
    },
    "3191": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "AND",
      "path": "3"
    },
    "3192": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3193": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3194": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 39,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "3227": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3228": {
      "fn": "Pausable._unpause",
      "offset": [
        2150,
        2162
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3229": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3231": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3238": {
      "op": "SHL"
    },
    "3239": {
      "op": "SUB"
    },
    "3240": {
      "op": "SWAP1"
    },
    "3241": {
      "op": "SWAP2"
    },
    "3242": {
      "op": "AND"
    },
    "3243": {
      "op": "DUP2"
    },
    "3244": {
      "op": "MSTORE"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3247": {
      "op": "ADD"
    },
    "3248": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3250": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3251": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3252": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3253": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "SUB",
      "path": "3"
    },
    "3254": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3255": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "LOG1",
      "path": "3"
    },
    "3256": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2053,
        2170
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3257": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3258": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 40,
      "value": "0x40"
    },
    "3260": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3267": {
      "op": "SHL"
    },
    "3268": {
      "op": "SUB"
    },
    "3269": {
      "op": "DUP1"
    },
    "3270": {
      "op": "DUP6"
    },
    "3271": {
      "op": "AND"
    },
    "3272": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3274": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3275": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "9"
    },
    "3276": {
      "op": "MSTORE"
    },
    "3277": {
      "op": "DUP4"
    },
    "3278": {
      "op": "AND"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3281": {
      "op": "DUP3"
    },
    "3282": {
      "op": "ADD"
    },
    "3283": {
      "op": "MSTORE"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3286": {
      "op": "DUP2"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "DUP3"
    },
    "3289": {
      "op": "SWAP1"
    },
    "3290": {
      "op": "MSTORE"
    },
    "3291": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x895"
    },
    "3294": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3295": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3296": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3297": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3304": {
      "op": "SHL"
    },
    "3305": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1033,
        1060
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3308": {
      "op": "ADD"
    },
    "3309": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBE5"
    },
    "3312": {
      "op": "JUMP"
    },
    "3313": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3314": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3316": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3317": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 41
    },
    "3327": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3328": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3335": {
      "op": "SHL"
    },
    "3336": {
      "op": "SUB"
    },
    "3337": {
      "op": "NOT"
    },
    "3338": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3339": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "2"
    },
    "3340": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3341": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "2"
    },
    "3342": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3343": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3344": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x40"
    },
    "3346": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3347": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3348": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3349": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3350": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "2"
    },
    "3351": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3352": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3353": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3354": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3387": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3388": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3389": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3390": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "3391": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "2"
    },
    "3392": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3393": {
      "fn": "Pausable._pause",
      "offset": [
        1806,
        1921
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3394": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3396": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3401": {
      "op": "SHL"
    },
    "3402": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3403": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "3"
    },
    "3404": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "3406": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "3"
    },
    "3407": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3408": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD6B"
    },
    "3411": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3412": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3414": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3421": {
      "op": "SHL"
    },
    "3422": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3423": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3424": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3426": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "3"
    },
    "3427": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B"
    },
    "3430": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3431": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1096"
    },
    "3434": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3435": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3436": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1872
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 43,
      "value": "0x0"
    },
    "3438": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3439": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3444": {
      "op": "SHL"
    },
    "3445": {
      "op": "NOT"
    },
    "3446": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "AND",
      "path": "3"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3451": {
      "op": "SHL"
    },
    "3452": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "OR",
      "path": "3"
    },
    "3453": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3454": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3455": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 44,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "3488": {
      "fn": "Pausable._pause",
      "offset": [
        1901,
        1913
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC9C"
    },
    "3491": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3492": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3493": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3494": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3495": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDFB"
    },
    "3500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3503": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3504": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3505": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3507": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "9"
    },
    "3508": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3510": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3512": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3514": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3515": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3516": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3518": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "9"
    },
    "3519": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3552": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3553": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3554": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "9"
    },
    "3555": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3562": {
      "op": "SHL"
    },
    "3563": {
      "op": "SUB"
    },
    "3564": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "9"
    },
    "3565": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE78"
    },
    "3568": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3569": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3570": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3571": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3572": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "9"
    },
    "3578": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3579": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3580": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3581": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3582": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3583": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "branch": 65,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8D4"
    },
    "3589": {
      "branch": 65,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3590": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 45
    },
    "3591": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3592": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3594": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "9"
    },
    "3595": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3596": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3597": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3598": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "9"
    },
    "3599": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3600": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE19"
    },
    "3603": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3604": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3605": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11CB"
    },
    "3608": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3609": {
      "branch": 66,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3610": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8D4"
    },
    "3613": {
      "branch": 66,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3614": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3616": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3623": {
      "op": "SHL"
    },
    "3624": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3625": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3628": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3630": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3631": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "9"
    },
    "3632": {
      "op": "MSTORE"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3637": {
      "op": "DUP3"
    },
    "3638": {
      "op": "ADD"
    },
    "3639": {
      "op": "MSTORE"
    },
    "3640": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3675": {
      "op": "DUP3"
    },
    "3676": {
      "op": "ADD"
    },
    "3677": {
      "op": "MSTORE"
    },
    "3678": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3691": {
      "op": "SHL"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "MSTORE"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3699": {
      "op": "ADD"
    },
    "3700": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x34B"
    },
    "3703": {
      "op": "JUMP"
    },
    "3704": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3705": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3707": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 46,
      "value": "0xE87"
    },
    "3710": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3711": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3712": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3714": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3715": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE8F"
    },
    "3718": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3719": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3720": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "3721": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3722": {
      "op": "POP"
    },
    "3723": {
      "op": "POP"
    },
    "3724": {
      "op": "POP"
    },
    "3725": {
      "op": "POP"
    },
    "3726": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 47
    },
    "3731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "15"
    },
    "3732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "15"
    },
    "3733": {
      "branch": 60,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEF0"
    },
    "3737": {
      "branch": 60,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3741": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3747": {
      "op": "SHL"
    },
    "3748": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3752": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3754": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "15"
    },
    "3756": {
      "op": "MSTORE"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3761": {
      "op": "DUP3"
    },
    "3762": {
      "op": "ADD"
    },
    "3763": {
      "op": "MSTORE"
    },
    "3764": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3799": {
      "op": "DUP3"
    },
    "3800": {
      "op": "ADD"
    },
    "3801": {
      "op": "MSTORE"
    },
    "3802": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3811": {
      "op": "SHL"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3814": {
      "op": "DUP3"
    },
    "3815": {
      "op": "ADD"
    },
    "3816": {
      "op": "MSTORE"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3819": {
      "op": "ADD"
    },
    "3820": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34B"
    },
    "3823": {
      "op": "JUMP"
    },
    "3824": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3825": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3826": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3827": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 48,
      "value": "0xF3E"
    },
    "3830": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3831": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3833": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3840": {
      "op": "SHL"
    },
    "3841": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3842": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3845": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3848": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "15"
    },
    "3849": {
      "op": "MSTORE"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3854": {
      "op": "DUP3"
    },
    "3855": {
      "op": "ADD"
    },
    "3856": {
      "op": "MSTORE"
    },
    "3857": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3892": {
      "op": "DUP3"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "MSTORE"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3897": {
      "op": "ADD"
    },
    "3898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34B"
    },
    "3901": {
      "op": "JUMP"
    },
    "3902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3913": {
      "op": "SHL"
    },
    "3914": {
      "op": "SUB"
    },
    "3915": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "15"
    },
    "3916": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3921": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF5A"
    },
    "3924": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1219"
    },
    "3929": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "15"
    },
    "3939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "15"
    },
    "3943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "15"
    },
    "3944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "15"
    },
    "3946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "15"
    },
    "3947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "15"
    },
    "3948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3952": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "15"
    },
    "3954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF97"
    },
    "3957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "15"
    },
    "3963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "3965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "15"
    },
    "3966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3F"
    },
    "3968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "15"
    },
    "3970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "15"
    },
    "3971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "15"
    },
    "3973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "15"
    },
    "3986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "3987": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF9C"
    },
    "3990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3994": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "15"
    },
    "3996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "15"
    },
    "3998": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "15"
    },
    "4000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "15"
    },
    "4002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 49,
      "value": "0xFAC"
    },
    "4005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFB7"
    },
    "4011": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4013": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "4014": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "4015": {
      "op": "POP"
    },
    "4016": {
      "op": "POP"
    },
    "4017": {
      "op": "POP"
    },
    "4018": {
      "op": "POP"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "POP"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4023": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4024": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4026": {
      "branch": 61,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4027": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4028": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFC6"
    },
    "4031": {
      "branch": 61,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 50
    },
    "4034": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x70F"
    },
    "4037": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4038": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4039": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4040": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4041": {
      "branch": 62,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4042": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFD6"
    },
    "4045": {
      "branch": 62,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4046": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4047": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4048": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4049": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4050": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4052": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "15"
    },
    "4053": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4054": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4055": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 51
    },
    "4056": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4058": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4067": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4068": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4070": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "15"
    },
    "4071": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34B"
    },
    "4074": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4075": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4076": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1235"
    },
    "4079": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4080": {
      "op": "JUMPDEST"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4085": {
      "op": "DUP3"
    },
    "4086": {
      "op": "DUP5"
    },
    "4087": {
      "op": "SUB"
    },
    "4088": {
      "op": "SLT"
    },
    "4089": {
      "op": "ISZERO"
    },
    "4090": {
      "op": "PUSH2",
      "value": "0x1002"
    },
    "4093": {
      "op": "JUMPI"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4096": {
      "op": "DUP1"
    },
    "4097": {
      "op": "REVERT"
    },
    "4098": {
      "op": "JUMPDEST"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "op": "CALLDATALOAD"
    },
    "4101": {
      "op": "SWAP2"
    },
    "4102": {
      "op": "SWAP1"
    },
    "4103": {
      "op": "POP"
    },
    "4104": {
      "jump": "o",
      "op": "JUMP"
    },
    "4105": {
      "op": "JUMPDEST"
    },
    "4106": {
      "op": "DUP1"
    },
    "4107": {
      "op": "CALLDATALOAD"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4114": {
      "op": "SHL"
    },
    "4115": {
      "op": "SUB"
    },
    "4116": {
      "op": "DUP2"
    },
    "4117": {
      "op": "AND"
    },
    "4118": {
      "op": "DUP2"
    },
    "4119": {
      "op": "EQ"
    },
    "4120": {
      "op": "PUSH2",
      "value": "0x1020"
    },
    "4123": {
      "op": "JUMPI"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4126": {
      "op": "DUP1"
    },
    "4127": {
      "op": "REVERT"
    },
    "4128": {
      "op": "JUMPDEST"
    },
    "4129": {
      "op": "SWAP2"
    },
    "4130": {
      "op": "SWAP1"
    },
    "4131": {
      "op": "POP"
    },
    "4132": {
      "jump": "o",
      "op": "JUMP"
    },
    "4133": {
      "op": "JUMPDEST"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4138": {
      "op": "DUP3"
    },
    "4139": {
      "op": "DUP5"
    },
    "4140": {
      "op": "SUB"
    },
    "4141": {
      "op": "SLT"
    },
    "4142": {
      "op": "ISZERO"
    },
    "4143": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "4146": {
      "op": "JUMPI"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4149": {
      "op": "DUP1"
    },
    "4150": {
      "op": "REVERT"
    },
    "4151": {
      "op": "JUMPDEST"
    },
    "4152": {
      "op": "PUSH2",
      "value": "0x70F"
    },
    "4155": {
      "op": "DUP3"
    },
    "4156": {
      "op": "PUSH2",
      "value": "0x1009"
    },
    "4159": {
      "jump": "i",
      "op": "JUMP"
    },
    "4160": {
      "op": "JUMPDEST"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4163": {
      "op": "DUP1"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4168": {
      "op": "DUP5"
    },
    "4169": {
      "op": "DUP7"
    },
    "4170": {
      "op": "SUB"
    },
    "4171": {
      "op": "SLT"
    },
    "4172": {
      "op": "ISZERO"
    },
    "4173": {
      "op": "PUSH2",
      "value": "0x1055"
    },
    "4176": {
      "op": "JUMPI"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4179": {
      "op": "DUP1"
    },
    "4180": {
      "op": "REVERT"
    },
    "4181": {
      "op": "JUMPDEST"
    },
    "4182": {
      "op": "POP"
    },
    "4183": {
      "op": "POP"
    },
    "4184": {
      "op": "DUP2"
    },
    "4185": {
      "op": "CALLDATALOAD"
    },
    "4186": {
      "op": "SWAP4"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4189": {
      "op": "DUP4"
    },
    "4190": {
      "op": "ADD"
    },
    "4191": {
      "op": "CALLDATALOAD"
    },
    "4192": {
      "op": "SWAP4"
    },
    "4193": {
      "op": "POP"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4196": {
      "op": "SWAP1"
    },
    "4197": {
      "op": "SWAP3"
    },
    "4198": {
      "op": "ADD"
    },
    "4199": {
      "op": "CALLDATALOAD"
    },
    "4200": {
      "op": "SWAP2"
    },
    "4201": {
      "op": "SWAP1"
    },
    "4202": {
      "op": "POP"
    },
    "4203": {
      "jump": "o",
      "op": "JUMP"
    },
    "4204": {
      "op": "JUMPDEST"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4207": {
      "op": "DUP1"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4210": {
      "op": "DUP4"
    },
    "4211": {
      "op": "DUP6"
    },
    "4212": {
      "op": "SUB"
    },
    "4213": {
      "op": "SLT"
    },
    "4214": {
      "op": "ISZERO"
    },
    "4215": {
      "op": "PUSH2",
      "value": "0x107F"
    },
    "4218": {
      "op": "JUMPI"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4221": {
      "op": "DUP1"
    },
    "4222": {
      "op": "REVERT"
    },
    "4223": {
      "op": "JUMPDEST"
    },
    "4224": {
      "op": "PUSH2",
      "value": "0x1088"
    },
    "4227": {
      "op": "DUP4"
    },
    "4228": {
      "op": "PUSH2",
      "value": "0x1009"
    },
    "4231": {
      "jump": "i",
      "op": "JUMP"
    },
    "4232": {
      "op": "JUMPDEST"
    },
    "4233": {
      "op": "SWAP5"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4236": {
      "op": "SWAP4"
    },
    "4237": {
      "op": "SWAP1"
    },
    "4238": {
      "op": "SWAP4"
    },
    "4239": {
      "op": "ADD"
    },
    "4240": {
      "op": "CALLDATALOAD"
    },
    "4241": {
      "op": "SWAP4"
    },
    "4242": {
      "op": "POP"
    },
    "4243": {
      "op": "POP"
    },
    "4244": {
      "op": "POP"
    },
    "4245": {
      "jump": "o",
      "op": "JUMP"
    },
    "4246": {
      "op": "JUMPDEST"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4249": {
      "op": "DUP1"
    },
    "4250": {
      "op": "DUP3"
    },
    "4251": {
      "op": "MSTORE"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4254": {
      "op": "SWAP1"
    },
    "4255": {
      "op": "DUP3"
    },
    "4256": {
      "op": "ADD"
    },
    "4257": {
      "op": "MSTORE"
    },
    "4258": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4277": {
      "op": "SHL"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4280": {
      "op": "DUP3"
    },
    "4281": {
      "op": "ADD"
    },
    "4282": {
      "op": "MSTORE"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4285": {
      "op": "ADD"
    },
    "4286": {
      "op": "SWAP1"
    },
    "4287": {
      "jump": "o",
      "op": "JUMP"
    },
    "4288": {
      "op": "JUMPDEST"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4291": {
      "op": "DUP1"
    },
    "4292": {
      "op": "DUP3"
    },
    "4293": {
      "op": "MSTORE"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4296": {
      "op": "SWAP1"
    },
    "4297": {
      "op": "DUP3"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "op": "MSTORE"
    },
    "4300": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4335": {
      "op": "DUP3"
    },
    "4336": {
      "op": "ADD"
    },
    "4337": {
      "op": "MSTORE"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4340": {
      "op": "ADD"
    },
    "4341": {
      "op": "SWAP1"
    },
    "4342": {
      "jump": "o",
      "op": "JUMP"
    },
    "4343": {
      "op": "JUMPDEST"
    },
    "4344": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4351": {
      "op": "SHL"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4354": {
      "op": "MSTORE"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4359": {
      "op": "MSTORE"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4364": {
      "op": "REVERT"
    },
    "4365": {
      "op": "JUMPDEST"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4368": {
      "op": "DUP3"
    },
    "4369": {
      "op": "DUP3"
    },
    "4370": {
      "op": "LT"
    },
    "4371": {
      "op": "ISZERO"
    },
    "4372": {
      "op": "PUSH2",
      "value": "0x111F"
    },
    "4375": {
      "op": "JUMPI"
    },
    "4376": {
      "op": "PUSH2",
      "value": "0x111F"
    },
    "4379": {
      "op": "PUSH2",
      "value": "0x10F7"
    },
    "4382": {
      "jump": "i",
      "op": "JUMP"
    },
    "4383": {
      "op": "JUMPDEST"
    },
    "4384": {
      "op": "POP"
    },
    "4385": {
      "op": "SUB"
    },
    "4386": {
      "op": "SWAP1"
    },
    "4387": {
      "jump": "o",
      "op": "JUMP"
    },
    "4388": {
      "op": "JUMPDEST"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4391": {
      "op": "DUP1"
    },
    "4392": {
      "op": "DUP3"
    },
    "4393": {
      "op": "MSTORE"
    },
    "4394": {
      "op": "DUP2"
    },
    "4395": {
      "op": "DUP2"
    },
    "4396": {
      "op": "ADD"
    },
    "4397": {
      "op": "MSTORE"
    },
    "4398": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4433": {
      "op": "DUP3"
    },
    "4434": {
      "op": "ADD"
    },
    "4435": {
      "op": "MSTORE"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "SWAP1"
    },
    "4440": {
      "jump": "o",
      "op": "JUMP"
    },
    "4441": {
      "op": "JUMPDEST"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4446": {
      "op": "DUP3"
    },
    "4447": {
      "op": "DUP5"
    },
    "4448": {
      "op": "SUB"
    },
    "4449": {
      "op": "SLT"
    },
    "4450": {
      "op": "ISZERO"
    },
    "4451": {
      "op": "PUSH2",
      "value": "0x116B"
    },
    "4454": {
      "op": "JUMPI"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4457": {
      "op": "DUP1"
    },
    "4458": {
      "op": "REVERT"
    },
    "4459": {
      "op": "JUMPDEST"
    },
    "4460": {
      "op": "POP"
    },
    "4461": {
      "op": "MLOAD"
    },
    "4462": {
      "op": "SWAP2"
    },
    "4463": {
      "op": "SWAP1"
    },
    "4464": {
      "op": "POP"
    },
    "4465": {
      "jump": "o",
      "op": "JUMP"
    },
    "4466": {
      "op": "JUMPDEST"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4469": {
      "op": "DUP3"
    },
    "4470": {
      "op": "NOT"
    },
    "4471": {
      "op": "DUP3"
    },
    "4472": {
      "op": "GT"
    },
    "4473": {
      "op": "ISZERO"
    },
    "4474": {
      "op": "PUSH2",
      "value": "0x1185"
    },
    "4477": {
      "op": "JUMPI"
    },
    "4478": {
      "op": "PUSH2",
      "value": "0x1185"
    },
    "4481": {
      "op": "PUSH2",
      "value": "0x10F7"
    },
    "4484": {
      "jump": "i",
      "op": "JUMP"
    },
    "4485": {
      "op": "JUMPDEST"
    },
    "4486": {
      "op": "POP"
    },
    "4487": {
      "op": "ADD"
    },
    "4488": {
      "op": "SWAP1"
    },
    "4489": {
      "jump": "o",
      "op": "JUMP"
    },
    "4490": {
      "op": "JUMPDEST"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4493": {
      "op": "DUP2"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4496": {
      "op": "NOT"
    },
    "4497": {
      "op": "DIV"
    },
    "4498": {
      "op": "DUP4"
    },
    "4499": {
      "op": "GT"
    },
    "4500": {
      "op": "DUP3"
    },
    "4501": {
      "op": "ISZERO"
    },
    "4502": {
      "op": "ISZERO"
    },
    "4503": {
      "op": "AND"
    },
    "4504": {
      "op": "ISZERO"
    },
    "4505": {
      "op": "PUSH2",
      "value": "0x11A4"
    },
    "4508": {
      "op": "JUMPI"
    },
    "4509": {
      "op": "PUSH2",
      "value": "0x11A4"
    },
    "4512": {
      "op": "PUSH2",
      "value": "0x10F7"
    },
    "4515": {
      "jump": "i",
      "op": "JUMP"
    },
    "4516": {
      "op": "JUMPDEST"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "op": "MUL"
    },
    "4519": {
      "op": "SWAP1"
    },
    "4520": {
      "jump": "o",
      "op": "JUMP"
    },
    "4521": {
      "op": "JUMPDEST"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4524": {
      "op": "DUP3"
    },
    "4525": {
      "op": "PUSH2",
      "value": "0x11C6"
    },
    "4528": {
      "op": "JUMPI"
    },
    "4529": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4536": {
      "op": "SHL"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4539": {
      "op": "MSTORE"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4544": {
      "op": "MSTORE"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4549": {
      "op": "REVERT"
    },
    "4550": {
      "op": "JUMPDEST"
    },
    "4551": {
      "op": "POP"
    },
    "4552": {
      "op": "DIV"
    },
    "4553": {
      "op": "SWAP1"
    },
    "4554": {
      "jump": "o",
      "op": "JUMP"
    },
    "4555": {
      "op": "JUMPDEST"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4560": {
      "op": "DUP3"
    },
    "4561": {
      "op": "DUP5"
    },
    "4562": {
      "op": "SUB"
    },
    "4563": {
      "op": "SLT"
    },
    "4564": {
      "op": "ISZERO"
    },
    "4565": {
      "op": "PUSH2",
      "value": "0x11DD"
    },
    "4568": {
      "op": "JUMPI"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4571": {
      "op": "DUP1"
    },
    "4572": {
      "op": "REVERT"
    },
    "4573": {
      "op": "JUMPDEST"
    },
    "4574": {
      "op": "DUP2"
    },
    "4575": {
      "op": "MLOAD"
    },
    "4576": {
      "op": "DUP1"
    },
    "4577": {
      "op": "ISZERO"
    },
    "4578": {
      "op": "ISZERO"
    },
    "4579": {
      "op": "DUP2"
    },
    "4580": {
      "op": "EQ"
    },
    "4581": {
      "op": "PUSH2",
      "value": "0x70F"
    },
    "4584": {
      "op": "JUMPI"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4587": {
      "op": "DUP1"
    },
    "4588": {
      "op": "REVERT"
    },
    "4589": {
      "op": "JUMPDEST"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4592": {
      "op": "JUMPDEST"
    },
    "4593": {
      "op": "DUP4"
    },
    "4594": {
      "op": "DUP2"
    },
    "4595": {
      "op": "LT"
    },
    "4596": {
      "op": "ISZERO"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x1208"
    },
    "4600": {
      "op": "JUMPI"
    },
    "4601": {
      "op": "DUP2"
    },
    "4602": {
      "op": "DUP2"
    },
    "4603": {
      "op": "ADD"
    },
    "4604": {
      "op": "MLOAD"
    },
    "4605": {
      "op": "DUP4"
    },
    "4606": {
      "op": "DUP3"
    },
    "4607": {
      "op": "ADD"
    },
    "4608": {
      "op": "MSTORE"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4611": {
      "op": "ADD"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x11F0"
    },
    "4615": {
      "op": "JUMP"
    },
    "4616": {
      "op": "JUMPDEST"
    },
    "4617": {
      "op": "DUP4"
    },
    "4618": {
      "op": "DUP2"
    },
    "4619": {
      "op": "GT"
    },
    "4620": {
      "op": "ISZERO"
    },
    "4621": {
      "op": "PUSH2",
      "value": "0x895"
    },
    "4624": {
      "op": "JUMPI"
    },
    "4625": {
      "op": "POP"
    },
    "4626": {
      "op": "POP"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4629": {
      "op": "SWAP2"
    },
    "4630": {
      "op": "ADD"
    },
    "4631": {
      "op": "MSTORE"
    },
    "4632": {
      "jump": "o",
      "op": "JUMP"
    },
    "4633": {
      "op": "JUMPDEST"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4636": {
      "op": "DUP3"
    },
    "4637": {
      "op": "MLOAD"
    },
    "4638": {
      "op": "PUSH2",
      "value": "0x122B"
    },
    "4641": {
      "op": "DUP2"
    },
    "4642": {
      "op": "DUP5"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4645": {
      "op": "DUP8"
    },
    "4646": {
      "op": "ADD"
    },
    "4647": {
      "op": "PUSH2",
      "value": "0x11ED"
    },
    "4650": {
      "jump": "i",
      "op": "JUMP"
    },
    "4651": {
      "op": "JUMPDEST"
    },
    "4652": {
      "op": "SWAP2"
    },
    "4653": {
      "op": "SWAP1"
    },
    "4654": {
      "op": "SWAP2"
    },
    "4655": {
      "op": "ADD"
    },
    "4656": {
      "op": "SWAP3"
    },
    "4657": {
      "op": "SWAP2"
    },
    "4658": {
      "op": "POP"
    },
    "4659": {
      "op": "POP"
    },
    "4660": {
      "jump": "o",
      "op": "JUMP"
    },
    "4661": {
      "op": "JUMPDEST"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4664": {
      "op": "DUP2"
    },
    "4665": {
      "op": "MSTORE"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4668": {
      "op": "DUP3"
    },
    "4669": {
      "op": "MLOAD"
    },
    "4670": {
      "op": "DUP1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4673": {
      "op": "DUP5"
    },
    "4674": {
      "op": "ADD"
    },
    "4675": {
      "op": "MSTORE"
    },
    "4676": {
      "op": "PUSH2",
      "value": "0x1254"
    },
    "4679": {
      "op": "DUP2"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4682": {
      "op": "DUP6"
    },
    "4683": {
      "op": "ADD"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4686": {
      "op": "DUP8"
    },
    "4687": {
      "op": "ADD"
    },
    "4688": {
      "op": "PUSH2",
      "value": "0x11ED"
    },
    "4691": {
      "jump": "i",
      "op": "JUMP"
    },
    "4692": {
      "op": "JUMPDEST"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4695": {
      "op": "ADD"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4698": {
      "op": "NOT"
    },
    "4699": {
      "op": "AND"
    },
    "4700": {
      "op": "SWAP2"
    },
    "4701": {
      "op": "SWAP1"
    },
    "4702": {
      "op": "SWAP2"
    },
    "4703": {
      "op": "ADD"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4706": {
      "op": "ADD"
    },
    "4707": {
      "op": "SWAP3"
    },
    "4708": {
      "op": "SWAP2"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "op": "POP"
    },
    "4711": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6686abe8903537f7e8d074cc6bbc7596053ea558",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract AniwarPool is Ownable, Pausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    // Info of each user.\n    struct UserInfo {\n        uint256 timeLastStaked; // Last time Staked to calculate apy\n        uint256 amount; // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt.\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken; // Address of LP token contract.\n        uint256 apy; // Rate of token per year apy/1000\n        uint256 startTime;\n        uint256 endTime;\n    }\n\n    // Bonus muliplier for early ani makers.\n    uint256 public BONUS_MULTIPLIER = 1;\n\n    // Info of each pool.\n    PoolInfo public poolInfo;\n    // Info of each user that stakes LP tokens.\n    mapping(address => UserInfo) public userInfo;\n\n    event EnterStaking(address indexed user, uint256 amount);\n    event LeaveStaking(address indexed user, uint256 amount);\n    event ClaimReward(address indexed user, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 amount);\n\n    constructor(\n        IERC20 _aniToken,\n        uint256 _apy,\n        uint256 _startTime\n    ) {\n        uint256 startTime = block.timestamp + _startTime;\n        // staking pool\n        poolInfo = PoolInfo({\n            lpToken: _aniToken,\n            apy: _apy,\n            startTime: startTime,\n            endTime: startTime + 31556926 // plus one year\n        });\n    }\n\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\n        BONUS_MULTIPLIER = multiplierNumber;\n    }\n\n    // Update the given pool's Ani Apy. Can only be called by the owner.\n    function setApy(uint256 _apy) public onlyOwner {\n        poolInfo.apy = _apy;\n    }\n\n    // Update the given pool's Ani Apy. Can only be called by the owner.\n    function setEndTime(uint256 _endTime) public onlyOwner {\n        require(_endTime > getCurrentTime());\n        poolInfo.endTime = _endTime;\n    }\n\n    // Stake Ani tokens to AniPool\n    function enterStaking(uint256 _amount) public nonReentrant {\n        require(poolInfo.endTime > getCurrentTime(), \"Time: Farm has ended\");\n        require(\n            poolInfo.lpToken.allowance(msg.sender, address(this)) >= _amount,\n            \"Allowance: Not enough Allowance\"\n        );\n        UserInfo storage user = userInfo[msg.sender];\n        if (_amount > 0) {\n            poolInfo.lpToken.safeTransferFrom(\n                address(msg.sender),\n                address(this),\n                _amount\n            );\n            user.amount = user.amount + _amount;\n        }\n        user.timeLastStaked = block.timestamp;\n\n        emit EnterStaking(msg.sender, _amount);\n    }\n\n    // Withdraw Ani tokens from STAKING.\n    function leaveStaking(uint256 _amount) public whenNotPaused nonReentrant {\n        PoolInfo storage pool = poolInfo;\n        updateUser(msg.sender);\n        UserInfo storage user = userInfo[msg.sender];\n        require(user.amount >= _amount, \"withdraw: not good\");\n        if (_amount > 0) {\n            user.amount = user.amount - _amount;\n            pool.lpToken.safeTransfer(msg.sender, _amount);\n        }\n        emit LeaveStaking(msg.sender, _amount);\n    }\n\n    function updateUser(address _userAddress) public {\n        if (getCurrentTime() >= poolInfo.endTime) {\n            return;\n        }\n        UserInfo storage user = userInfo[_userAddress];\n        user.rewardDebt += calculateRewardDebt(\n            user.timeLastStaked,\n            getCurrentTime(),\n            user.amount\n        );\n    }\n\n    // ClaimAllReward\n    function claimReward() public whenNotPaused nonReentrant {\n        updateUser(msg.sender);\n        UserInfo storage user = userInfo[msg.sender];\n        require(user.rewardDebt > 0, \"Reward Amount: wut?\");\n        poolInfo.lpToken.safeTransfer(msg.sender, user.rewardDebt);\n        emit ClaimReward(msg.sender, user.rewardDebt);\n        user.rewardDebt = 0;\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw() public whenNotPaused {\n        UserInfo storage user = userInfo[msg.sender];\n        poolInfo.lpToken.safeTransfer(address(msg.sender), user.amount);\n        emit EmergencyWithdraw(msg.sender, user.amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n    }\n\n    // Get time by current Time\n    function calculateRewardDebt(\n        uint256 _from,\n        uint256 _to,\n        uint256 _userAmount\n    ) public view returns (uint256) {\n        uint256 multiplier = (_to - _from) * BONUS_MULTIPLIER;\n        uint256 numberOfDays = multiplier / 86400; // 1 Day = 86400 seconds\n        uint256 apyPerDay = (poolInfo.apy * 1000) / 365;\n        return (_userAmount * numberOfDays * apyPerDay) / (1000 * 1000);\n    }\n\n    // Safe ani transfer function, just in case if rounding error causes pool to not have enough CAKEs.\n    function safeAniTransfer(address _to, uint256 _amount) public onlyOwner {\n        uint256 aniBal = poolInfo.lpToken.balanceOf(address(this));\n        if (_amount > aniBal) {\n            poolInfo.lpToken.transfer(_to, aniBal);\n        } else {\n            poolInfo.lpToken.transfer(_to, _amount);\n        }\n    }\n\n    function getCurrentTime() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n}\n",
  "sourceMap": "297:5451:23:-:0;;;997:1;963:35;;1413:373;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:2;666:10:16;867:9:2;:23::i;:::-;934:5:3;924:15;;-1:-1:-1;;;;924:15:3;;;;1742:22:4;;1537:28:23;1555:10;1537:15;:28;:::i;:::-;1517:48;;1610:169;;;;;;;;1642:9;-1:-1:-1;;;;;1610:169:23;;;;;1670:4;1610:169;;;;1699:9;1610:169;;;;1731:9;1743:8;1731:20;;;;:::i;:::-;1610:169;;1599:180;;:8;:180;;-1:-1:-1;;;;;;1599:180:23;-1:-1:-1;;;;;1599:180:23;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;297:5451:23;;-1:-1:-1;;;297:5451:23;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:427:27:-;117:6;125;133;186:2;174:9;165:7;161:23;157:32;154:52;;;202:1;199;192:12;154:52;228:16;;-1:-1:-1;;;;;273:31:27;;263:42;;253:70;;319:1;316;309:12;253:70;387:2;372:18;;366:25;431:2;416:18;;;410:25;342:5;;366:25;;-1:-1:-1;410:25:27;14:427;-1:-1:-1;;;14:427:27:o;446:225::-;486:3;517:1;513:6;510:1;507:13;504:136;;;562:10;557:3;553:20;550:1;543:31;597:4;594:1;587:15;625:4;622:1;615:15;504:136;-1:-1:-1;656:9:27;;446:225::o;:::-;297:5451:23;;;;;;",
  "sourcePath": "contracts/AniwarPool.sol",
  "type": "contract"
}