{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "splitDuration_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "splitCount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initializedAmount_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Begin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_TGERatio",
          "type": "uint256"
        }
      ],
      "name": "addBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "beneficiaries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "TGEAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmountHasBeenWithdrawn",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isInitialized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "calculateWithdrawableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "startSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
    "2": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "3": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "4": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "5": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "8": "contracts/AniwarVestingV2.sol"
  },
  "ast": {
    "absolutePath": "contracts/AniwarVestingV2.sol",
    "exportedSymbols": {
      "Address": [
        2453
      ],
      "AniwarVestingV2": [
        1688
      ],
      "Context": [
        2156
      ],
      "IERC20": [
        1910
      ],
      "Ownable": [
        1792
      ],
      "ReentrancyGuard": [
        1832
      ],
      "SafeERC20": [
        2134
      ]
    },
    "id": 1689,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1145,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1146,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1689,
        "sourceUnit": 1911,
        "src": "57:56:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1147,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1689,
        "sourceUnit": 2135,
        "src": "114:65:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1148,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1689,
        "sourceUnit": 1833,
        "src": "180:62:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1149,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1689,
        "sourceUnit": 1793,
        "src": "243:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1151,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1792,
              "src": "356:7:8"
            },
            "id": 1152,
            "nodeType": "InheritanceSpecifier",
            "src": "356:7:8"
          },
          {
            "baseName": {
              "id": 1153,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1832,
              "src": "365:15:8"
            },
            "id": 1154,
            "nodeType": "InheritanceSpecifier",
            "src": "365:15:8"
          }
        ],
        "canonicalName": "AniwarVestingV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1150,
          "nodeType": "StructuredDocumentation",
          "src": "297:30:8",
          "text": " @title TokenVesting"
        },
        "fullyImplemented": true,
        "id": 1688,
        "linearizedBaseContracts": [
          1688,
          1832,
          1792,
          2156
        ],
        "name": "AniwarVestingV2",
        "nameLocation": "337:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1158,
            "libraryName": {
              "id": 1155,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2134,
              "src": "393:9:8"
            },
            "nodeType": "UsingForDirective",
            "src": "387:27:8",
            "typeName": {
              "id": 1157,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1156,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1910,
                "src": "407:6:8"
              },
              "referencedDeclaration": 1910,
              "src": "407:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1910",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 1161,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "478:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1688,
            "src": "453:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1910",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1160,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1159,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1910,
                "src": "453:6:8"
              },
              "referencedDeclaration": 1910,
              "src": "453:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1910",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "AniwarVestingV2.Beneficiary",
            "id": 1172,
            "members": [
              {
                "constant": false,
                "id": 1163,
                "mutability": "mutable",
                "name": "totalAmount",
                "nameLocation": "528:11:8",
                "nodeType": "VariableDeclaration",
                "scope": 1172,
                "src": "520:19:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1162,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1165,
                "mutability": "mutable",
                "name": "TGEAmount",
                "nameLocation": "557:9:8",
                "nodeType": "VariableDeclaration",
                "scope": 1172,
                "src": "549:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1164,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "549:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1167,
                "mutability": "mutable",
                "name": "cliff",
                "nameLocation": "584:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 1172,
                "src": "576:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1166,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "576:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1169,
                "mutability": "mutable",
                "name": "totalAmountHasBeenWithdrawn",
                "nameLocation": "607:27:8",
                "nodeType": "VariableDeclaration",
                "scope": 1172,
                "src": "599:35:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1168,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "599:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1171,
                "mutability": "mutable",
                "name": "isInitialized",
                "nameLocation": "649:13:8",
                "nodeType": "VariableDeclaration",
                "scope": 1172,
                "src": "644:18:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1170,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "644:4:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Beneficiary",
            "nameLocation": "498:11:8",
            "nodeType": "StructDefinition",
            "scope": 1688,
            "src": "491:178:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1174,
            "mutability": "mutable",
            "name": "_isStarted",
            "nameLocation": "688:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1688,
            "src": "675:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1173,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "675:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1176,
            "mutability": "mutable",
            "name": "_startedTime",
            "nameLocation": "720:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1688,
            "src": "704:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1175,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "704:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1178,
            "mutability": "immutable",
            "name": "_splitDuration",
            "nameLocation": "764:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1688,
            "src": "738:40:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1177,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "738:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1180,
            "mutability": "immutable",
            "name": "_splitCount",
            "nameLocation": "810:11:8",
            "nodeType": "VariableDeclaration",
            "scope": 1688,
            "src": "784:37:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1179,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "784:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1182,
            "mutability": "mutable",
            "name": "_vestingSchedulesInitializedAmount",
            "nameLocation": "843:34:8",
            "nodeType": "VariableDeclaration",
            "scope": 1688,
            "src": "827:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1181,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "827:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1184,
            "mutability": "mutable",
            "name": "_vestingSchedulesInitializedAmountLeft",
            "nameLocation": "899:38:8",
            "nodeType": "VariableDeclaration",
            "scope": 1688,
            "src": "883:54:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "883:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1187,
            "mutability": "mutable",
            "name": "_beneficiariesAddress",
            "nameLocation": "962:21:8",
            "nodeType": "VariableDeclaration",
            "scope": 1688,
            "src": "944:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1185,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "944:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1186,
              "nodeType": "ArrayTypeName",
              "src": "944:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "01567739",
            "id": 1192,
            "mutability": "mutable",
            "name": "beneficiaries",
            "nameLocation": "1028:13:8",
            "nodeType": "VariableDeclaration",
            "scope": 1688,
            "src": "989:52:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$1172_storage_$",
              "typeString": "mapping(address => struct AniwarVestingV2.Beneficiary)"
            },
            "typeName": {
              "id": 1191,
              "keyType": {
                "id": 1188,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "997:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "989:31:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$1172_storage_$",
                "typeString": "mapping(address => struct AniwarVestingV2.Beneficiary)"
              },
              "valueType": {
                "id": 1190,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1189,
                  "name": "Beneficiary",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1172,
                  "src": "1008:11:8"
                },
                "referencedDeclaration": 1172,
                "src": "1008:11:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                  "typeString": "struct AniwarVestingV2.Beneficiary"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1196,
            "name": "Released",
            "nameLocation": "1054:8:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1194,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1071:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "1063:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1062:16:8"
            },
            "src": "1048:31:8"
          },
          {
            "anonymous": false,
            "id": 1198,
            "name": "Begin",
            "nameLocation": "1090:5:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1095:2:8"
            },
            "src": "1084:14:8"
          },
          {
            "body": {
              "id": 1206,
              "nodeType": "Block",
              "src": "1144:78:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1201,
                        "name": "_isStarted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "1162:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67206973206e6f7420537461727465642059657421",
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf5c4402f244d719b7c62f13c993b8eeeadaa2481282ee17a305adb42fd1f8df",
                          "typeString": "literal_string \"Vesting is not Started Yet!\""
                        },
                        "value": "Vesting is not Started Yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf5c4402f244d719b7c62f13c993b8eeeadaa2481282ee17a305adb42fd1f8df",
                          "typeString": "literal_string \"Vesting is not Started Yet!\""
                        }
                      ],
                      "id": 1200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1154:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:50:8"
                },
                {
                  "id": 1205,
                  "nodeType": "PlaceholderStatement",
                  "src": "1214:1:8"
                }
              ]
            },
            "id": 1207,
            "name": "onlyIfVestingScheduleStarted",
            "nameLocation": "1113:28:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1141:2:8"
            },
            "src": "1104:118:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1216,
              "nodeType": "Block",
              "src": "1270:71:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1288:11:8",
                        "subExpression": {
                          "id": 1210,
                          "name": "_isStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "1289:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67206973205374617274656421",
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1301:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa05298d608691a6caf05e0776749e7b22a74a3bcf5d4b0f646066854d7bea03",
                          "typeString": "literal_string \"Vesting is Started!\""
                        },
                        "value": "Vesting is Started!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa05298d608691a6caf05e0776749e7b22a74a3bcf5d4b0f646066854d7bea03",
                          "typeString": "literal_string \"Vesting is Started!\""
                        }
                      ],
                      "id": 1209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1280:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1214,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:43:8"
                },
                {
                  "id": 1215,
                  "nodeType": "PlaceholderStatement",
                  "src": "1333:1:8"
                }
              ]
            },
            "id": 1217,
            "name": "onlyIfVestingScheduleNotStarted",
            "nameLocation": "1236:31:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1267:2:8"
            },
            "src": "1227:114:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1267,
              "nodeType": "Block",
              "src": "1486:378:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1229,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1504:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 1232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1522:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1514:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1230,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1514:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1514:12:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1504:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616464726573732077726f6e6721",
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1528:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_346cb71b351efaa813155f363cefa0ea78b0fefb7abbf37c9369dae03a32f9c5",
                          "typeString": "literal_string \"Token address wrong!\""
                        },
                        "value": "Token address wrong!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_346cb71b351efaa813155f363cefa0ea78b0fefb7abbf37c9369dae03a32f9c5",
                          "typeString": "literal_string \"Token address wrong!\""
                        }
                      ],
                      "id": 1228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1496:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1496:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "1496:55:8"
                },
                {
                  "expression": {
                    "id": 1242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1238,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1161,
                      "src": "1561:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1910",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1240,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1577:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1239,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "1570:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1910_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1570:14:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1910",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1561:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1910",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1243,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:23:8"
                },
                {
                  "expression": {
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1244,
                      "name": "_splitDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1178,
                      "src": "1594:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1245,
                      "name": "splitDuration_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1221,
                      "src": "1611:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1594:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1249,
                          "name": "splitCount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1223,
                          "src": "1643:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1657:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1643:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53706c697420636f756e746572206d757374206265203e2030",
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1660:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36f7c549509625abadf227bab969e5255d4a71cbef8cdf3af25a2ec947d02cfb",
                          "typeString": "literal_string \"Split counter must be > 0\""
                        },
                        "value": "Split counter must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36f7c549509625abadf227bab969e5255d4a71cbef8cdf3af25a2ec947d02cfb",
                          "typeString": "literal_string \"Split counter must be > 0\""
                        }
                      ],
                      "id": 1248,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1635:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1254,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:53:8"
                },
                {
                  "expression": {
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1255,
                      "name": "_splitCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "1698:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1256,
                      "name": "splitCount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "1712:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1698:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1258,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:25:8"
                },
                {
                  "expression": {
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1259,
                      "name": "_vestingSchedulesInitializedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1182,
                      "src": "1733:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1260,
                      "name": "initializedAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "1770:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1733:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "1733:55:8"
                },
                {
                  "expression": {
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1263,
                      "name": "_vestingSchedulesInitializedAmountLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1184,
                      "src": "1798:38:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1264,
                      "name": "initializedAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "1839:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1798:59:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1266,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:59:8"
                }
              ]
            },
            "id": 1268,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "1376:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1368:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1221,
                  "mutability": "mutable",
                  "name": "splitDuration_",
                  "nameLocation": "1400:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1392:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "splitCount_",
                  "nameLocation": "1432:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1424:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "initializedAmount_",
                  "nameLocation": "1461:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1453:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1358:127:8"
            },
            "returnParameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1486:0:8"
            },
            "scope": 1688,
            "src": "1347:517:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "2128:808:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1284,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1274,
                          "src": "2159:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1285,
                          "name": "_vestingSchedulesInitializedAmountLeft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "2170:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2159:49:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2063616e6e6f74206164642062656e6566696369617279202062656361757365206e6f742073756666696369656e7420746f6b656e73",
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2222:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8c9341c031617880b6852de09cdc888bff6fdea1621ca0fc0b25cf4c32d3e4b",
                          "typeString": "literal_string \"TokenVesting: cannot add beneficiary  because not sufficient tokens\""
                        },
                        "value": "TokenVesting: cannot add beneficiary  because not sufficient tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8c9341c031617880b6852de09cdc888bff6fdea1621ca0fc0b25cf4c32d3e4b",
                          "typeString": "literal_string \"TokenVesting: cannot add beneficiary  because not sufficient tokens\""
                        }
                      ],
                      "id": 1283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2138:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2138:163:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1289,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:163:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1291,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1274,
                          "src": "2319:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2329:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2319:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20616d6f756e74206d757374206265203e2030",
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2332:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596",
                          "typeString": "literal_string \"TokenVesting: amount must be > 0\""
                        },
                        "value": "TokenVesting: amount must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596",
                          "typeString": "literal_string \"TokenVesting: amount must be > 0\""
                        }
                      ],
                      "id": 1290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2311:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1296,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:56:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1298,
                          "name": "_cliff",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1272,
                          "src": "2385:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1299,
                          "name": "_splitCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1180,
                          "src": "2394:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2385:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636c696666206d757374206c657373207468616e2073756d206f662073706c6974",
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2407:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20949075a6513fbde4c7e0a8ad23034e42b0e2bd4d852b12d787c7314a780ab0",
                          "typeString": "literal_string \"cliff must less than sum of split\""
                        },
                        "value": "cliff must less than sum of split"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20949075a6513fbde4c7e0a8ad23034e42b0e2bd4d852b12d787c7314a780ab0",
                          "typeString": "literal_string \"cliff must less than sum of split\""
                        }
                      ],
                      "id": 1297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2377:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1303,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:66:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1305,
                          "name": "_TGERatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1276,
                          "src": "2461:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2473:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "2461:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52617465206d757374206c657373207468616e2031303025",
                        "id": 1308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2478:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75f0c8b3c403551ea78209c699e2d936ca7564f0d8151458615fc694e117c418",
                          "typeString": "literal_string \"Rate must less than 100%\""
                        },
                        "value": "Rate must less than 100%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75f0c8b3c403551ea78209c699e2d936ca7564f0d8151458615fc694e117c418",
                          "typeString": "literal_string \"Rate must less than 100%\""
                        }
                      ],
                      "id": 1304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2453:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2453:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:52:8"
                },
                {
                  "assignments": [
                    1313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1313,
                      "mutability": "mutable",
                      "name": "beneficiary",
                      "nameLocation": "2535:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1362,
                      "src": "2515:31:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                        "typeString": "struct AniwarVestingV2.Beneficiary"
                      },
                      "typeName": {
                        "id": 1312,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1311,
                          "name": "Beneficiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1172,
                          "src": "2515:11:8"
                        },
                        "referencedDeclaration": 1172,
                        "src": "2515:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                          "typeString": "struct AniwarVestingV2.Beneficiary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1317,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1314,
                      "name": "beneficiaries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "2549:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$1172_storage_$",
                        "typeString": "mapping(address => struct AniwarVestingV2.Beneficiary storage ref)"
                      }
                    },
                    "id": 1316,
                    "indexExpression": {
                      "id": 1315,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1270,
                      "src": "2563:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2549:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Beneficiary_$1172_storage",
                      "typeString": "struct AniwarVestingV2.Beneficiary storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2515:61:8"
                },
                {
                  "condition": {
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2590:26:8",
                    "subExpression": {
                      "expression": {
                        "id": 1318,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1313,
                        "src": "2591:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                          "typeString": "struct AniwarVestingV2.Beneficiary storage pointer"
                        }
                      },
                      "id": 1319,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isInitialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1171,
                      "src": "2591:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1334,
                  "nodeType": "IfStatement",
                  "src": "2586:143:8",
                  "trueBody": {
                    "id": 1333,
                    "nodeType": "Block",
                    "src": "2618:111:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1321,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1313,
                              "src": "2632:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                                "typeString": "struct AniwarVestingV2.Beneficiary storage pointer"
                              }
                            },
                            "id": 1323,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isInitialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1171,
                            "src": "2632:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2660:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2632:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1326,
                        "nodeType": "ExpressionStatement",
                        "src": "2632:32:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1330,
                              "name": "_beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1270,
                              "src": "2705:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1327,
                              "name": "_beneficiariesAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "2678:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2678:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2678:40:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1332,
                        "nodeType": "ExpressionStatement",
                        "src": "2678:40:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1335,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1313,
                        "src": "2738:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                          "typeString": "struct AniwarVestingV2.Beneficiary storage pointer"
                        }
                      },
                      "id": 1337,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cliff",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1167,
                      "src": "2738:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1338,
                      "name": "_cliff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1272,
                      "src": "2758:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2738:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1340,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:26:8"
                },
                {
                  "expression": {
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1341,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1313,
                        "src": "2774:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                          "typeString": "struct AniwarVestingV2.Beneficiary storage pointer"
                        }
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1163,
                      "src": "2774:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1344,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "2801:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2774:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "2774:34:8"
                },
                {
                  "expression": {
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1347,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1313,
                        "src": "2818:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                          "typeString": "struct AniwarVestingV2.Beneficiary storage pointer"
                        }
                      },
                      "id": 1349,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "TGEAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1165,
                      "src": "2818:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1350,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1274,
                              "src": "2844:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1351,
                              "name": "_TGERatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1276,
                              "src": "2854:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2844:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1353,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2843:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2867:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "2843:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2818:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1357,
                  "nodeType": "ExpressionStatement",
                  "src": "2818:52:8"
                },
                {
                  "expression": {
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1358,
                      "name": "_vestingSchedulesInitializedAmountLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1184,
                      "src": "2880:38:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1359,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "2922:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2880:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1361,
                  "nodeType": "ExpressionStatement",
                  "src": "2880:49:8"
                }
              ]
            },
            "functionSelector": "b095e129",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1279,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1278,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "2086:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2086:9:8"
              },
              {
                "id": 1281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1280,
                  "name": "onlyIfVestingScheduleNotStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1217,
                  "src": "2096:31:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2096:31:8"
              }
            ],
            "name": "addBeneficiary",
            "nameLocation": "1952:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nameLocation": "1984:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "1976:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1272,
                  "mutability": "mutable",
                  "name": "_cliff",
                  "nameLocation": "2014:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "2006:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2038:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "2030:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1276,
                  "mutability": "mutable",
                  "name": "_TGERatio",
                  "nameLocation": "2063:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "2055:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1966:112:8"
            },
            "returnParameters": {
              "id": 1282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2128:0:8"
            },
            "scope": 1688,
            "src": "1943:993:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1396,
              "nodeType": "Block",
              "src": "3057:259:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1377,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3113:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AniwarVestingV2_$1688",
                                    "typeString": "contract AniwarVestingV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AniwarVestingV2_$1688",
                                    "typeString": "contract AniwarVestingV2"
                                  }
                                ],
                                "id": 1376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3105:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1375,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3105:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3105:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1373,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1161,
                              "src": "3088:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1910",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1849,
                            "src": "3088:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3088:31:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1380,
                          "name": "_vestingSchedulesInitializedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1182,
                          "src": "3139:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3088:85:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420657863656564732062616c616e636520616e6420496e6974",
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3187:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b19834346339b5c407b5bdea47c28d932dd70f47c996f0a543aee7ae31c8a5e4",
                          "typeString": "literal_string \"Amount exceeds balance and Init\""
                        },
                        "value": "Amount exceeds balance and Init"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b19834346339b5c407b5bdea47c28d932dd70f47c996f0a543aee7ae31c8a5e4",
                          "typeString": "literal_string \"Amount exceeds balance and Init\""
                        }
                      ],
                      "id": 1372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3067:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3067:163:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1384,
                  "nodeType": "ExpressionStatement",
                  "src": "3067:163:8"
                },
                {
                  "expression": {
                    "id": 1387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1385,
                      "name": "_isStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1174,
                      "src": "3240:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3253:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3240:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1388,
                  "nodeType": "ExpressionStatement",
                  "src": "3240:17:8"
                },
                {
                  "expression": {
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1389,
                      "name": "_startedTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1176,
                      "src": "3267:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1390,
                      "name": "_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1365,
                      "src": "3282:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3267:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1392,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:20:8"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1393,
                      "name": "Begin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1198,
                      "src": "3302:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3302:7:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1395,
                  "nodeType": "EmitStatement",
                  "src": "3297:12:8"
                }
              ]
            },
            "functionSelector": "746c7c3c",
            "id": 1397,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1368,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1367,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "3003:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3003:9:8"
              },
              {
                "id": 1370,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1369,
                  "name": "onlyIfVestingScheduleNotStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1217,
                  "src": "3021:31:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3021:31:8"
              }
            ],
            "name": "startSchedule",
            "nameLocation": "2951:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1365,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "2973:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1397,
                  "src": "2965:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2964:15:8"
            },
            "returnParameters": {
              "id": 1371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3057:0:8"
            },
            "scope": 1688,
            "src": "2942:374:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1470,
              "nodeType": "Block",
              "src": "3439:812:8",
              "statements": [
                {
                  "body": {
                    "id": 1468,
                    "nodeType": "Block",
                    "src": "3599:646:8",
                    "statements": [
                      {
                        "assignments": [
                          1418
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1418,
                            "mutability": "mutable",
                            "name": "beneficiaryAddress",
                            "nameLocation": "3621:18:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1468,
                            "src": "3613:26:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1417,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3613:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1422,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1419,
                            "name": "_beneficiariesAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "3642:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1421,
                          "indexExpression": {
                            "id": 1420,
                            "name": "beneficiaryIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1407,
                            "src": "3681:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3642:69:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3613:98:8"
                      },
                      {
                        "assignments": [
                          1425
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1425,
                            "mutability": "mutable",
                            "name": "beneficiary",
                            "nameLocation": "3745:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1468,
                            "src": "3725:31:8",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                              "typeString": "struct AniwarVestingV2.Beneficiary"
                            },
                            "typeName": {
                              "id": 1424,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1423,
                                "name": "Beneficiary",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1172,
                                "src": "3725:11:8"
                              },
                              "referencedDeclaration": 1172,
                              "src": "3725:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                                "typeString": "struct AniwarVestingV2.Beneficiary"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1429,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1426,
                            "name": "beneficiaries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "3759:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$1172_storage_$",
                              "typeString": "mapping(address => struct AniwarVestingV2.Beneficiary storage ref)"
                            }
                          },
                          "id": 1428,
                          "indexExpression": {
                            "id": 1427,
                            "name": "beneficiaryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1418,
                            "src": "3773:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3759:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Beneficiary_$1172_storage",
                            "typeString": "struct AniwarVestingV2.Beneficiary storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3725:67:8"
                      },
                      {
                        "assignments": [
                          1431
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1431,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "3814:6:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1468,
                            "src": "3806:14:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1430,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3806:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1435,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1433,
                              "name": "beneficiaryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1418,
                              "src": "3851:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1432,
                            "name": "calculateWithdrawableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1629,
                            "src": "3823:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3823:47:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3806:64:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1436,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "3888:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                                "typeString": "struct AniwarVestingV2.Beneficiary storage pointer"
                              }
                            },
                            "id": 1437,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isInitialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1171,
                            "src": "3888:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1438,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1431,
                              "src": "3917:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3926:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3917:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3888:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1467,
                        "nodeType": "IfStatement",
                        "src": "3884:351:8",
                        "trueBody": {
                          "id": 1466,
                          "nodeType": "Block",
                          "src": "3929:306:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1442,
                                    "name": "beneficiary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1425,
                                    "src": "3947:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                                      "typeString": "struct AniwarVestingV2.Beneficiary storage pointer"
                                    }
                                  },
                                  "id": 1444,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalAmountHasBeenWithdrawn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1169,
                                  "src": "3947:39:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1445,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1431,
                                  "src": "3990:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3947:49:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1447,
                              "nodeType": "ExpressionStatement",
                              "src": "3947:49:8"
                            },
                            {
                              "assignments": [
                                1449
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1449,
                                  "mutability": "mutable",
                                  "name": "beneficiaryPayable",
                                  "nameLocation": "4030:18:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1466,
                                  "src": "4014:34:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1448,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4014:15:8",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1454,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1452,
                                    "name": "beneficiaryAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1418,
                                    "src": "4080:18:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4051:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1450,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4051:8:8",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4051:65:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4014:102:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1458,
                                    "name": "beneficiaryPayable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1449,
                                    "src": "4154:18:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 1459,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1431,
                                    "src": "4174:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1455,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1161,
                                    "src": "4134:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1910",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1941,
                                  "src": "4134:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1910_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1910_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4134:47:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1461,
                              "nodeType": "ExpressionStatement",
                              "src": "4134:47:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1463,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1431,
                                    "src": "4213:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1462,
                                  "name": "Released",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1196,
                                  "src": "4204:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4204:16:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1465,
                              "nodeType": "EmitStatement",
                              "src": "4199:21:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1410,
                      "name": "beneficiaryIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "3509:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1411,
                        "name": "_beneficiariesAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "3528:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3528:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3509:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1469,
                  "initializationExpression": {
                    "assignments": [
                      1407
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1407,
                        "mutability": "mutable",
                        "name": "beneficiaryIndex",
                        "nameLocation": "3475:16:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "3467:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3467:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1409,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3494:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3467:28:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3570:18:8",
                      "subExpression": {
                        "id": 1414,
                        "name": "beneficiaryIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1407,
                        "src": "3570:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1416,
                    "nodeType": "ExpressionStatement",
                    "src": "3570:18:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "3449:796:8"
                }
              ]
            },
            "functionSelector": "5be7fde8",
            "id": 1471,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1400,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1399,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "3367:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3367:9:8"
              },
              {
                "id": 1402,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1401,
                  "name": "onlyIfVestingScheduleStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1207,
                  "src": "3385:28:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3385:28:8"
              },
              {
                "id": 1404,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1403,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1831,
                  "src": "3422:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3422:12:8"
              }
            ],
            "name": "releaseAll",
            "nameLocation": "3331:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3341:2:8"
            },
            "returnParameters": {
              "id": 1405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3439:0:8"
            },
            "scope": 1688,
            "src": "3322:929:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1527,
              "nodeType": "Block",
              "src": "4328:554:8",
              "statements": [
                {
                  "assignments": [
                    1479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1479,
                      "mutability": "mutable",
                      "name": "senderAddress",
                      "nameLocation": "4346:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "4338:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1478,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4338:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1482,
                  "initialValue": {
                    "expression": {
                      "id": 1480,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4362:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4362:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4338:34:8"
                },
                {
                  "assignments": [
                    1484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4390:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "4382:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4382:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1488,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1486,
                        "name": "senderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "4427:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1485,
                      "name": "calculateWithdrawableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1629,
                      "src": "4399:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4399:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4382:59:8"
                },
                {
                  "assignments": [
                    1491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1491,
                      "mutability": "mutable",
                      "name": "beneficiary",
                      "nameLocation": "4471:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "4451:31:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                        "typeString": "struct AniwarVestingV2.Beneficiary"
                      },
                      "typeName": {
                        "id": 1490,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1489,
                          "name": "Beneficiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1172,
                          "src": "4451:11:8"
                        },
                        "referencedDeclaration": 1172,
                        "src": "4451:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                          "typeString": "struct AniwarVestingV2.Beneficiary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1495,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1492,
                      "name": "beneficiaries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "4485:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$1172_storage_$",
                        "typeString": "mapping(address => struct AniwarVestingV2.Beneficiary storage ref)"
                      }
                    },
                    "id": 1494,
                    "indexExpression": {
                      "id": 1493,
                      "name": "senderAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "4499:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4485:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Beneficiary_$1172_storage",
                      "typeString": "struct AniwarVestingV2.Beneficiary storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4451:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1497,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1491,
                          "src": "4544:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                            "typeString": "struct AniwarVestingV2.Beneficiary storage pointer"
                          }
                        },
                        "id": 1498,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isInitialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1171,
                        "src": "4544:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206f6e6c792062656e65666963696172792063616e2072656c656173652076657374656420746f6b656e73",
                        "id": 1499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4583:58:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e90bbe1736f58074cf2e501464276c742a6cd88caddd81d4ec7eb44c12ae2b7d",
                          "typeString": "literal_string \"TokenVesting: only beneficiary can release vested tokens\""
                        },
                        "value": "TokenVesting: only beneficiary can release vested tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e90bbe1736f58074cf2e501464276c742a6cd88caddd81d4ec7eb44c12ae2b7d",
                          "typeString": "literal_string \"TokenVesting: only beneficiary can release vested tokens\""
                        }
                      ],
                      "id": 1496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4523:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4523:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1501,
                  "nodeType": "ExpressionStatement",
                  "src": "4523:128:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1503,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1484,
                          "src": "4669:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4678:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4669:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742063616e2062652052656c6561736564206d757374206265203e2030",
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4681:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_801ff34ac810f1a7127f37a9298d7f3c772461b3bbcefcaa5809fc8de2cdd180",
                          "typeString": "literal_string \"Amount can be Released must be > 0\""
                        },
                        "value": "Amount can be Released must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_801ff34ac810f1a7127f37a9298d7f3c772461b3bbcefcaa5809fc8de2cdd180",
                          "typeString": "literal_string \"Amount can be Released must be > 0\""
                        }
                      ],
                      "id": 1502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4661:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4661:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "4661:57:8"
                },
                {
                  "assignments": [
                    1510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1510,
                      "mutability": "mutable",
                      "name": "beneficiaryPayable",
                      "nameLocation": "4744:18:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "4728:34:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1509,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4728:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1515,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1513,
                        "name": "senderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "4773:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4765:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1511,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4765:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4765:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4728:59:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1519,
                        "name": "beneficiaryPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "4817:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1520,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "4837:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1516,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "4797:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1941,
                      "src": "4797:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1910_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1910_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4797:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1522,
                  "nodeType": "ExpressionStatement",
                  "src": "4797:47:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1524,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "4868:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1523,
                      "name": "Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "4859:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4859:16:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1526,
                  "nodeType": "EmitStatement",
                  "src": "4854:21:8"
                }
              ]
            },
            "functionSelector": "e014decf",
            "id": 1528,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1474,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1473,
                  "name": "onlyIfVestingScheduleStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1207,
                  "src": "4286:28:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4286:28:8"
              },
              {
                "id": 1476,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1475,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1831,
                  "src": "4315:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4315:12:8"
              }
            ],
            "name": "releaseOne",
            "nameLocation": "4266:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4276:2:8"
            },
            "returnParameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4328:0:8"
            },
            "scope": 1688,
            "src": "4257:625:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1628,
              "nodeType": "Block",
              "src": "5042:881:8",
              "statements": [
                {
                  "assignments": [
                    1539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1539,
                      "mutability": "mutable",
                      "name": "beneficiary",
                      "nameLocation": "5071:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1628,
                      "src": "5052:30:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Beneficiary_$1172_memory_ptr",
                        "typeString": "struct AniwarVestingV2.Beneficiary"
                      },
                      "typeName": {
                        "id": 1538,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1537,
                          "name": "Beneficiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1172,
                          "src": "5052:11:8"
                        },
                        "referencedDeclaration": 1172,
                        "src": "5052:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$1172_storage_ptr",
                          "typeString": "struct AniwarVestingV2.Beneficiary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1543,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1540,
                      "name": "beneficiaries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "5085:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$1172_storage_$",
                        "typeString": "mapping(address => struct AniwarVestingV2.Beneficiary storage ref)"
                      }
                    },
                    "id": 1542,
                    "indexExpression": {
                      "id": 1541,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1530,
                      "src": "5099:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5085:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Beneficiary_$1172_storage",
                      "typeString": "struct AniwarVestingV2.Beneficiary storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5052:60:8"
                },
                {
                  "assignments": [
                    1545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1545,
                      "mutability": "mutable",
                      "name": "currentTime",
                      "nameLocation": "5130:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1628,
                      "src": "5122:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1544,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5122:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1548,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1546,
                      "name": "getCurrentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1676,
                      "src": "5144:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5144:16:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5122:38:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "5174:26:8",
                      "subExpression": {
                        "expression": {
                          "id": 1549,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "5175:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Beneficiary_$1172_memory_ptr",
                            "typeString": "struct AniwarVestingV2.Beneficiary memory"
                          }
                        },
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isInitialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1171,
                        "src": "5175:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1552,
                        "name": "currentTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1545,
                        "src": "5204:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1553,
                        "name": "_startedTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1176,
                        "src": "5218:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5204:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5174:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1559,
                  "nodeType": "IfStatement",
                  "src": "5170:95:8",
                  "trueBody": {
                    "id": 1558,
                    "nodeType": "Block",
                    "src": "5232:33:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5253:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1536,
                        "id": 1557,
                        "nodeType": "Return",
                        "src": "5246:8:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1561,
                      "mutability": "mutable",
                      "name": "currentSplit",
                      "nameLocation": "5282:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1628,
                      "src": "5274:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1560,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5274:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1568,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1562,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1545,
                            "src": "5298:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1563,
                            "name": "_startedTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1176,
                            "src": "5312:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5298:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1565,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5297:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1566,
                      "name": "_splitDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1178,
                      "src": "5328:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5297:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5274:68:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1569,
                      "name": "currentSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "5356:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1570,
                      "name": "_splitCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "5372:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5356:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1577,
                  "nodeType": "IfStatement",
                  "src": "5352:84:8",
                  "trueBody": {
                    "id": 1576,
                    "nodeType": "Block",
                    "src": "5385:51:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1572,
                            "name": "currentSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1561,
                            "src": "5399:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1573,
                            "name": "_splitCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "5414:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5399:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1575,
                        "nodeType": "ExpressionStatement",
                        "src": "5399:26:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1578,
                      "name": "currentSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "5449:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5465:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5449:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1586,
                  "nodeType": "IfStatement",
                  "src": "5445:64:8",
                  "trueBody": {
                    "id": 1585,
                    "nodeType": "Block",
                    "src": "5468:41:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1581,
                            "name": "currentSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1561,
                            "src": "5482:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5497:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5482:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1584,
                        "nodeType": "ExpressionStatement",
                        "src": "5482:16:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1587,
                      "name": "currentSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "5522:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1588,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "5537:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$1172_memory_ptr",
                          "typeString": "struct AniwarVestingV2.Beneficiary memory"
                        }
                      },
                      "id": 1589,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cliff",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1167,
                      "src": "5537:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5522:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1594,
                  "nodeType": "IfStatement",
                  "src": "5518:71:8",
                  "trueBody": {
                    "id": 1593,
                    "nodeType": "Block",
                    "src": "5556:33:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5577:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1536,
                        "id": 1592,
                        "nodeType": "Return",
                        "src": "5570:8:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1596,
                      "mutability": "mutable",
                      "name": "singleSplitAmount",
                      "nameLocation": "5606:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1628,
                      "src": "5598:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1595,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5598:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1611,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1597,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1539,
                              "src": "5627:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$1172_memory_ptr",
                                "typeString": "struct AniwarVestingV2.Beneficiary memory"
                              }
                            },
                            "id": 1598,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1163,
                            "src": "5627:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1599,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1539,
                              "src": "5665:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$1172_memory_ptr",
                                "typeString": "struct AniwarVestingV2.Beneficiary memory"
                              }
                            },
                            "id": 1600,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "TGEAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1165,
                            "src": "5665:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5627:59:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1602,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5626:61:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1603,
                              "name": "_splitCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "5691:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5705:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5691:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1606,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1539,
                              "src": "5709:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$1172_memory_ptr",
                                "typeString": "struct AniwarVestingV2.Beneficiary memory"
                              }
                            },
                            "id": 1607,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cliff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1167,
                            "src": "5709:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5691:35:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1609,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5690:37:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5626:101:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5598:129:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1612,
                          "name": "singleSplitAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1596,
                          "src": "5756:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1613,
                                  "name": "currentSplit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1561,
                                  "src": "5789:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5804:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5789:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 1616,
                                  "name": "beneficiary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1539,
                                  "src": "5808:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Beneficiary_$1172_memory_ptr",
                                    "typeString": "struct AniwarVestingV2.Beneficiary memory"
                                  }
                                },
                                "id": 1617,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cliff",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1167,
                                "src": "5808:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5789:36:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1619,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5788:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5756:70:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 1621,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "5841:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Beneficiary_$1172_memory_ptr",
                            "typeString": "struct AniwarVestingV2.Beneficiary memory"
                          }
                        },
                        "id": 1622,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "TGEAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1165,
                        "src": "5841:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5756:106:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 1624,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "5877:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$1172_memory_ptr",
                          "typeString": "struct AniwarVestingV2.Beneficiary memory"
                        }
                      },
                      "id": 1625,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalAmountHasBeenWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1169,
                      "src": "5877:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5756:160:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1536,
                  "id": 1627,
                  "nodeType": "Return",
                  "src": "5737:179:8"
                }
              ]
            },
            "functionSelector": "2db8c331",
            "id": 1629,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1532,
                  "name": "onlyIfVestingScheduleStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1207,
                  "src": "4983:28:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4983:28:8"
              }
            ],
            "name": "calculateWithdrawableAmount",
            "nameLocation": "4897:27:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1530,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nameLocation": "4933:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1629,
                  "src": "4925:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4925:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4924:22:8"
            },
            "returnParameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1629,
                  "src": "5029:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:9:8"
            },
            "scope": 1688,
            "src": "4888:1035:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1652,
              "nodeType": "Block",
              "src": "6138:237:8",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1644,
                        "name": "_isStarted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "6169:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1645,
                        "name": "_startedTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1176,
                        "src": "6193:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1646,
                        "name": "_splitDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "6219:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1647,
                        "name": "_splitCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "6247:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1648,
                        "name": "_vestingSchedulesInitializedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "6272:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1649,
                        "name": "_vestingSchedulesInitializedAmountLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1184,
                        "src": "6320:38:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1650,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6155:213:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1643,
                  "id": 1651,
                  "nodeType": "Return",
                  "src": "6148:220:8"
                }
              ]
            },
            "functionSelector": "7cc1f867",
            "id": 1653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractInfo",
            "nameLocation": "5938:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5953:2:8"
            },
            "returnParameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1632,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "6014:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1631,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6014:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1634,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "6032:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6032:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "6053:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6053:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "6074:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6074:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1640,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "6095:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6095:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "6116:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6116:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6000:133:8"
            },
            "scope": 1688,
            "src": "5929:446:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "6433:55:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1662,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6475:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AniwarVestingV2_$1688",
                              "typeString": "contract AniwarVestingV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AniwarVestingV2_$1688",
                              "typeString": "contract AniwarVestingV2"
                            }
                          ],
                          "id": 1661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6467:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1660,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6467:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6467:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1658,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "6450:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1849,
                      "src": "6450:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6450:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1657,
                  "id": 1665,
                  "nodeType": "Return",
                  "src": "6443:38:8"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 1667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "6390:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6400:2:8"
            },
            "returnParameters": {
              "id": 1657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1656,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "6424:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6424:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6423:9:8"
            },
            "scope": 1688,
            "src": "6381:107:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1675,
              "nodeType": "Block",
              "src": "6550:39:8",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1672,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "6567:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "6567:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1671,
                  "id": 1674,
                  "nodeType": "Return",
                  "src": "6560:22:8"
                }
              ]
            },
            "functionSelector": "29cb924d",
            "id": 1676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "6503:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6517:2:8"
            },
            "returnParameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1676,
                  "src": "6541:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6541:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6540:9:8"
            },
            "scope": 1688,
            "src": "6494:95:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1686,
              "nodeType": "Block",
              "src": "6645:39:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1683,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "6670:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6662:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1681,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6662:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6662:15:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1680,
                  "id": 1685,
                  "nodeType": "Return",
                  "src": "6655:22:8"
                }
              ]
            },
            "functionSelector": "21df0da7",
            "id": 1687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "6604:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6612:2:8"
            },
            "returnParameters": {
              "id": 1680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1687,
                  "src": "6636:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6636:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6635:9:8"
            },
            "scope": 1688,
            "src": "6595:89:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1689,
        "src": "328:6358:8",
        "usedErrors": []
      }
    ],
    "src": "32:6655:8"
  },
  "bytecode": "",
  "bytecodeSha1": "6760062101ca7017fb79fc47c88f8b1d55381ac7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "AniwarVestingV2",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "64": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {
        "AniwarVestingV2.releaseOne": {
          "65": [
            2259,
            2278,
            true
          ]
        }
      },
      "2": {},
      "3": {
        "SafeERC20._callOptionalReturn": {
          "66": [
            3668,
            3689,
            false
          ],
          "67": [
            3752,
            3782,
            true
          ]
        }
      },
      "4": {
        "Address.functionCallWithValue": {
          "61": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "62": [
            7335,
            7342,
            false
          ],
          "63": [
            7476,
            7497,
            false
          ]
        }
      },
      "5": {},
      "8": {
        "AniwarVestingV2.addBeneficiary": {
          "53": [
            2159,
            2208,
            true
          ],
          "54": [
            2319,
            2330,
            true
          ],
          "55": [
            2385,
            2405,
            true
          ],
          "56": [
            2461,
            2476,
            true
          ],
          "57": [
            2591,
            2616,
            false
          ]
        },
        "AniwarVestingV2.calculateWithdrawableAmount": {
          "46": [
            5204,
            5230,
            false
          ],
          "47": [
            5356,
            5383,
            false
          ],
          "48": [
            5449,
            5466,
            false
          ],
          "49": [
            5522,
            5554,
            false
          ]
        },
        "AniwarVestingV2.releaseAll": {
          "50": [
            3888,
            3913,
            false
          ],
          "51": [
            3917,
            3927,
            false
          ]
        },
        "AniwarVestingV2.releaseOne": {
          "58": [
            1162,
            1172,
            true
          ],
          "59": [
            4544,
            4569,
            true
          ],
          "60": [
            4669,
            4679,
            true
          ]
        },
        "AniwarVestingV2.startSchedule": {
          "52": [
            3088,
            3173,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "37": [
            2131,
            2148
          ],
          "38": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "3": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "15": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "34": [
            1926,
            1999
          ],
          "35": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "SafeERC20._callOptionalReturn": {
          "39": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "36": [
            746,
            832
          ]
        }
      },
      "4": {
        "Address.functionCall": {
          "40": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "41": [
            4737,
            4818
          ],
          "42": [
            4828,
            4888
          ],
          "43": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "44": [
            7358,
            7375
          ],
          "45": [
            7802,
            7822
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "10": [
            659,
            676
          ]
        }
      },
      "8": {
        "AniwarVestingV2.addBeneficiary": {
          "20": [
            2138,
            2301
          ],
          "21": [
            2311,
            2367
          ],
          "22": [
            2377,
            2443
          ],
          "23": [
            2453,
            2505
          ],
          "24": [
            2632,
            2664
          ],
          "25": [
            2678,
            2718
          ],
          "26": [
            2738,
            2764
          ],
          "27": [
            2774,
            2808
          ],
          "28": [
            2818,
            2870
          ],
          "29": [
            2880,
            2929
          ]
        },
        "AniwarVestingV2.calculateWithdrawableAmount": {
          "5": [
            5246,
            5254
          ],
          "6": [
            5399,
            5425
          ],
          "7": [
            5482,
            5498
          ],
          "8": [
            5570,
            5578
          ],
          "9": [
            5737,
            5916
          ]
        },
        "AniwarVestingV2.getBalance": {
          "4": [
            6443,
            6481
          ]
        },
        "AniwarVestingV2.getContractInfo": {
          "2": [
            6148,
            6368
          ]
        },
        "AniwarVestingV2.getCurrentTime": {
          "1": [
            6560,
            6582
          ]
        },
        "AniwarVestingV2.getToken": {
          "0": [
            6655,
            6677
          ]
        },
        "AniwarVestingV2.releaseAll": {
          "11": [
            3947,
            3996
          ],
          "12": [
            4134,
            4181
          ],
          "13": [
            4199,
            4220
          ],
          "14": [
            3570,
            3588
          ]
        },
        "AniwarVestingV2.releaseOne": {
          "30": [
            4523,
            4651
          ],
          "31": [
            4661,
            4718
          ],
          "32": [
            4797,
            4844
          ],
          "33": [
            4854,
            4875
          ]
        },
        "AniwarVestingV2.startSchedule": {
          "16": [
            3067,
            3230
          ],
          "17": [
            3240,
            3257
          ],
          "18": [
            3267,
            3287
          ],
          "19": [
            3297,
            3309
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "328:6358:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:25:9;;;692:2;677:18;;670:34;;;;720:18;;;713:34;;;;778:2;763:18;;756:34;834:14;827:22;821:3;806:19;;799:51;623:3;608:19;989:52:8;;;;;;;;6381:107;;;:::i;:::-;;;1007:25:9;;;995:2;980:18;6381:107:8;861:177:9;6595:89:8;6670:6;6595:89;;;-1:-1:-1;;;;;1207:32:9;;;1189:51;;1177:2;1162:18;6595:89:8;1043:203:9;6494:95:8;6567:15;6494:95;;4888:1035;;;;;;:::i;:::-;;:::i;3322:929::-;;;:::i;:::-;;1605:92:0;;;:::i;2942:374:8:-;;;;;;:::i;:::-;;:::i;5929:446::-;6169:10;;6193:12;;6272:34;;6320:38;;5929:446;;;6169:10;;;;1742:14:9;1735:22;1717:41;;1789:2;1774:18;;1767:34;;;;6219:14:8;1817:18:9;;;1810:34;;;;6247:11:8;1875:2:9;1860:18;;1853:34;1918:3;1903:19;;1896:35;1962:3;1947:19;;1940:35;1704:3;1689:19;5929:446:8;1436:545:9;973:85:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;1943:993:8;;;;;;:::i;:::-;;:::i;4257:625::-;;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;6381:107:8:-;6450:31;;-1:-1:-1;;;6450:31:8;;6475:4;6450:31;;;1189:51:9;6424:7:8;;6450:6;-1:-1:-1;;;;;6450:16:8;;;;1162:18:9;;6450:31:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6443:38;;6381:107;:::o;4888:1035::-;1162:10;;5029:7;;1162:10;;1154:50;;;;-1:-1:-1;;;1154:50:8;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;5085:27:8;::::1;5052:30;5085:27:::0;;;:13:::1;:27;::::0;;;;;;;;5052:60;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;::::1;;;::::0;::::1;::::0;;;;6567:15;;5052:60;5174:56:::1;;;5218:12;;5204:11;:26;5174:56;5170:95;;;-1:-1:-1::0;5253:1:8::1;::::0;4888:1035;-1:-1:-1;;;4888:1035:8:o;5170:95::-:1;5274:20;5328:14;5312:12;;5298:11;:26;;;;:::i;:::-;5297:45;;;;:::i;:::-;5274:68;;5372:11;5356:12;:27;5352:84;;-1:-1:-1::0;5414:11:8::1;5352:84;5449:17:::0;5445:64:::1;;-1:-1:-1::0;5497:1:8::1;5445:64;5537:11;:17;;;5522:12;:32;5518:71;;;-1:-1:-1::0;5577:1:8::1;::::0;4888:1035;-1:-1:-1;;;;4888:1035:8:o;5518:71::-:1;5709:17;::::0;::::1;::::0;5598:25:::1;::::0;5691:15:::1;5705:1;5691:11;:15;:::i;:::-;:35;;;;:::i;:::-;5665:21;::::0;::::1;::::0;5627:23;;:59:::1;::::0;5665:21;5627:59:::1;:::i;:::-;5626:101;;;;:::i;:::-;5598:129;;5877:11;:39;;;5841:11;:21;;;5808:11;:17;;;5804:1;5789:12;:16;;;;:::i;:::-;:36;;;;:::i;:::-;5756:70;::::0;:17;:70:::1;:::i;:::-;:106;;;;:::i;:::-;:160;;;;:::i;:::-;5737:179;;;;;;1214:1;4888:1035:::0;;;:::o;3322:929::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1162:10:8::1;::::0;::::1;;1154:50;;;;-1:-1:-1::0;;;1154:50:8::1;;;;;;;:::i;:::-;1680:1:1::2;2259:7;;:19;;2251:63;;;::::0;-1:-1:-1;;;2251:63:1;;4280:2:9;2251:63:1::2;::::0;::::2;4262:21:9::0;4319:2;4299:18;;;4292:30;4358:33;4338:18;;;4331:61;4409:18;;2251:63:1::2;4078:355:9::0;2251:63:1::2;1680:1;2389:7;:18:::0;3467:24:8::3;3449:796;3528:21;:28:::0;3509:47;::::3;3449:796;;;3613:26;3642:21;3681:16;3642:69;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;;;::::3;::::0;-1:-1:-1;;;;;3642:69:8::3;3759:33:::0;;;:13:::3;:33:::0;;;;;;3642:69;;-1:-1:-1;3759:33:8;3823:47:::3;3642:69:::0;3823:27:::3;:47::i;:::-;3888:25;::::0;::::3;::::0;3806:64;;-1:-1:-1;3888:25:8::3;;:39:::0;::::3;;;;3926:1;3917:6;:10;3888:39;3884:351;;;3990:6;3947:11;:39;;;:49;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4080:18:8;;-1:-1:-1;4134:47:8::3;-1:-1:-1::0;;;;;4134:6:8::3;:19;4080:18:::0;4174:6;4134:19:::3;:47::i;:::-;4204:16;::::0;1007:25:9;;;4204:16:8::3;::::0;995:2:9;980:18;4204:16:8::3;;;;;;;3929:306;3884:351;3599:646;;;3570:18;;;;;:::i;:::-;;;;3449:796;;;-1:-1:-1::0;1637:1:1::2;2562:22:::0;;3322:929:8:o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;2942:374:8:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1289:10:8::1;::::0;::::1;;1288:11;1280:43;;;::::0;-1:-1:-1;;;1280:43:8;;4912:2:9;1280:43:8::1;::::0;::::1;4894:21:9::0;4951:2;4931:18;;;4924:30;-1:-1:-1;;;4970:18:9;;;4963:49;5029:18;;1280:43:8::1;4710:343:9::0;1280:43:8::1;3139:34:::2;::::0;;3088:31:::2;::::0;-1:-1:-1;;;3088:31:8;;3113:4:::2;3088:31:::0;;::::2;1189:51:9::0;;;;3139:34:8;-1:-1:-1;;;;;3088:6:8::2;:16;::::0;::::2;::::0;1162:18:9;;3088:31:8::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;3067:163;;;::::0;-1:-1:-1;;;3067:163:8;;5260:2:9;3067:163:8::2;::::0;::::2;5242:21:9::0;5299:2;5279:18;;;5272:30;5338:33;5318:18;;;5311:61;5389:18;;3067:163:8::2;5058:355:9::0;3067:163:8::2;3240:10;:17:::0;;-1:-1:-1;;3240:17:8::2;3253:4;3240:17;::::0;;3267:12:::2;:20:::0;;;3302:7:::2;::::0;::::2;::::0;3240:10:::2;::::0;3302:7:::2;2942:374:::0;:::o;1943:993::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1289:10:8::1;::::0;::::1;;1288:11;1280:43;;;::::0;-1:-1:-1;;;1280:43:8;;4912:2:9;1280:43:8::1;::::0;::::1;4894:21:9::0;4951:2;4931:18;;;4924:30;-1:-1:-1;;;4970:18:9;;;4963:49;5029:18;;1280:43:8::1;4710:343:9::0;1280:43:8::1;2170:38:::2;;2159:7;:49;;2138:163;;;::::0;-1:-1:-1;;;2138:163:8;;5620:2:9;2138:163:8::2;::::0;::::2;5602:21:9::0;5659:2;5639:18;;;5632:30;5698:34;5678:18;;;5671:62;5769:34;5749:18;;;5742:62;-1:-1:-1;;;5820:19:9;;;5813:34;5864:19;;2138:163:8::2;5418:471:9::0;2138:163:8::2;2329:1;2319:7;:11;2311:56;;;::::0;-1:-1:-1;;;2311:56:8;;6096:2:9;2311:56:8::2;::::0;::::2;6078:21:9::0;;;6115:18;;;6108:30;6174:34;6154:18;;;6147:62;6226:18;;2311:56:8::2;5894:356:9::0;2311:56:8::2;2394:11;2385:6;:20;2377:66;;;::::0;-1:-1:-1;;;2377:66:8;;6457:2:9;2377:66:8::2;::::0;::::2;6439:21:9::0;6496:2;6476:18;;;6469:30;6535:34;6515:18;;;6508:62;-1:-1:-1;;;6586:18:9;;;6579:31;6627:19;;2377:66:8::2;6255:397:9::0;2377:66:8::2;2473:3;2461:9;:15;2453:52;;;::::0;-1:-1:-1;;;2453:52:8;;6859:2:9;2453:52:8::2;::::0;::::2;6841:21:9::0;6898:2;6878:18;;;6871:30;6937:26;6917:18;;;6910:54;6981:18;;2453:52:8::2;6657:348:9::0;2453:52:8::2;-1:-1:-1::0;;;;;2549:27:8;::::2;2515:31;2549:27:::0;;;:13:::2;:27;::::0;;;;2591:25:::2;::::0;::::2;::::0;::::2;;2586:143;;2632:25;::::0;::::2;:32:::0;;2660:4:::2;-1:-1:-1::0;;2632:32:8;;::::2;::::0;::::2;::::0;;;2678:21:::2;:40:::0;;;;::::2;::::0;;-1:-1:-1;2678:40:8;;::::2;::::0;;-1:-1:-1;;;;;;2678:40:8::2;-1:-1:-1::0;;;;;2678:40:8;::::2;;::::0;;2586:143:::2;2738:17;::::0;::::2;:26:::0;;;2774:34;;2801:7;;2738:11;;2774:23:::2;::::0;:34:::2;::::0;2801:7;;2774:34:::2;:::i;:::-;::::0;;;-1:-1:-1;2867:3:8::2;::::0;-1:-1:-1;2844:19:8::2;2854:9:::0;2844:7;:19:::2;:::i;:::-;2843:27;;;;:::i;:::-;2818:11;:21;;;:52;;;;;;;:::i;:::-;;;;;;;;2922:7;2880:38;;:49;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;1943:993:8:o;4257:625::-;1162:10;;;;1154:50;;;;-1:-1:-1;;;1154:50:8;;;;;;;:::i;:::-;1680:1:1::1;2259:7;;:19;;2251:63;;;::::0;-1:-1:-1;;;2251:63:1;;4280:2:9;2251:63:1::1;::::0;::::1;4262:21:9::0;4319:2;4299:18;;;4292:30;4358:33;4338:18;;;4331:61;4409:18;;2251:63:1::1;4078:355:9::0;2251:63:1::1;1680:1;2389:7;:18:::0;4362:10:8::2;4338:21;4399:42;4362:10:::0;4399:27:::2;:42::i;:::-;-1:-1:-1::0;;;;;4485:28:8;::::2;4451:31;4485:28:::0;;;:13:::2;:28;::::0;;;;4544:25:::2;::::0;::::2;::::0;4382:59;;-1:-1:-1;4485:28:8;4544:25:::2;;4523:128;;;::::0;-1:-1:-1;;;4523:128:8;;7212:2:9;4523:128:8::2;::::0;::::2;7194:21:9::0;7251:2;7231:18;;;7224:30;7290:34;7270:18;;;7263:62;7361:26;7341:18;;;7334:54;7405:19;;4523:128:8::2;7010:420:9::0;4523:128:8::2;4678:1;4669:6;:10;4661:57;;;::::0;-1:-1:-1;;;4661:57:8;;7637:2:9;4661:57:8::2;::::0;::::2;7619:21:9::0;7676:2;7656:18;;;7649:30;7715:34;7695:18;;;7688:62;-1:-1:-1;;;7766:18:9;;;7759:32;7808:19;;4661:57:8::2;7435:398:9::0;4661:57:8::2;4773:13:::0;4797:47:::2;-1:-1:-1::0;;;;;4797:6:8::2;:19;4773:13:::0;4837:6;4797:19:::2;:47::i;:::-;4859:16;::::0;1007:25:9;;;4859:16:8::2;::::0;995:2:9;980:18;4859:16:8::2;;;;;;;-1:-1:-1::0;;1637:1:1::1;2562:22:::0;;-1:-1:-1;;4257:625:8:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;8040:2:9;1926:73:0::1;::::0;::::1;8022:21:9::0;8079:2;8059:18;;;8052:30;8118:34;8098:18;;;8091:62;-1:-1:-1;;;8169:18:9;;;8162:36;8215:19;;1926:73:0::1;7838:402:9::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;634:205:3:-;773:58;;;-1:-1:-1;;;;;8437:32:9;;773:58:3;;;8419:51:9;8486:18;;;;8479:34;;;773:58:3;;;;;;;;;;8392:18:9;;;;773:58:3;;;;;;;;-1:-1:-1;;;;;773:58:3;-1:-1:-1;;;773:58:3;;;746:86;;766:5;;746:19;:86::i;:::-;634:205;;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;3140:706:3:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:3;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:3;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:3;;9008:2:9;3744:85:3;;;8990:21:9;9047:2;9027:18;;;9020:30;9086:34;9066:18;;;9059:62;-1:-1:-1;;;9137:18:9;;;9130:40;9187:19;;3744:85:3;8806:406:9;3461:223:4;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:4;;9419:2:9;4737:81:4;;;9401:21:9;9458:2;9438:18;;;9431:30;9497:34;9477:18;;;9470:62;-1:-1:-1;;;9548:18:9;;;9541:36;9594:19;;4737:81:4;9217:402:9;4737:81:4;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:4;;9826:2:9;4828:60:4;;;9808:21:9;9865:2;9845:18;;;9838:30;9904:31;9884:18;;;9877:59;9953:18;;4828:60:4;9624:353:9;4828:60:4;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:4;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:4:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:4;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:4;;;;;;;;:::i;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;1251:180::-;1310:6;1363:2;1351:9;1342:7;1338:23;1334:32;1331:52;;;1379:1;1376;1369:12;1331:52;-1:-1:-1;1402:23:9;;1251:180;-1:-1:-1;1251:180:9:o;1986:391::-;2072:6;2080;2088;2096;2149:3;2137:9;2128:7;2124:23;2120:33;2117:53;;;2166:1;2163;2156:12;2117:53;2189:29;2208:9;2189:29;:::i;:::-;2179:39;2265:2;2250:18;;2237:32;;-1:-1:-1;2316:2:9;2301:18;;2288:32;;2367:2;2352:18;2339:32;;-1:-1:-1;1986:391:9;-1:-1:-1;;;1986:391:9:o;2382:184::-;2452:6;2505:2;2493:9;2484:7;2480:23;2476:32;2473:52;;;2521:1;2518;2511:12;2473:52;-1:-1:-1;2544:16:9;;2382:184;-1:-1:-1;2382:184:9:o;2571:351::-;2773:2;2755:21;;;2812:2;2792:18;;;2785:30;2851:29;2846:2;2831:18;;2824:57;2913:2;2898:18;;2571:351::o;2927:127::-;2988:10;2983:3;2979:20;2976:1;2969:31;3019:4;3016:1;3009:15;3043:4;3040:1;3033:15;3059:125;3099:4;3127:1;3124;3121:8;3118:34;;;3132:18;;:::i;:::-;-1:-1:-1;3169:9:9;;3059:125::o;3189:217::-;3229:1;3255;3245:132;;3299:10;3294:3;3290:20;3287:1;3280:31;3334:4;3331:1;3324:15;3362:4;3359:1;3352:15;3245:132;-1:-1:-1;3391:9:9;;3189:217::o;3411:168::-;3451:7;3517:1;3513;3509:6;3505:14;3502:1;3499:21;3494:1;3487:9;3480:17;3476:45;3473:71;;;3524:18;;:::i;:::-;-1:-1:-1;3564:9:9;;3411:168::o;3584:128::-;3624:3;3655:1;3651:6;3648:1;3645:13;3642:39;;;3661:18;;:::i;:::-;-1:-1:-1;3697:9:9;;3584:128::o;3717:356::-;3919:2;3901:21;;;3938:18;;;3931:30;3997:34;3992:2;3977:18;;3970:62;4064:2;4049:18;;3717:356::o;4438:127::-;4499:10;4494:3;4490:20;4487:1;4480:31;4530:4;4527:1;4520:15;4554:4;4551:1;4544:15;4570:135;4609:3;-1:-1:-1;;4630:17:9;;4627:43;;;4650:18;;:::i;:::-;-1:-1:-1;4697:1:9;4686:13;;4570:135::o;8524:277::-;8591:6;8644:2;8632:9;8623:7;8619:23;8615:32;8612:52;;;8660:1;8657;8650:12;8612:52;8692:9;8686:16;8745:5;8738:13;8731:21;8724:5;8721:32;8711:60;;8767:1;8764;8757:12;9982:258;10054:1;10064:113;10078:6;10075:1;10072:13;10064:113;;;10154:11;;;10148:18;10135:11;;;10128:39;10100:2;10093:10;10064:113;;;10195:6;10192:1;10189:13;10186:48;;;10230:1;10221:6;10216:3;10212:16;10205:27;10186:48;;9982:258;;;:::o;10245:274::-;10374:3;10412:6;10406:13;10428:53;10474:6;10469:3;10462:4;10454:6;10450:17;10428:53;:::i;:::-;10497:16;;;;;10245:274;-1:-1:-1;;10245:274:9:o;10524:383::-;10673:2;10662:9;10655:21;10636:4;10705:6;10699:13;10748:6;10743:2;10732:9;10728:18;10721:34;10764:66;10823:6;10818:2;10807:9;10803:18;10798:2;10790:6;10786:15;10764:66;:::i;:::-;10891:2;10870:15;-1:-1:-1;;10866:29:9;10851:45;;;;10898:2;10847:54;;10524:383;-1:-1:-1;;10524:383:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "TokenVesting",
    "version": 1
  },
  "offset": [
    328,
    6686
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xB095E129 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xE014DECF EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x746C7C3C EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x7CC1F867 EQ PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1567739 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x2DB8C331 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x5BE7FDE8 EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST TIMESTAMP PUSH2 0x14B JUMP JUMPDEST PUSH2 0x14B PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x111B JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x518 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP6 AND ISZERO ISZERO DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x0 SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x13A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17B JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x111B JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x34F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP SWAP1 DUP1 PUSH2 0x3B8 JUMPI POP PUSH1 0x3 SLOAD DUP2 LT JUMPDEST ISZERO PUSH2 0x3C7 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x3 SLOAD DUP4 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT PUSH2 0x44E JUMPI POP PUSH32 0x0 JUMPDEST DUP1 PUSH2 0x457 JUMPI POP PUSH1 0x1 JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD DUP2 LT ISZERO PUSH2 0x46E JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0x4A1 PUSH1 0x1 PUSH32 0x0 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD DUP6 MLOAD PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 DUP6 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x4F8 SWAP1 DUP5 PUSH2 0x1227 JUMP JUMPDEST PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5DE JUMPI PUSH2 0x5DE PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0x60E DUP4 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x625 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x6AE JUMPI DUP1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x63E SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP4 SWAP1 POP PUSH2 0x679 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP5 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xFB81F9B30D73D830C3544B34D827C08142579EE75710B490BAB0B3995468C565 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x6BC SWAP1 PUSH2 0x12A9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5BF JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH2 0x6FF PUSH1 0x0 PUSH2 0xE68 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x56657374696E67206973205374617274656421 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST LT ISZERO PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420657863656564732062616C616E636520616E6420496E697400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xFD3415C24B2B4519F08B7935C13F86EA010C77B3FF9BF448A474AE3B2414FCE0 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x902 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x56657374696E67206973205374617274656421 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 GT ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A2063616E6E6F74206164642062656E65666963 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69617279202062656361757365206E6F742073756666696369656E7420746F6B PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x656E73 PUSH1 0xE8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A20616D6F756E74206D757374206265203E2030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH32 0x0 DUP4 LT PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C696666206D757374206C657373207468616E2073756D206F662073706C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x64 DUP2 LT PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52617465206D757374206C657373207468616E20313030250000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB1E JUMPI PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP2 ADD DUP5 SWAP1 SSTORE DUP1 SLOAD DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xB39 SWAP1 DUP5 SWAP1 PUSH2 0x1246 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x64 SWAP1 POP PUSH2 0xB4B DUP4 DUP6 PUSH2 0x1227 JUMP JUMPDEST PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0xBAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xC02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLER PUSH1 0x0 PUSH2 0xC13 DUP3 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A206F6E6C792062656E65666963696172792063 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E2072656C656173652076657374656420746F6B656E730000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742063616E2062652052656C6561736564206D757374206265203E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x346 JUMP JUMPDEST DUP3 PUSH2 0xD39 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP6 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xFB81F9B30D73D830C3544B34D827C08142579EE75710B490BAB0B3995468C565 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x346 JUMP JUMPDEST PUSH2 0xE0E DUP2 PUSH2 0xE68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xE63 SWAP1 DUP5 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF8A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xE63 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF99 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xFA3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1004 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x346 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x106E SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10C0 DUP3 DUP3 DUP7 PUSH2 0x10CB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x10DA JUMPI POP DUP2 PUSH2 0xF9C JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x10EA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF9C DUP3 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116E DUP6 PUSH2 0x1104 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x56657374696E67206973206E6F74205374617274656420596574210000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1200 JUMPI PUSH2 0x1200 PUSH2 0x11D8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1222 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1241 JUMPI PUSH2 0x1241 PUSH2 0x11D8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1259 JUMPI PUSH2 0x1259 PUSH2 0x11D8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12BD JUMPI PUSH2 0x12BD PUSH2 0x11D8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1301 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12E9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1310 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1328 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x12E6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1351 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA DUP1 0xE8 PUSH17 0x5C5322C73CB7B3317876008709FA4A01D0 EXTCODECOPY 0xFC 0xDA SMOD SWAP5 0xEC PUSH23 0x48C3212F64736F6C634300080A00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        328,
        6686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "GT",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x252"
    },
    "64": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB095E129"
    },
    "71": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x263"
    },
    "75": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xE014DECF"
    },
    "82": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x276"
    },
    "86": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x27E"
    },
    "97": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "98": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "101": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "REVERT",
      "path": "8"
    },
    "102": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "103": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "104": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "109": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B6"
    },
    "113": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "114": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "115": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x746C7C3C"
    },
    "120": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "121": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BE"
    },
    "124": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7CC1F867"
    },
    "131": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D1"
    },
    "135": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "139": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "REVERT",
      "path": "8"
    },
    "140": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "141": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "142": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1567739"
    },
    "147": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "152": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "153": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x12065FE0"
    },
    "158": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x143"
    },
    "162": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "163": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "164": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x21DF0DA7"
    },
    "169": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "170": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x159"
    },
    "173": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "174": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "175": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x29CB924D"
    },
    "180": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "181": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193"
    },
    "184": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "185": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "186": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2DB8C331"
    },
    "191": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "192": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x199"
    },
    "195": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "196": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "197": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5BE7FDE8"
    },
    "202": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "EQ",
      "path": "8"
    },
    "203": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1AC"
    },
    "206": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "207": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "208": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        328,
        6686
      ],
      "op": "REVERT",
      "path": "8"
    },
    "212": {
      "offset": [
        989,
        1041
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "213": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x114"
    },
    "216": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE2"
    },
    "219": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "220": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "222": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x111B"
    },
    "225": {
      "fn": null,
      "jump": "i",
      "offset": [
        989,
        1041
      ],
      "op": "JUMP",
      "path": "8"
    },
    "226": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "227": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "229": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "231": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "232": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "234": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "235": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "DUP2",
      "path": "8"
    },
    "236": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "237": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "239": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "240": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "241": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "DUP1",
      "path": "8"
    },
    "242": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "243": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "245": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "DUP3",
      "path": "8"
    },
    "246": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "ADD",
      "path": "8"
    },
    "247": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "248": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "250": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "DUP4",
      "path": "8"
    },
    "251": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "ADD",
      "path": "8"
    },
    "252": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "253": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "255": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "DUP5",
      "path": "8"
    },
    "256": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "ADD",
      "path": "8"
    },
    "257": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "258": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "260": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "261": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "262": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "ADD",
      "path": "8"
    },
    "263": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "264": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "265": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "266": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "267": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "268": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "269": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "270": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "271": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "273": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "AND",
      "path": "8"
    },
    "274": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "DUP6",
      "path": "8"
    },
    "275": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "JUMP",
      "path": "8"
    },
    "276": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "277": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "279": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "DUP1",
      "path": "8"
    },
    "280": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "281": {
      "op": "SWAP6"
    },
    "282": {
      "op": "DUP7"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "DUP7"
    },
    "287": {
      "op": "ADD"
    },
    "288": {
      "op": "SWAP5"
    },
    "289": {
      "op": "SWAP1"
    },
    "290": {
      "op": "SWAP5"
    },
    "291": {
      "op": "MSTORE"
    },
    "292": {
      "op": "SWAP3"
    },
    "293": {
      "op": "DUP5"
    },
    "294": {
      "op": "ADD"
    },
    "295": {
      "op": "SWAP2"
    },
    "296": {
      "op": "SWAP1"
    },
    "297": {
      "op": "SWAP2"
    },
    "298": {
      "op": "MSTORE"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "301": {
      "op": "DUP4"
    },
    "302": {
      "op": "ADD"
    },
    "303": {
      "op": "MSTORE"
    },
    "304": {
      "op": "ISZERO"
    },
    "305": {
      "op": "ISZERO"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "308": {
      "op": "DUP3"
    },
    "309": {
      "op": "ADD"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "313": {
      "op": "ADD"
    },
    "314": {
      "offset": [
        989,
        1041
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "315": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "317": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "318": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "DUP1",
      "path": "8"
    },
    "319": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "320": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SUB",
      "path": "8"
    },
    "321": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "322": {
      "fn": null,
      "offset": [
        989,
        1041
      ],
      "op": "RETURN",
      "path": "8"
    },
    "323": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6381,
        6488
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "324": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6381,
        6488
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14B"
    },
    "327": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6381,
        6488
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x291"
    },
    "330": {
      "fn": "AniwarVestingV2.getBalance",
      "jump": "i",
      "offset": [
        6381,
        6488
      ],
      "op": "JUMP",
      "path": "8"
    },
    "331": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6381,
        6488
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "332": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6381,
        6488
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "334": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6381,
        6488
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "335": {
      "op": "SWAP1"
    },
    "336": {
      "op": "DUP2"
    },
    "337": {
      "op": "MSTORE"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "340": {
      "op": "ADD"
    },
    "341": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6381,
        6488
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13A"
    },
    "344": {
      "op": "JUMP"
    },
    "345": {
      "fn": "AniwarVestingV2.getToken",
      "offset": [
        6595,
        6684
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "346": {
      "fn": "AniwarVestingV2.getToken",
      "offset": [
        6670,
        6676
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 0,
      "value": "0x0"
    },
    "379": {
      "fn": "AniwarVestingV2.getToken",
      "offset": [
        6595,
        6684
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "380": {
      "fn": "AniwarVestingV2.getToken",
      "offset": [
        6595,
        6684
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "382": {
      "fn": "AniwarVestingV2.getToken",
      "offset": [
        6595,
        6684
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "389": {
      "op": "SHL"
    },
    "390": {
      "op": "SUB"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "SWAP2"
    },
    "393": {
      "op": "AND"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "AniwarVestingV2.getToken",
      "offset": [
        6595,
        6684
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13A"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "AniwarVestingV2.getCurrentTime",
      "offset": [
        6494,
        6589
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "404": {
      "fn": "AniwarVestingV2.getCurrentTime",
      "offset": [
        6567,
        6582
      ],
      "op": "TIMESTAMP",
      "path": "8",
      "statement": 1
    },
    "405": {
      "fn": "AniwarVestingV2.getCurrentTime",
      "offset": [
        6494,
        6589
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14B"
    },
    "408": {
      "fn": "AniwarVestingV2.getCurrentTime",
      "offset": [
        6494,
        6589
      ],
      "op": "JUMP",
      "path": "8"
    },
    "409": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "410": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14B"
    },
    "413": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A7"
    },
    "416": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "417": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "419": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x111B"
    },
    "422": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        4888,
        5923
      ],
      "op": "JUMP",
      "path": "8"
    },
    "423": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "424": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x321"
    },
    "427": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        4888,
        5923
      ],
      "op": "JUMP",
      "path": "8"
    },
    "428": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3322,
        4251
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "429": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3322,
        4251
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B4"
    },
    "432": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3322,
        4251
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x518"
    },
    "435": {
      "fn": "AniwarVestingV2.releaseAll",
      "jump": "i",
      "offset": [
        3322,
        4251
      ],
      "op": "JUMP",
      "path": "8"
    },
    "436": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3322,
        4251
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "437": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3322,
        4251
      ],
      "op": "STOP",
      "path": "8"
    },
    "438": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "439": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4"
    },
    "442": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CB"
    },
    "445": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "446": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "447": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B4"
    },
    "450": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CC"
    },
    "453": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "454": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "456": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1136"
    },
    "459": {
      "fn": "AniwarVestingV2.startSchedule",
      "jump": "i",
      "offset": [
        2942,
        3316
      ],
      "op": "JUMP",
      "path": "8"
    },
    "460": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "461": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x701"
    },
    "464": {
      "fn": "AniwarVestingV2.startSchedule",
      "jump": "i",
      "offset": [
        2942,
        3316
      ],
      "op": "JUMP",
      "path": "8"
    },
    "465": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        5929,
        6375
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "466": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6169,
        6179
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x2"
    },
    "468": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6169,
        6179
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "469": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6193,
        6205
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "471": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6193,
        6205
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "472": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6272,
        6306
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "474": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6272,
        6306
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "475": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6320,
        6358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "477": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6320,
        6358
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "478": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        5929,
        6375
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "480": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        5929,
        6375
      ],
      "op": "DUP1",
      "path": "8"
    },
    "481": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        5929,
        6375
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "482": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6169,
        6179
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "484": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6169,
        6179
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "485": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6169,
        6179
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "486": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6169,
        6179
      ],
      "op": "AND",
      "path": "8"
    },
    "487": {
      "op": "ISZERO"
    },
    "488": {
      "op": "ISZERO"
    },
    "489": {
      "op": "DUP6"
    },
    "490": {
      "op": "MSTORE"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "493": {
      "op": "DUP6"
    },
    "494": {
      "op": "ADD"
    },
    "495": {
      "op": "SWAP4"
    },
    "496": {
      "op": "SWAP1"
    },
    "497": {
      "op": "SWAP4"
    },
    "498": {
      "op": "MSTORE"
    },
    "499": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6219,
        6233
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "532": {
      "op": "SWAP3"
    },
    "533": {
      "op": "DUP5"
    },
    "534": {
      "op": "ADD"
    },
    "535": {
      "op": "SWAP3"
    },
    "536": {
      "op": "SWAP1"
    },
    "537": {
      "op": "SWAP3"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        6247,
        6258
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "574": {
      "op": "DUP5"
    },
    "575": {
      "op": "ADD"
    },
    "576": {
      "op": "MSTORE"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "579": {
      "op": "DUP4"
    },
    "580": {
      "op": "ADD"
    },
    "581": {
      "op": "MSTORE"
    },
    "582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "584": {
      "op": "DUP3"
    },
    "585": {
      "op": "ADD"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "fn": "AniwarVestingV2.getContractInfo",
      "offset": [
        5929,
        6375
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13A"
    },
    "593": {
      "op": "JUMP"
    },
    "594": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "595": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "597": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 3
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "SUB"
    },
    "606": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "607": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "610": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "611": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        1943,
        2936
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "612": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        1943,
        2936
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B4"
    },
    "615": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        1943,
        2936
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x271"
    },
    "618": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        1943,
        2936
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "619": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        1943,
        2936
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "621": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        1943,
        2936
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x114F"
    },
    "624": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "jump": "i",
      "offset": [
        1943,
        2936
      ],
      "op": "JUMP",
      "path": "8"
    },
    "625": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        1943,
        2936
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "626": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        1943,
        2936
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x88F"
    },
    "629": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "jump": "i",
      "offset": [
        1943,
        2936
      ],
      "op": "JUMP",
      "path": "8"
    },
    "630": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4257,
        4882
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "631": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4257,
        4882
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B4"
    },
    "634": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4257,
        4882
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB8D"
    },
    "637": {
      "fn": "AniwarVestingV2.releaseOne",
      "jump": "i",
      "offset": [
        4257,
        4882
      ],
      "op": "JUMP",
      "path": "8"
    },
    "638": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "639": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4"
    },
    "642": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C"
    },
    "645": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "648": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111B"
    },
    "651": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "652": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "653": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD76"
    },
    "656": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "657": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6381,
        6488
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "658": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 4,
      "value": "0x40"
    },
    "660": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "661": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP2",
      "path": "8"
    },
    "670": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "671": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6475,
        6479
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "672": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "674": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP3",
      "path": "8"
    },
    "675": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "ADD",
      "path": "8"
    },
    "676": {
      "op": "MSTORE"
    },
    "677": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6424,
        6431
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "679": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6424,
        6431
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "680": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6456
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "op": "SUB"
    },
    "721": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6466
      ],
      "op": "AND",
      "path": "8"
    },
    "722": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "723": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6466
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "728": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "734": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "736": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "737": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP1",
      "path": "8"
    },
    "738": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP4",
      "path": "8"
    },
    "739": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "SUB",
      "path": "8"
    },
    "740": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP2",
      "path": "8"
    },
    "741": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP7",
      "path": "8"
    },
    "742": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "GAS",
      "path": "8"
    },
    "743": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "744": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "745": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP1",
      "path": "8"
    },
    "746": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "747": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F8"
    },
    "750": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "751": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "752": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "754": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP1",
      "path": "8"
    },
    "755": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "756": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "757": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "759": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "REVERT",
      "path": "8"
    },
    "760": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "761": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "POP",
      "path": "8"
    },
    "762": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "POP",
      "path": "8"
    },
    "763": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "POP",
      "path": "8"
    },
    "764": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "POP",
      "path": "8"
    },
    "765": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "767": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "768": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "769": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "771": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "NOT",
      "path": "8"
    },
    "772": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "774": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP3",
      "path": "8"
    },
    "775": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "ADD",
      "path": "8"
    },
    "776": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "AND",
      "path": "8"
    },
    "777": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP3",
      "path": "8"
    },
    "778": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "ADD",
      "path": "8"
    },
    "779": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP1",
      "path": "8"
    },
    "780": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "782": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "783": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "POP",
      "path": "8"
    },
    "784": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "DUP2",
      "path": "8"
    },
    "785": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "ADD",
      "path": "8"
    },
    "786": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "787": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31C"
    },
    "790": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "791": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "792": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1188"
    },
    "795": {
      "fn": "AniwarVestingV2.getBalance",
      "jump": "i",
      "offset": [
        6450,
        6481
      ],
      "op": "JUMP",
      "path": "8"
    },
    "796": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6450,
        6481
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "797": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6443,
        6481
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "798": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6443,
        6481
      ],
      "op": "POP",
      "path": "8"
    },
    "799": {
      "fn": "AniwarVestingV2.getBalance",
      "offset": [
        6381,
        6488
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "800": {
      "fn": "AniwarVestingV2.getBalance",
      "jump": "o",
      "offset": [
        6381,
        6488
      ],
      "op": "JUMP",
      "path": "8"
    },
    "801": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "802": {
      "offset": [
        1162,
        1172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "804": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1162,
        1172
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "805": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5029,
        5036
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "807": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5029,
        5036
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "808": {
      "offset": [
        1162,
        1172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "810": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1162,
        1172
      ],
      "op": "AND",
      "path": "8"
    },
    "811": {
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34F"
    },
    "814": {
      "offset": [
        1154,
        1204
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "815": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "817": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "818": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "824": {
      "op": "SHL"
    },
    "825": {
      "offset": [
        1154,
        1204
      ],
      "op": "DUP2",
      "path": "8"
    },
    "826": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "827": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "829": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "ADD",
      "path": "8"
    },
    "830": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "833": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "834": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11A1"
    },
    "837": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        1154,
        1204
      ],
      "op": "JUMP",
      "path": "8"
    },
    "838": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "839": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "841": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "842": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "DUP1",
      "path": "8"
    },
    "843": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "844": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "SUB",
      "path": "8"
    },
    "845": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "846": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "847": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        1154,
        1204
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "854": {
      "op": "SHL"
    },
    "855": {
      "op": "SUB"
    },
    "856": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "DUP3",
      "path": "8"
    },
    "857": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "AND",
      "path": "8"
    },
    "858": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5082
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "860": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "861": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "862": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "863": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5098
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "865": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "867": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "868": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "869": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "870": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "872": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "873": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "DUP3",
      "path": "8"
    },
    "874": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "875": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5085,
        5112
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "876": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP3",
      "path": "8"
    },
    "877": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "878": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "880": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "881": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ADD",
      "path": "8"
    },
    "882": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP5",
      "path": "8"
    },
    "883": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "884": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "885": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "886": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "887": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "888": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "890": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP3",
      "path": "8"
    },
    "891": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ADD",
      "path": "8"
    },
    "892": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "893": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "894": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "895": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ADD",
      "path": "8"
    },
    "896": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "897": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "898": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "899": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "900": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "902": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "903": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ADD",
      "path": "8"
    },
    "904": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "905": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "906": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP3",
      "path": "8"
    },
    "907": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ADD",
      "path": "8"
    },
    "908": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "909": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "910": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "911": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "912": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "914": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP3",
      "path": "8"
    },
    "915": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ADD",
      "path": "8"
    },
    "916": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "917": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "919": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP3",
      "path": "8"
    },
    "920": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ADD",
      "path": "8"
    },
    "921": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "922": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "924": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "925": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "926": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ADD",
      "path": "8"
    },
    "927": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "928": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "930": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "AND",
      "path": "8"
    },
    "931": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "932": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP1",
      "path": "8"
    },
    "933": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "934": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "936": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP4",
      "path": "8"
    },
    "937": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "ADD",
      "path": "8"
    },
    "938": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "939": {
      "fn": "AniwarVestingV2.getCurrentTime",
      "offset": [
        6567,
        6582
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "940": {
      "fn": "AniwarVestingV2.getCurrentTime",
      "offset": [
        6567,
        6582
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "941": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5052,
        5112
      ],
      "op": "DUP1",
      "path": "8"
    },
    "942": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5174,
        5230
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B8"
    },
    "945": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5174,
        5230
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "946": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5174,
        5230
      ],
      "op": "POP",
      "path": "8"
    },
    "947": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5218,
        5230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "949": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5218,
        5230
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "950": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5204,
        5215
      ],
      "op": "DUP2",
      "path": "8"
    },
    "951": {
      "branch": 46,
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5204,
        5230
      ],
      "op": "LT",
      "path": "8"
    },
    "952": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5174,
        5230
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "953": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5170,
        5265
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "954": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5170,
        5265
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C7"
    },
    "957": {
      "branch": 46,
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5170,
        5265
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "958": {
      "op": "POP"
    },
    "959": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5253,
        5254
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 5,
      "value": "0x0"
    },
    "961": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5253,
        5254
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "962": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "963": {
      "op": "POP"
    },
    "964": {
      "op": "POP"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "o",
      "offset": [
        4888,
        5923
      ],
      "op": "JUMP",
      "path": "8"
    },
    "967": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5170,
        5265
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "968": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5274,
        5294
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "970": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5328,
        5342
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "1003": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5312,
        5324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1005": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5312,
        5324
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1006": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5298,
        5309
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1007": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5298,
        5324
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F8"
    },
    "1010": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5298,
        5324
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1011": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5298,
        5324
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1012": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5298,
        5324
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11EE"
    },
    "1015": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5298,
        5324
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1016": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5298,
        5324
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1017": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5297,
        5342
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x402"
    },
    "1020": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5297,
        5342
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1021": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5297,
        5342
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1022": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5297,
        5342
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1205"
    },
    "1025": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5297,
        5342
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1026": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5297,
        5342
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1027": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5274,
        5342
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1028": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5274,
        5342
      ],
      "op": "POP",
      "path": "8"
    },
    "1029": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5372,
        5383
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "1062": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5356,
        5368
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1063": {
      "branch": 47,
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5356,
        5383
      ],
      "op": "LT",
      "path": "8"
    },
    "1064": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5352,
        5436
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x44E"
    },
    "1067": {
      "branch": 47,
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5352,
        5436
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1068": {
      "op": "POP"
    },
    "1069": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5414,
        5425
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 6,
      "value": "0x0"
    },
    "1102": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5352,
        5436
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1103": {
      "branch": 48,
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5449,
        5466
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1104": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5445,
        5509
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x457"
    },
    "1107": {
      "branch": 48,
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5445,
        5509
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5497,
        5498
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 7,
      "value": "0x1"
    },
    "1111": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5445,
        5509
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1112": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5537,
        5548
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1113": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5537,
        5554
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1115": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5537,
        5554
      ],
      "op": "ADD",
      "path": "8"
    },
    "1116": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5537,
        5554
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1117": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5522,
        5534
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1118": {
      "branch": 49,
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5522,
        5554
      ],
      "op": "LT",
      "path": "8"
    },
    "1119": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5518,
        5589
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1120": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5518,
        5589
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x46E"
    },
    "1123": {
      "branch": 49,
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5518,
        5589
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1124": {
      "op": "POP"
    },
    "1125": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5577,
        5578
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 8,
      "value": "0x0"
    },
    "1127": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5577,
        5578
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1128": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "o",
      "offset": [
        4888,
        5923
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1134": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5518,
        5589
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1135": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5709,
        5726
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1137": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5709,
        5726
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1138": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5709,
        5726
      ],
      "op": "ADD",
      "path": "8"
    },
    "1139": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5709,
        5726
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1140": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5598,
        5623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1142": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5598,
        5623
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1143": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5691,
        5706
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4A1"
    },
    "1146": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5705,
        5706
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1148": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5691,
        5702
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "1181": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5691,
        5706
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11EE"
    },
    "1184": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5691,
        5706
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1185": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5691,
        5706
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1186": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5691,
        5726
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4AB"
    },
    "1189": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5691,
        5726
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1190": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5691,
        5726
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1191": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5691,
        5726
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11EE"
    },
    "1194": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5691,
        5726
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1195": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5691,
        5726
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1196": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5665,
        5686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1198": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5665,
        5686
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1199": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5665,
        5686
      ],
      "op": "ADD",
      "path": "8"
    },
    "1200": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5665,
        5686
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1201": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5627,
        5650
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1202": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5627,
        5650
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1203": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5627,
        5686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4BC"
    },
    "1206": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5627,
        5686
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1207": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5665,
        5686
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1208": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5627,
        5686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11EE"
    },
    "1211": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5627,
        5686
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1212": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5627,
        5686
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1213": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5626,
        5727
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4C6"
    },
    "1216": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5626,
        5727
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1217": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5626,
        5727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1218": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5626,
        5727
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1205"
    },
    "1221": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5626,
        5727
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1222": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5626,
        5727
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1223": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5598,
        5727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1224": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5598,
        5727
      ],
      "op": "POP",
      "path": "8"
    },
    "1225": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5877,
        5888
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 9
    },
    "1226": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5877,
        5916
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "1228": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5877,
        5916
      ],
      "op": "ADD",
      "path": "8"
    },
    "1229": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5877,
        5916
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1230": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5841,
        5852
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1231": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5841,
        5862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1233": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5841,
        5862
      ],
      "op": "ADD",
      "path": "8"
    },
    "1234": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5841,
        5862
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1235": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5808,
        5819
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1236": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5808,
        5825
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1238": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5808,
        5825
      ],
      "op": "ADD",
      "path": "8"
    },
    "1239": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5808,
        5825
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1240": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5804,
        5805
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1242": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5801
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1243": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5805
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4E4"
    },
    "1246": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5805
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1247": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5805
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1248": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5805
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11EE"
    },
    "1251": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5789,
        5805
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1252": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5805
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1253": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5825
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4EE"
    },
    "1256": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5825
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1257": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5825
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1258": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5825
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11EE"
    },
    "1261": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5789,
        5825
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1262": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5789,
        5825
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1263": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5826
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4F8"
    },
    "1266": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5826
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1267": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5773
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1268": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5826
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1227"
    },
    "1271": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5756,
        5826
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1272": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5826
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1273": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5862
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x502"
    },
    "1276": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5862
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1277": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5862
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1278": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5862
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1246"
    },
    "1281": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5756,
        5862
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1282": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5862
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1283": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5916
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x50C"
    },
    "1286": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5916
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1287": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5916
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1288": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5916
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11EE"
    },
    "1291": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        5756,
        5916
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1292": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5756,
        5916
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1293": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5737,
        5916
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1294": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5737,
        5916
      ],
      "op": "POP",
      "path": "8"
    },
    "1295": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5737,
        5916
      ],
      "op": "POP",
      "path": "8"
    },
    "1296": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5737,
        5916
      ],
      "op": "POP",
      "path": "8"
    },
    "1297": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5737,
        5916
      ],
      "op": "POP",
      "path": "8"
    },
    "1298": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        5737,
        5916
      ],
      "op": "POP",
      "path": "8"
    },
    "1299": {
      "offset": [
        1214,
        1215
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1300": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1301": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1302": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "offset": [
        4888,
        5923
      ],
      "op": "POP",
      "path": "8"
    },
    "1303": {
      "fn": "AniwarVestingV2.calculateWithdrawableAmount",
      "jump": "o",
      "offset": [
        4888,
        5923
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1304": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3322,
        4251
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1305": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1307": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "op": "SUB"
    },
    "1316": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1317": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 10
    },
    "1318": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1319": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x542"
    },
    "1322": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1323": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1325": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1332": {
      "op": "SHL"
    },
    "1333": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1334": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1335": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1337": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1338": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "1341": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1342": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125E"
    },
    "1345": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1346": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1347": {
      "offset": [
        1162,
        1172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1349": {
      "fn": "Context._msgSender",
      "offset": [
        1162,
        1172
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1350": {
      "fn": "Context._msgSender",
      "offset": [
        1162,
        1172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1352": {
      "fn": "Context._msgSender",
      "offset": [
        1162,
        1172
      ],
      "op": "AND",
      "path": "8"
    },
    "1353": {
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x564"
    },
    "1356": {
      "offset": [
        1154,
        1204
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1357": {
      "fn": "Context._msgSender",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1359": {
      "fn": "Context._msgSender",
      "offset": [
        1154,
        1204
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1360": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "offset": [
        1154,
        1204
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1368": {
      "fn": "Context._msgSender",
      "offset": [
        1154,
        1204
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1369": {
      "fn": "Context._msgSender",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1371": {
      "fn": "Context._msgSender",
      "offset": [
        1154,
        1204
      ],
      "op": "ADD",
      "path": "8"
    },
    "1372": {
      "fn": "Context._msgSender",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "1375": {
      "fn": "Context._msgSender",
      "offset": [
        1154,
        1204
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1376": {
      "fn": "Context._msgSender",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11A1"
    },
    "1379": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1154,
        1204
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1380": {
      "fn": "Context._msgSender",
      "offset": [
        1154,
        1204
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1381": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1383": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1385": {
      "fn": "Context._msgSender",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1386": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "1"
    },
    "1387": {
      "fn": "Context._msgSender",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1388": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B7"
    },
    "1391": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1392": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1394": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1395": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1401": {
      "op": "SHL"
    },
    "1402": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1403": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1406": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1408": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1409": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1415": {
      "op": "DUP3"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1453": {
      "op": "DUP3"
    },
    "1454": {
      "op": "ADD"
    },
    "1455": {
      "op": "MSTORE"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x346"
    },
    "1462": {
      "op": "JUMP"
    },
    "1463": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1464": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1466": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1468": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1469": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3467,
        3491
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1471": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3449,
        4245
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1472": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3528,
        3549
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "1474": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3528,
        3556
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1475": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3509,
        3556
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1476": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3509,
        3556
      ],
      "op": "LT",
      "path": "8"
    },
    "1477": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3449,
        4245
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1478": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3449,
        4245
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6C4"
    },
    "1481": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3449,
        4245
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1482": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3613,
        3639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1484": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "1486": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3681,
        3697
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1487": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1488": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1489": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1490": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "LT",
      "path": "8"
    },
    "1491": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5DE"
    },
    "1494": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1495": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5DE"
    },
    "1498": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1293"
    },
    "1501": {
      "fn": "AniwarVestingV2.releaseAll",
      "jump": "i",
      "offset": [
        3642,
        3711
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1502": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1503": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1505": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1506": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1507": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1508": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1510": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1511": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1512": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1513": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1514": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1515": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "ADD",
      "path": "8"
    },
    "1516": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1523": {
      "op": "SHL"
    },
    "1524": {
      "op": "SUB"
    },
    "1525": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "AND",
      "path": "8"
    },
    "1526": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1527": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1528": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1529": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3772
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "1531": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1532": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1533": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1534": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1536": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1537": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1538": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1539": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1540": {
      "op": "POP"
    },
    "1541": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3759,
        3792
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1542": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3823,
        3870
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x60E"
    },
    "1545": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3642,
        3711
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1546": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3823,
        3850
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x321"
    },
    "1549": {
      "fn": "AniwarVestingV2.releaseAll",
      "jump": "i",
      "offset": [
        3823,
        3870
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1550": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3823,
        3870
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1551": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3913
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1553": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3913
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1554": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3913
      ],
      "op": "ADD",
      "path": "8"
    },
    "1555": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3913
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1556": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3806,
        3870
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1557": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3806,
        3870
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3913
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1561": {
      "branch": 50,
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3913
      ],
      "op": "AND",
      "path": "8"
    },
    "1562": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3927
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1563": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3927
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1564": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3927
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x625"
    },
    "1567": {
      "branch": 50,
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3927
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1568": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3927
      ],
      "op": "POP",
      "path": "8"
    },
    "1569": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3926,
        3927
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1571": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3917,
        3923
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1572": {
      "branch": 51,
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3917,
        3927
      ],
      "op": "GT",
      "path": "8"
    },
    "1573": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3888,
        3927
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1574": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3884,
        4235
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1575": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3884,
        4235
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6AE"
    },
    "1578": {
      "branch": 51,
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3884,
        4235
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1579": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3990,
        3996
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 11
    },
    "1580": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3958
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1581": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3986
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1583": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3986
      ],
      "op": "ADD",
      "path": "8"
    },
    "1584": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3986
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1586": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1587": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1588": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1589": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x63E"
    },
    "1592": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1593": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1594": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1246"
    },
    "1597": {
      "fn": "AniwarVestingV2.releaseAll",
      "jump": "i",
      "offset": [
        3947,
        3996
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1598": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1599": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1600": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1601": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3947,
        3996
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1602": {
      "op": "POP"
    },
    "1603": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4080,
        4098
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1604": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4080,
        4098
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1605": {
      "op": "POP"
    },
    "1606": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4134,
        4181
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 12,
      "value": "0x679"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4134,
        4140
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "1650": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4134,
        4153
      ],
      "op": "AND",
      "path": "8"
    },
    "1651": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4080,
        4098
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1652": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4174,
        4180
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1653": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4134,
        4153
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE11"
    },
    "1656": {
      "fn": "AniwarVestingV2.releaseAll",
      "jump": "i",
      "offset": [
        4134,
        4181
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1657": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4134,
        4181
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1658": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 13,
      "value": "0x40"
    },
    "1660": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1661": {
      "op": "DUP3"
    },
    "1662": {
      "op": "DUP2"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xFB81F9B30D73D830C3544B34D827C08142579EE75710B490BAB0B3995468C565"
    },
    "1697": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1700": {
      "op": "ADD"
    },
    "1701": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1703": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1704": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1705": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1706": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "SUB",
      "path": "8"
    },
    "1707": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1708": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        4204,
        4220
      ],
      "op": "LOG1",
      "path": "8"
    },
    "1709": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3929,
        4235
      ],
      "op": "POP",
      "path": "8"
    },
    "1710": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3884,
        4235
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1711": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3599,
        4245
      ],
      "op": "POP",
      "path": "8"
    },
    "1712": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3599,
        4245
      ],
      "op": "POP",
      "path": "8"
    },
    "1713": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3599,
        4245
      ],
      "op": "POP",
      "path": "8"
    },
    "1714": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3570,
        3588
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 14
    },
    "1715": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3570,
        3588
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1716": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3570,
        3588
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6BC"
    },
    "1719": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3570,
        3588
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1720": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3570,
        3588
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12A9"
    },
    "1723": {
      "fn": "AniwarVestingV2.releaseAll",
      "jump": "i",
      "offset": [
        3570,
        3588
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1724": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3570,
        3588
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1725": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3570,
        3588
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1726": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3570,
        3588
      ],
      "op": "POP",
      "path": "8"
    },
    "1727": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3570,
        3588
      ],
      "op": "POP",
      "path": "8"
    },
    "1728": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3449,
        4245
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5BF"
    },
    "1731": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3449,
        4245
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1732": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        3449,
        4245
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1736": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1737": {
      "fn": "AniwarVestingV2.releaseAll",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1738": {
      "fn": "AniwarVestingV2.releaseAll",
      "jump": "o",
      "offset": [
        3322,
        4251
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1739": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1740": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1742": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1749": {
      "op": "SHL"
    },
    "1750": {
      "op": "SUB"
    },
    "1751": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1752": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1753": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1754": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F5"
    },
    "1757": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1758": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1760": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1767": {
      "op": "SHL"
    },
    "1768": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1769": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1770": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1772": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1773": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "1776": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1777": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125E"
    },
    "1780": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1781": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1782": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x6FF"
    },
    "1785": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1787": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE68"
    },
    "1790": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1792": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1793": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1794": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1796": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1803": {
      "op": "SHL"
    },
    "1804": {
      "op": "SUB"
    },
    "1805": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1806": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1807": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1808": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72B"
    },
    "1811": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1812": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1814": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1815": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1823": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1824": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1826": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1827": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "1830": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1831": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125E"
    },
    "1834": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1835": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1836": {
      "offset": [
        1289,
        1299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1838": {
      "fn": "Context._msgSender",
      "offset": [
        1289,
        1299
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1839": {
      "fn": "Context._msgSender",
      "offset": [
        1289,
        1299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1841": {
      "fn": "Context._msgSender",
      "offset": [
        1289,
        1299
      ],
      "op": "AND",
      "path": "8"
    },
    "1842": {
      "offset": [
        1288,
        1299
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1843": {
      "offset": [
        1280,
        1323
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x774"
    },
    "1846": {
      "offset": [
        1280,
        1323
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1847": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1849": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1856": {
      "op": "SHL"
    },
    "1857": {
      "offset": [
        1280,
        1323
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1858": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1861": {
      "offset": [
        1280,
        1323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1863": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1864": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "ADD",
      "path": "8"
    },
    "1865": {
      "op": "MSTORE"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1870": {
      "op": "DUP3"
    },
    "1871": {
      "op": "ADD"
    },
    "1872": {
      "op": "MSTORE"
    },
    "1873": {
      "op": "PUSH19",
      "value": "0x56657374696E67206973205374617274656421"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1895": {
      "op": "SHL"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1898": {
      "op": "DUP3"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "MSTORE"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1903": {
      "op": "ADD"
    },
    "1904": {
      "offset": [
        1280,
        1323
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "1907": {
      "op": "JUMP"
    },
    "1908": {
      "offset": [
        1280,
        1323
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1909": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3139,
        3173
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 16,
      "value": "0x4"
    },
    "1911": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3139,
        3173
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1912": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3139,
        3173
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1913": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1915": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1916": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1925": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1926": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3113,
        3117
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "1927": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1928": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1929": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "ADD",
      "path": "8"
    },
    "1930": {
      "op": "SWAP3"
    },
    "1931": {
      "op": "SWAP1"
    },
    "1932": {
      "op": "SWAP3"
    },
    "1933": {
      "op": "MSTORE"
    },
    "1934": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3139,
        3173
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "op": "SUB"
    },
    "1943": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3094
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "1976": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3104
      ],
      "op": "AND",
      "path": "8"
    },
    "1977": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3104
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1978": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3104
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "1983": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3104
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1986": {
      "op": "ADD"
    },
    "1987": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1989": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1991": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1992": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1993": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1994": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "SUB",
      "path": "8"
    },
    "1995": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1996": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP7",
      "path": "8"
    },
    "1997": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "GAS",
      "path": "8"
    },
    "1998": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "1999": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2000": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2001": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2002": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7DF"
    },
    "2005": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2006": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2007": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2009": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2010": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2011": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2012": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2014": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2015": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2016": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "POP",
      "path": "8"
    },
    "2017": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "POP",
      "path": "8"
    },
    "2018": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "POP",
      "path": "8"
    },
    "2019": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "POP",
      "path": "8"
    },
    "2020": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2022": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2023": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2024": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2026": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "NOT",
      "path": "8"
    },
    "2027": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2029": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2030": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "ADD",
      "path": "8"
    },
    "2031": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "AND",
      "path": "8"
    },
    "2032": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2033": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "ADD",
      "path": "8"
    },
    "2034": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2035": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2037": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2038": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "POP",
      "path": "8"
    },
    "2039": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2040": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "ADD",
      "path": "8"
    },
    "2041": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2042": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x803"
    },
    "2045": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2046": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2047": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1188"
    },
    "2050": {
      "fn": "AniwarVestingV2.startSchedule",
      "jump": "i",
      "offset": [
        3088,
        3119
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2051": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3119
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2052": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3173
      ],
      "op": "LT",
      "path": "8"
    },
    "2053": {
      "branch": 52,
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3088,
        3173
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2054": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x851"
    },
    "2057": {
      "branch": 52,
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2058": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2060": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2069": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2072": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2074": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2075": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "ADD",
      "path": "8"
    },
    "2076": {
      "op": "MSTORE"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "MSTORE"
    },
    "2084": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420657863656564732062616C616E636520616E6420496E697400"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2119": {
      "op": "DUP3"
    },
    "2120": {
      "op": "ADD"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "2128": {
      "op": "JUMP"
    },
    "2129": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3067,
        3230
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2130": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3240,
        3250
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 17,
      "value": "0x2"
    },
    "2132": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3240,
        3257
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2133": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3240,
        3257
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2136": {
      "op": "NOT"
    },
    "2137": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3240,
        3257
      ],
      "op": "AND",
      "path": "8"
    },
    "2138": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3253,
        3257
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2140": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3240,
        3257
      ],
      "op": "OR",
      "path": "8"
    },
    "2141": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3240,
        3257
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2142": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3240,
        3257
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2143": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3267,
        3279
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 18,
      "value": "0x3"
    },
    "2145": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3267,
        3287
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2146": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3267,
        3287
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2147": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3267,
        3287
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2148": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3302,
        3309
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 19,
      "value": "0x40"
    },
    "2150": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3302,
        3309
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2151": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3302,
        3309
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xFD3415C24B2B4519F08B7935C13F86EA010C77B3FF9BF448A474AE3B2414FCE0"
    },
    "2184": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3302,
        3309
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2185": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3240,
        3250
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2187": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3240,
        3250
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2188": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        3302,
        3309
      ],
      "op": "LOG1",
      "path": "8"
    },
    "2189": {
      "fn": "AniwarVestingV2.startSchedule",
      "offset": [
        2942,
        3316
      ],
      "op": "POP",
      "path": "8"
    },
    "2190": {
      "fn": "AniwarVestingV2.startSchedule",
      "jump": "o",
      "offset": [
        2942,
        3316
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2191": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        1943,
        2936
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2192": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2194": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2201": {
      "op": "SHL"
    },
    "2202": {
      "op": "SUB"
    },
    "2203": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2204": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2205": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2206": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B9"
    },
    "2209": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2210": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2212": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2221": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2222": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2224": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2225": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "2228": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2229": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125E"
    },
    "2232": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2233": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2234": {
      "offset": [
        1289,
        1299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2236": {
      "fn": "Context._msgSender",
      "offset": [
        1289,
        1299
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2237": {
      "fn": "Context._msgSender",
      "offset": [
        1289,
        1299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2239": {
      "fn": "Context._msgSender",
      "offset": [
        1289,
        1299
      ],
      "op": "AND",
      "path": "8"
    },
    "2240": {
      "offset": [
        1288,
        1299
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2241": {
      "offset": [
        1280,
        1323
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x902"
    },
    "2244": {
      "offset": [
        1280,
        1323
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2245": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2247": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "offset": [
        1280,
        1323
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2256": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2259": {
      "offset": [
        1280,
        1323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2261": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2262": {
      "fn": "Context._msgSender",
      "offset": [
        1280,
        1323
      ],
      "op": "ADD",
      "path": "8"
    },
    "2263": {
      "op": "MSTORE"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2268": {
      "op": "DUP3"
    },
    "2269": {
      "op": "ADD"
    },
    "2270": {
      "op": "MSTORE"
    },
    "2271": {
      "op": "PUSH19",
      "value": "0x56657374696E67206973205374617274656421"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2293": {
      "op": "SHL"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2296": {
      "op": "DUP3"
    },
    "2297": {
      "op": "ADD"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2301": {
      "op": "ADD"
    },
    "2302": {
      "offset": [
        1280,
        1323
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "2305": {
      "op": "JUMP"
    },
    "2306": {
      "offset": [
        1280,
        1323
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2307": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2170,
        2208
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 20,
      "value": "0x5"
    },
    "2309": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2170,
        2208
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2310": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2159,
        2166
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2311": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2159,
        2208
      ],
      "op": "GT",
      "path": "8"
    },
    "2312": {
      "branch": 53,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2159,
        2208
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2313": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x986"
    },
    "2316": {
      "branch": 53,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2317": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2319": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2326": {
      "op": "SHL"
    },
    "2327": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2328": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2331": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2333": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2334": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "ADD",
      "path": "8"
    },
    "2335": {
      "op": "MSTORE"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2340": {
      "op": "DUP3"
    },
    "2341": {
      "op": "ADD"
    },
    "2342": {
      "op": "MSTORE"
    },
    "2343": {
      "op": "PUSH32",
      "value": "0x546F6B656E56657374696E673A2063616E6E6F74206164642062656E65666963"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2378": {
      "op": "DUP3"
    },
    "2379": {
      "op": "ADD"
    },
    "2380": {
      "op": "MSTORE"
    },
    "2381": {
      "op": "PUSH32",
      "value": "0x69617279202062656361757365206E6F742073756666696369656E7420746F6B"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2416": {
      "op": "DUP3"
    },
    "2417": {
      "op": "ADD"
    },
    "2418": {
      "op": "MSTORE"
    },
    "2419": {
      "op": "PUSH3",
      "value": "0x656E73"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2428": {
      "op": "DUP3"
    },
    "2429": {
      "op": "ADD"
    },
    "2430": {
      "op": "MSTORE"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "2437": {
      "op": "JUMP"
    },
    "2438": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2138,
        2301
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2439": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2329,
        2330
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 21,
      "value": "0x0"
    },
    "2441": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2319,
        2326
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2442": {
      "branch": 54,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2319,
        2330
      ],
      "op": "GT",
      "path": "8"
    },
    "2443": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9D6"
    },
    "2446": {
      "branch": 54,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2447": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2449": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2450": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2458": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2461": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2463": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2464": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "ADD",
      "path": "8"
    },
    "2465": {
      "op": "DUP2"
    },
    "2466": {
      "op": "SWAP1"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "ADD"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH32",
      "value": "0x546F6B656E56657374696E673A20616D6F756E74206D757374206265203E2030"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2508": {
      "op": "DUP3"
    },
    "2509": {
      "op": "ADD"
    },
    "2510": {
      "op": "MSTORE"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2513": {
      "op": "ADD"
    },
    "2514": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "2517": {
      "op": "JUMP"
    },
    "2518": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2311,
        2367
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2519": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2394,
        2405
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 22,
      "value": "0x0"
    },
    "2552": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2385,
        2391
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2553": {
      "branch": 55,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2385,
        2405
      ],
      "op": "LT",
      "path": "8"
    },
    "2554": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA4F"
    },
    "2557": {
      "branch": 55,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2558": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2560": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2567": {
      "op": "SHL"
    },
    "2568": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2569": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2572": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2574": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2575": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "ADD",
      "path": "8"
    },
    "2576": {
      "op": "MSTORE"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2581": {
      "op": "DUP3"
    },
    "2582": {
      "op": "ADD"
    },
    "2583": {
      "op": "MSTORE"
    },
    "2584": {
      "op": "PUSH32",
      "value": "0x636C696666206D757374206C657373207468616E2073756D206F662073706C69"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2619": {
      "op": "DUP3"
    },
    "2620": {
      "op": "ADD"
    },
    "2621": {
      "op": "MSTORE"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "2626": {
      "op": "SHL"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2629": {
      "op": "DUP3"
    },
    "2630": {
      "op": "ADD"
    },
    "2631": {
      "op": "MSTORE"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2634": {
      "op": "ADD"
    },
    "2635": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "2638": {
      "op": "JUMP"
    },
    "2639": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2377,
        2443
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2640": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2473,
        2476
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 23,
      "value": "0x64"
    },
    "2642": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2461,
        2470
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2643": {
      "branch": 56,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2461,
        2476
      ],
      "op": "LT",
      "path": "8"
    },
    "2644": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA9F"
    },
    "2647": {
      "branch": 56,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2648": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2650": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2657": {
      "op": "SHL"
    },
    "2658": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2659": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2662": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2664": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2665": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "ADD",
      "path": "8"
    },
    "2666": {
      "op": "MSTORE"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2671": {
      "op": "DUP3"
    },
    "2672": {
      "op": "ADD"
    },
    "2673": {
      "op": "MSTORE"
    },
    "2674": {
      "op": "PUSH32",
      "value": "0x52617465206D757374206C657373207468616E20313030250000000000000000"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2709": {
      "op": "DUP3"
    },
    "2710": {
      "op": "ADD"
    },
    "2711": {
      "op": "MSTORE"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2714": {
      "op": "ADD"
    },
    "2715": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "2718": {
      "op": "JUMP"
    },
    "2719": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2453,
        2505
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2726": {
      "op": "SHL"
    },
    "2727": {
      "op": "SUB"
    },
    "2728": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2729": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "AND",
      "path": "8"
    },
    "2730": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2515,
        2546
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2732": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2733": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2734": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2735": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2562
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "2737": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2739": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2740": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2742": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2743": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2549,
        2576
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2744": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2746": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2747": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2591,
        2616
      ],
      "op": "ADD",
      "path": "8"
    },
    "2748": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2591,
        2616
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2749": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2751": {
      "branch": 57,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2591,
        2616
      ],
      "op": "AND",
      "path": "8"
    },
    "2752": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2586,
        2729
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB1E"
    },
    "2755": {
      "branch": 57,
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2586,
        2729
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2756": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2657
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 24,
      "value": "0x4"
    },
    "2758": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2657
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2759": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2657
      ],
      "op": "ADD",
      "path": "8"
    },
    "2760": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2761": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2762": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2660,
        2664
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2766": {
      "op": "NOT"
    },
    "2767": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2768": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2769": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "AND",
      "path": "8"
    },
    "2770": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2771": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "OR",
      "path": "8"
    },
    "2772": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2773": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2774": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2632,
        2664
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2775": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2699
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 25,
      "value": "0x6"
    },
    "2777": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2778": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2779": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2780": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2781": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "ADD",
      "path": "8"
    },
    "2782": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2783": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2786": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2787": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "2820": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "ADD",
      "path": "8"
    },
    "2821": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2822": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2829": {
      "op": "SHL"
    },
    "2830": {
      "op": "SUB"
    },
    "2831": {
      "op": "NOT"
    },
    "2832": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "AND",
      "path": "8"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2839": {
      "op": "SHL"
    },
    "2840": {
      "op": "SUB"
    },
    "2841": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2842": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "AND",
      "path": "8"
    },
    "2843": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "OR",
      "path": "8"
    },
    "2844": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2845": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2678,
        2718
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2846": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2586,
        2729
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2847": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2738,
        2755
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 26,
      "value": "0x2"
    },
    "2849": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2738,
        2755
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2850": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2738,
        2755
      ],
      "op": "ADD",
      "path": "8"
    },
    "2851": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2738,
        2764
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2852": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2738,
        2764
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2853": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2738,
        2764
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2854": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2808
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 27
    },
    "2855": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2808
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2856": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2801,
        2808
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2857": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2801,
        2808
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2858": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2738,
        2749
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2859": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2738,
        2749
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2860": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2797
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2862": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2797
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2863": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2808
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB39"
    },
    "2866": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2808
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2867": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2801,
        2808
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2868": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2801,
        2808
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2869": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2808
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1246"
    },
    "2872": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "jump": "i",
      "offset": [
        2774,
        2808
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2873": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2808
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2874": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2808
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2875": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2808
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2876": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2774,
        2808
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2877": {
      "op": "POP"
    },
    "2878": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2867,
        2870
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 28,
      "value": "0x64"
    },
    "2880": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2867,
        2870
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2881": {
      "op": "POP"
    },
    "2882": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2844,
        2863
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB4B"
    },
    "2885": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2854,
        2863
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2886": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2844,
        2851
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2887": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2844,
        2863
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1227"
    },
    "2890": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "jump": "i",
      "offset": [
        2844,
        2863
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2891": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2844,
        2863
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2892": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2843,
        2870
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB55"
    },
    "2895": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2843,
        2870
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2896": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2843,
        2870
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2897": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2843,
        2870
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1205"
    },
    "2900": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "jump": "i",
      "offset": [
        2843,
        2870
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2901": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2843,
        2870
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2902": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2829
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2903": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2839
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2905": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2839
      ],
      "op": "ADD",
      "path": "8"
    },
    "2906": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2839
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2908": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2909": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2910": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2911": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB68"
    },
    "2914": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2915": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2916": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1246"
    },
    "2919": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "jump": "i",
      "offset": [
        2818,
        2870
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2920": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2921": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2922": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "POP",
      "path": "8"
    },
    "2923": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "POP",
      "path": "8"
    },
    "2924": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2925": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2926": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2927": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2818,
        2870
      ],
      "op": "POP",
      "path": "8"
    },
    "2928": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2922,
        2929
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 29
    },
    "2929": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2918
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "2931": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2918
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2933": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2934": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2935": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2936": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB81"
    },
    "2939": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2940": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2941": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11EE"
    },
    "2944": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "jump": "i",
      "offset": [
        2880,
        2929
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2945": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2946": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2947": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2948": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "offset": [
        2880,
        2929
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2949": {
      "op": "POP"
    },
    "2950": {
      "op": "POP"
    },
    "2951": {
      "op": "POP"
    },
    "2952": {
      "op": "POP"
    },
    "2953": {
      "op": "POP"
    },
    "2954": {
      "op": "POP"
    },
    "2955": {
      "op": "POP"
    },
    "2956": {
      "fn": "AniwarVestingV2.addBeneficiary",
      "jump": "o",
      "offset": [
        1943,
        2936
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2957": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4257,
        4882
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2958": {
      "offset": [
        1162,
        1172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2960": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1162,
        1172
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2961": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1162,
        1172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2963": {
      "branch": 58,
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1162,
        1172
      ],
      "op": "AND",
      "path": "8"
    },
    "2964": {
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBAF"
    },
    "2967": {
      "branch": 58,
      "offset": [
        1154,
        1204
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2968": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2970": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1154,
        1204
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2971": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2977": {
      "op": "SHL"
    },
    "2978": {
      "offset": [
        1154,
        1204
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2979": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1154,
        1204
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2980": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2982": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1154,
        1204
      ],
      "op": "ADD",
      "path": "8"
    },
    "2983": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "2986": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1154,
        1204
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2987": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1154,
        1204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11A1"
    },
    "2990": {
      "fn": "AniwarVestingV2.releaseOne",
      "jump": "i",
      "offset": [
        1154,
        1204
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2991": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        1154,
        1204
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2992": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2994": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2996": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2997": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "1"
    },
    "2998": {
      "branch": 65,
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2999": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC02"
    },
    "3002": {
      "branch": 65,
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3003": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3005": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3006": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3012": {
      "op": "SHL"
    },
    "3013": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3014": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3017": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3019": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3020": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "3021": {
      "op": "MSTORE"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3026": {
      "op": "DUP3"
    },
    "3027": {
      "op": "ADD"
    },
    "3028": {
      "op": "MSTORE"
    },
    "3029": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3064": {
      "op": "DUP3"
    },
    "3065": {
      "op": "ADD"
    },
    "3066": {
      "op": "MSTORE"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3069": {
      "op": "ADD"
    },
    "3070": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x346"
    },
    "3073": {
      "op": "JUMP"
    },
    "3074": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3075": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3077": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3079": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3080": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4362,
        4372
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3081": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4338,
        4359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3083": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4399,
        4441
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC13"
    },
    "3086": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4362,
        4372
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3087": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x321"
    },
    "3090": {
      "fn": "AniwarVestingV2.releaseOne",
      "jump": "i",
      "offset": [
        4399,
        4441
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3091": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4399,
        4441
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3098": {
      "op": "SHL"
    },
    "3099": {
      "op": "SUB"
    },
    "3100": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3101": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "AND",
      "path": "8"
    },
    "3102": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4451,
        4482
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3104": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3105": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3106": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3107": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4498
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3109": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3111": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3112": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3114": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3115": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3116": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4544,
        4569
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 30,
      "value": "0x4"
    },
    "3118": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4544,
        4569
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3119": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4544,
        4569
      ],
      "op": "ADD",
      "path": "8"
    },
    "3120": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4544,
        4569
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3121": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4382,
        4441
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3122": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4382,
        4441
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3123": {
      "op": "POP"
    },
    "3124": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4485,
        4513
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3125": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4544,
        4569
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "3127": {
      "branch": 59,
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4544,
        4569
      ],
      "op": "AND",
      "path": "8"
    },
    "3128": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCA9"
    },
    "3131": {
      "branch": 59,
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3132": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3134": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3141": {
      "op": "SHL"
    },
    "3142": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3143": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3146": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3148": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3149": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "ADD",
      "path": "8"
    },
    "3150": {
      "op": "MSTORE"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3155": {
      "op": "DUP3"
    },
    "3156": {
      "op": "ADD"
    },
    "3157": {
      "op": "MSTORE"
    },
    "3158": {
      "op": "PUSH32",
      "value": "0x546F6B656E56657374696E673A206F6E6C792062656E65666963696172792063"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3193": {
      "op": "DUP3"
    },
    "3194": {
      "op": "ADD"
    },
    "3195": {
      "op": "MSTORE"
    },
    "3196": {
      "op": "PUSH32",
      "value": "0x616E2072656C656173652076657374656420746F6B656E730000000000000000"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3231": {
      "op": "DUP3"
    },
    "3232": {
      "op": "ADD"
    },
    "3233": {
      "op": "MSTORE"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3236": {
      "op": "ADD"
    },
    "3237": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "3240": {
      "op": "JUMP"
    },
    "3241": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4523,
        4651
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3242": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4678,
        4679
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 31,
      "value": "0x0"
    },
    "3244": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4669,
        4675
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3245": {
      "branch": 60,
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4669,
        4679
      ],
      "op": "GT",
      "path": "8"
    },
    "3246": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD04"
    },
    "3249": {
      "branch": 60,
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3250": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3252": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3259": {
      "op": "SHL"
    },
    "3260": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3261": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3264": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3266": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3267": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "ADD",
      "path": "8"
    },
    "3268": {
      "op": "MSTORE"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3273": {
      "op": "DUP3"
    },
    "3274": {
      "op": "ADD"
    },
    "3275": {
      "op": "MSTORE"
    },
    "3276": {
      "op": "PUSH32",
      "value": "0x416D6F756E742063616E2062652052656C6561736564206D757374206265203E"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3311": {
      "op": "DUP3"
    },
    "3312": {
      "op": "ADD"
    },
    "3313": {
      "op": "MSTORE"
    },
    "3314": {
      "op": "PUSH2",
      "value": "0x203"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xF4"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3322": {
      "op": "DUP3"
    },
    "3323": {
      "op": "ADD"
    },
    "3324": {
      "op": "MSTORE"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3327": {
      "op": "ADD"
    },
    "3328": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x346"
    },
    "3331": {
      "op": "JUMP"
    },
    "3332": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4661,
        4718
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3333": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4773,
        4786
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3334": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4797,
        4844
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 32,
      "value": "0xD39"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "SUB"
    },
    "3345": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4797,
        4803
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "3378": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4797,
        4816
      ],
      "op": "AND",
      "path": "8"
    },
    "3379": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4773,
        4786
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3380": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4837,
        4843
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3381": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4797,
        4816
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE11"
    },
    "3384": {
      "fn": "AniwarVestingV2.releaseOne",
      "jump": "i",
      "offset": [
        4797,
        4844
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3385": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4797,
        4844
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3386": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 33,
      "value": "0x40"
    },
    "3388": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3389": {
      "op": "DUP4"
    },
    "3390": {
      "op": "DUP2"
    },
    "3391": {
      "op": "MSTORE"
    },
    "3392": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xFB81F9B30D73D830C3544B34D827C08142579EE75710B490BAB0B3995468C565"
    },
    "3425": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3428": {
      "op": "ADD"
    },
    "3429": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3431": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3432": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3433": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3434": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "SUB",
      "path": "8"
    },
    "3435": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3436": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        4859,
        4875
      ],
      "op": "LOG1",
      "path": "8"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3441": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3442": {
      "fn": "AniwarVestingV2.releaseOne",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3443": {
      "op": "POP"
    },
    "3444": {
      "op": "POP"
    },
    "3445": {
      "fn": "AniwarVestingV2.releaseOne",
      "jump": "o",
      "offset": [
        4257,
        4882
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3447": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3449": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3456": {
      "op": "SHL"
    },
    "3457": {
      "op": "SUB"
    },
    "3458": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3459": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3460": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3461": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA0"
    },
    "3464": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3465": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3467": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3474": {
      "op": "SHL"
    },
    "3475": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3476": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3477": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3479": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3480": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "3483": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3484": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125E"
    },
    "3487": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3488": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3495": {
      "op": "SHL"
    },
    "3496": {
      "op": "SUB"
    },
    "3497": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 34
    },
    "3498": {
      "branch": 64,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "3499": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE05"
    },
    "3502": {
      "branch": 64,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3503": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3506": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3512": {
      "op": "SHL"
    },
    "3513": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3514": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3517": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3519": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3520": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "3521": {
      "op": "MSTORE"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3526": {
      "op": "DUP3"
    },
    "3527": {
      "op": "ADD"
    },
    "3528": {
      "op": "MSTORE"
    },
    "3529": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3564": {
      "op": "DUP3"
    },
    "3565": {
      "op": "ADD"
    },
    "3566": {
      "op": "MSTORE"
    },
    "3567": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3576": {
      "op": "SHL"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3579": {
      "op": "DUP3"
    },
    "3580": {
      "op": "ADD"
    },
    "3581": {
      "op": "MSTORE"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3584": {
      "op": "ADD"
    },
    "3585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "3588": {
      "op": "JUMP"
    },
    "3589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0xE0E"
    },
    "3593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE68"
    },
    "3597": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "3600": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3601": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3602": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 36,
      "value": "0x40"
    },
    "3604": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3605": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3612": {
      "op": "SHL"
    },
    "3613": {
      "op": "SUB"
    },
    "3614": {
      "op": "DUP5"
    },
    "3615": {
      "op": "AND"
    },
    "3616": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3618": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3619": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "3"
    },
    "3620": {
      "op": "MSTORE"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3623": {
      "op": "DUP1"
    },
    "3624": {
      "op": "DUP3"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "DUP5"
    },
    "3627": {
      "op": "SWAP1"
    },
    "3628": {
      "op": "MSTORE"
    },
    "3629": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3630": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3631": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3632": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3633": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "3"
    },
    "3634": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3635": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3636": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "3"
    },
    "3637": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3638": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3641": {
      "op": "SWAP1"
    },
    "3642": {
      "op": "SWAP2"
    },
    "3643": {
      "op": "ADD"
    },
    "3644": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3645": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3646": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3647": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3649": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3650": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "3"
    },
    "3651": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3652": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3659": {
      "op": "SHL"
    },
    "3660": {
      "op": "SUB"
    },
    "3661": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "3"
    },
    "3662": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "3"
    },
    "3671": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3672": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3673": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE63"
    },
    "3676": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3677": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3678": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3679": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEB8"
    },
    "3682": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3683": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3684": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "3"
    },
    "3685": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "3"
    },
    "3686": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "3"
    },
    "3687": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        839
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3688": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3689": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3691": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3692": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3699": {
      "op": "SHL"
    },
    "3700": {
      "op": "SUB"
    },
    "3701": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 37
    },
    "3702": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3703": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3710": {
      "op": "SHL"
    },
    "3711": {
      "op": "SUB"
    },
    "3712": {
      "op": "NOT"
    },
    "3713": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3714": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3715": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3716": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "3717": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3718": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3719": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x40"
    },
    "3721": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3722": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3723": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3724": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3725": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "3726": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3727": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3728": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3729": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3762": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3763": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3764": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3765": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3766": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3767": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3768": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3769": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3771": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF0D"
    },
    "3774": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3775": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3777": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3778": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3779": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3781": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "3"
    },
    "3782": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3784": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3785": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3786": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3788": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3789": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3790": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3792": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "3"
    },
    "3793": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3827": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3828": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "3"
    },
    "3829": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3836": {
      "op": "SHL"
    },
    "3837": {
      "op": "SUB"
    },
    "3838": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "3"
    },
    "3839": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8A"
    },
    "3842": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3843": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3844": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3845": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3846": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3851": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "3"
    },
    "3852": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3853": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3854": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3855": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3856": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3857": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3858": {
      "op": "POP"
    },
    "3859": {
      "branch": 66,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3860": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE63"
    },
    "3863": {
      "branch": 66,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 39
    },
    "3865": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3868": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "3"
    },
    "3869": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3871": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3872": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "3"
    },
    "3873": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3874": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF2B"
    },
    "3877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3879": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C4"
    },
    "3882": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3883": {
      "branch": 67,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE63"
    },
    "3887": {
      "branch": 67,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3888": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3890": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3897": {
      "op": "SHL"
    },
    "3898": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3899": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3904": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3905": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "3"
    },
    "3906": {
      "op": "MSTORE"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3911": {
      "op": "DUP3"
    },
    "3912": {
      "op": "ADD"
    },
    "3913": {
      "op": "MSTORE"
    },
    "3914": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3949": {
      "op": "DUP3"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "op": "MSTORE"
    },
    "3952": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3965": {
      "op": "SHL"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3968": {
      "op": "DUP3"
    },
    "3969": {
      "op": "ADD"
    },
    "3970": {
      "op": "MSTORE"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x346"
    },
    "3977": {
      "op": "JUMP"
    },
    "3978": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3979": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3981": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 40,
      "value": "0xF99"
    },
    "3984": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3985": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3986": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3988": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3989": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFA3"
    },
    "3992": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3993": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3994": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3995": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "4"
    },
    "3996": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3997": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3998": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3999": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "4"
    },
    "4000": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "4"
    },
    "4001": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "4"
    },
    "4002": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 41
    },
    "4007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "4008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "4"
    },
    "4009": {
      "branch": 61,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4010": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1004"
    },
    "4013": {
      "branch": 61,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4014": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4016": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4023": {
      "op": "SHL"
    },
    "4024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4030": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "4"
    },
    "4032": {
      "op": "MSTORE"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4037": {
      "op": "DUP3"
    },
    "4038": {
      "op": "ADD"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4075": {
      "op": "DUP3"
    },
    "4076": {
      "op": "ADD"
    },
    "4077": {
      "op": "MSTORE"
    },
    "4078": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4087": {
      "op": "SHL"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4090": {
      "op": "DUP3"
    },
    "4091": {
      "op": "ADD"
    },
    "4092": {
      "op": "MSTORE"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4095": {
      "op": "ADD"
    },
    "4096": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x346"
    },
    "4099": {
      "op": "JUMP"
    },
    "4100": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4101": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4102": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "4103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 42,
      "value": "0x1052"
    },
    "4106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4107": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4110": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4116": {
      "op": "SHL"
    },
    "4117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4124": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "4"
    },
    "4125": {
      "op": "MSTORE"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4130": {
      "op": "DUP3"
    },
    "4131": {
      "op": "ADD"
    },
    "4132": {
      "op": "MSTORE"
    },
    "4133": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4168": {
      "op": "DUP3"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "MSTORE"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4173": {
      "op": "ADD"
    },
    "4174": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x346"
    },
    "4177": {
      "op": "JUMP"
    },
    "4178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4179": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4181": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4182": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4189": {
      "op": "SHL"
    },
    "4190": {
      "op": "SUB"
    },
    "4191": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "4"
    },
    "4192": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "4"
    },
    "4194": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4196": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x106E"
    },
    "4200": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4201": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4202": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1316"
    },
    "4205": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4207": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4209": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4211": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4213": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "4"
    },
    "4215": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "4"
    },
    "4218": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "4"
    },
    "4219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "4"
    },
    "4220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4221": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4223": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4224": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4225": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4226": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4228": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4229": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "4"
    },
    "4230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10AB"
    },
    "4233": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4236": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4237": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4241": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "4"
    },
    "4242": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3F"
    },
    "4244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4246": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "4"
    },
    "4247": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4248": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4249": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "4263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10B0"
    },
    "4266": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4270": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4272": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 43,
      "value": "0x10C0"
    },
    "4281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10CB"
    },
    "4287": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4288": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "4290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "4291": {
      "op": "POP"
    },
    "4292": {
      "op": "POP"
    },
    "4293": {
      "op": "POP"
    },
    "4294": {
      "op": "POP"
    },
    "4295": {
      "op": "POP"
    },
    "4296": {
      "op": "POP"
    },
    "4297": {
      "op": "POP"
    },
    "4298": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4299": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4300": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4302": {
      "branch": 62,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4303": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4304": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10DA"
    },
    "4307": {
      "branch": 62,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4308": {
      "op": "POP"
    },
    "4309": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 44
    },
    "4310": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF9C"
    },
    "4313": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4314": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4315": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4316": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4317": {
      "branch": 63,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4318": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10EA"
    },
    "4321": {
      "branch": 63,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4322": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4323": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4324": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4325": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4326": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4328": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "4"
    },
    "4329": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4330": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4331": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 45
    },
    "4332": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4334": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4341": {
      "op": "SHL"
    },
    "4342": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4343": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4344": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4346": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "4"
    },
    "4347": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x346"
    },
    "4350": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4351": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4352": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1332"
    },
    "4355": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4356": {
      "op": "JUMPDEST"
    },
    "4357": {
      "op": "DUP1"
    },
    "4358": {
      "op": "CALLDATALOAD"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4365": {
      "op": "SHL"
    },
    "4366": {
      "op": "SUB"
    },
    "4367": {
      "op": "DUP2"
    },
    "4368": {
      "op": "AND"
    },
    "4369": {
      "op": "DUP2"
    },
    "4370": {
      "op": "EQ"
    },
    "4371": {
      "op": "PUSH2",
      "value": "0x513"
    },
    "4374": {
      "op": "JUMPI"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4377": {
      "op": "DUP1"
    },
    "4378": {
      "op": "REVERT"
    },
    "4379": {
      "op": "JUMPDEST"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4384": {
      "op": "DUP3"
    },
    "4385": {
      "op": "DUP5"
    },
    "4386": {
      "op": "SUB"
    },
    "4387": {
      "op": "SLT"
    },
    "4388": {
      "op": "ISZERO"
    },
    "4389": {
      "op": "PUSH2",
      "value": "0x112D"
    },
    "4392": {
      "op": "JUMPI"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4395": {
      "op": "DUP1"
    },
    "4396": {
      "op": "REVERT"
    },
    "4397": {
      "op": "JUMPDEST"
    },
    "4398": {
      "op": "PUSH2",
      "value": "0xF9C"
    },
    "4401": {
      "op": "DUP3"
    },
    "4402": {
      "op": "PUSH2",
      "value": "0x1104"
    },
    "4405": {
      "jump": "i",
      "op": "JUMP"
    },
    "4406": {
      "op": "JUMPDEST"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4411": {
      "op": "DUP3"
    },
    "4412": {
      "op": "DUP5"
    },
    "4413": {
      "op": "SUB"
    },
    "4414": {
      "op": "SLT"
    },
    "4415": {
      "op": "ISZERO"
    },
    "4416": {
      "op": "PUSH2",
      "value": "0x1148"
    },
    "4419": {
      "op": "JUMPI"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4422": {
      "op": "DUP1"
    },
    "4423": {
      "op": "REVERT"
    },
    "4424": {
      "op": "JUMPDEST"
    },
    "4425": {
      "op": "POP"
    },
    "4426": {
      "op": "CALLDATALOAD"
    },
    "4427": {
      "op": "SWAP2"
    },
    "4428": {
      "op": "SWAP1"
    },
    "4429": {
      "op": "POP"
    },
    "4430": {
      "jump": "o",
      "op": "JUMP"
    },
    "4431": {
      "op": "JUMPDEST"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4434": {
      "op": "DUP1"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4437": {
      "op": "DUP1"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4440": {
      "op": "DUP6"
    },
    "4441": {
      "op": "DUP8"
    },
    "4442": {
      "op": "SUB"
    },
    "4443": {
      "op": "SLT"
    },
    "4444": {
      "op": "ISZERO"
    },
    "4445": {
      "op": "PUSH2",
      "value": "0x1165"
    },
    "4448": {
      "op": "JUMPI"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4451": {
      "op": "DUP1"
    },
    "4452": {
      "op": "REVERT"
    },
    "4453": {
      "op": "JUMPDEST"
    },
    "4454": {
      "op": "PUSH2",
      "value": "0x116E"
    },
    "4457": {
      "op": "DUP6"
    },
    "4458": {
      "op": "PUSH2",
      "value": "0x1104"
    },
    "4461": {
      "jump": "i",
      "op": "JUMP"
    },
    "4462": {
      "op": "JUMPDEST"
    },
    "4463": {
      "op": "SWAP7"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4466": {
      "op": "DUP7"
    },
    "4467": {
      "op": "ADD"
    },
    "4468": {
      "op": "CALLDATALOAD"
    },
    "4469": {
      "op": "SWAP7"
    },
    "4470": {
      "op": "POP"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4473": {
      "op": "DUP7"
    },
    "4474": {
      "op": "ADD"
    },
    "4475": {
      "op": "CALLDATALOAD"
    },
    "4476": {
      "op": "SWAP6"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4479": {
      "op": "ADD"
    },
    "4480": {
      "op": "CALLDATALOAD"
    },
    "4481": {
      "op": "SWAP5"
    },
    "4482": {
      "op": "POP"
    },
    "4483": {
      "op": "SWAP3"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "op": "POP"
    },
    "4486": {
      "op": "POP"
    },
    "4487": {
      "jump": "o",
      "op": "JUMP"
    },
    "4488": {
      "op": "JUMPDEST"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4493": {
      "op": "DUP3"
    },
    "4494": {
      "op": "DUP5"
    },
    "4495": {
      "op": "SUB"
    },
    "4496": {
      "op": "SLT"
    },
    "4497": {
      "op": "ISZERO"
    },
    "4498": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4501": {
      "op": "JUMPI"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4504": {
      "op": "DUP1"
    },
    "4505": {
      "op": "REVERT"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "op": "MLOAD"
    },
    "4509": {
      "op": "SWAP2"
    },
    "4510": {
      "op": "SWAP1"
    },
    "4511": {
      "op": "POP"
    },
    "4512": {
      "jump": "o",
      "op": "JUMP"
    },
    "4513": {
      "op": "JUMPDEST"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4516": {
      "op": "DUP1"
    },
    "4517": {
      "op": "DUP3"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4521": {
      "op": "SWAP1"
    },
    "4522": {
      "op": "DUP3"
    },
    "4523": {
      "op": "ADD"
    },
    "4524": {
      "op": "MSTORE"
    },
    "4525": {
      "op": "PUSH32",
      "value": "0x56657374696E67206973206E6F74205374617274656420596574210000000000"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4560": {
      "op": "DUP3"
    },
    "4561": {
      "op": "ADD"
    },
    "4562": {
      "op": "MSTORE"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "SWAP1"
    },
    "4567": {
      "jump": "o",
      "op": "JUMP"
    },
    "4568": {
      "op": "JUMPDEST"
    },
    "4569": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4576": {
      "op": "SHL"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "MSTORE"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4584": {
      "op": "MSTORE"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4589": {
      "op": "REVERT"
    },
    "4590": {
      "op": "JUMPDEST"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4593": {
      "op": "DUP3"
    },
    "4594": {
      "op": "DUP3"
    },
    "4595": {
      "op": "LT"
    },
    "4596": {
      "op": "ISZERO"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x1200"
    },
    "4600": {
      "op": "JUMPI"
    },
    "4601": {
      "op": "PUSH2",
      "value": "0x1200"
    },
    "4604": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "4607": {
      "jump": "i",
      "op": "JUMP"
    },
    "4608": {
      "op": "JUMPDEST"
    },
    "4609": {
      "op": "POP"
    },
    "4610": {
      "op": "SUB"
    },
    "4611": {
      "op": "SWAP1"
    },
    "4612": {
      "jump": "o",
      "op": "JUMP"
    },
    "4613": {
      "op": "JUMPDEST"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4616": {
      "op": "DUP3"
    },
    "4617": {
      "op": "PUSH2",
      "value": "0x1222"
    },
    "4620": {
      "op": "JUMPI"
    },
    "4621": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4628": {
      "op": "SHL"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4631": {
      "op": "MSTORE"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4636": {
      "op": "MSTORE"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4641": {
      "op": "REVERT"
    },
    "4642": {
      "op": "JUMPDEST"
    },
    "4643": {
      "op": "POP"
    },
    "4644": {
      "op": "DIV"
    },
    "4645": {
      "op": "SWAP1"
    },
    "4646": {
      "jump": "o",
      "op": "JUMP"
    },
    "4647": {
      "op": "JUMPDEST"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4650": {
      "op": "DUP2"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4653": {
      "op": "NOT"
    },
    "4654": {
      "op": "DIV"
    },
    "4655": {
      "op": "DUP4"
    },
    "4656": {
      "op": "GT"
    },
    "4657": {
      "op": "DUP3"
    },
    "4658": {
      "op": "ISZERO"
    },
    "4659": {
      "op": "ISZERO"
    },
    "4660": {
      "op": "AND"
    },
    "4661": {
      "op": "ISZERO"
    },
    "4662": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "4665": {
      "op": "JUMPI"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "4669": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "4672": {
      "jump": "i",
      "op": "JUMP"
    },
    "4673": {
      "op": "JUMPDEST"
    },
    "4674": {
      "op": "POP"
    },
    "4675": {
      "op": "MUL"
    },
    "4676": {
      "op": "SWAP1"
    },
    "4677": {
      "jump": "o",
      "op": "JUMP"
    },
    "4678": {
      "op": "JUMPDEST"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4681": {
      "op": "DUP3"
    },
    "4682": {
      "op": "NOT"
    },
    "4683": {
      "op": "DUP3"
    },
    "4684": {
      "op": "GT"
    },
    "4685": {
      "op": "ISZERO"
    },
    "4686": {
      "op": "PUSH2",
      "value": "0x1259"
    },
    "4689": {
      "op": "JUMPI"
    },
    "4690": {
      "op": "PUSH2",
      "value": "0x1259"
    },
    "4693": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "4696": {
      "jump": "i",
      "op": "JUMP"
    },
    "4697": {
      "op": "JUMPDEST"
    },
    "4698": {
      "op": "POP"
    },
    "4699": {
      "op": "ADD"
    },
    "4700": {
      "op": "SWAP1"
    },
    "4701": {
      "jump": "o",
      "op": "JUMP"
    },
    "4702": {
      "op": "JUMPDEST"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4705": {
      "op": "DUP1"
    },
    "4706": {
      "op": "DUP3"
    },
    "4707": {
      "op": "MSTORE"
    },
    "4708": {
      "op": "DUP2"
    },
    "4709": {
      "op": "DUP2"
    },
    "4710": {
      "op": "ADD"
    },
    "4711": {
      "op": "MSTORE"
    },
    "4712": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4747": {
      "op": "DUP3"
    },
    "4748": {
      "op": "ADD"
    },
    "4749": {
      "op": "MSTORE"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4752": {
      "op": "ADD"
    },
    "4753": {
      "op": "SWAP1"
    },
    "4754": {
      "jump": "o",
      "op": "JUMP"
    },
    "4755": {
      "op": "JUMPDEST"
    },
    "4756": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4763": {
      "op": "SHL"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4766": {
      "op": "MSTORE"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4771": {
      "op": "MSTORE"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4776": {
      "op": "REVERT"
    },
    "4777": {
      "op": "JUMPDEST"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4782": {
      "op": "NOT"
    },
    "4783": {
      "op": "DUP3"
    },
    "4784": {
      "op": "EQ"
    },
    "4785": {
      "op": "ISZERO"
    },
    "4786": {
      "op": "PUSH2",
      "value": "0x12BD"
    },
    "4789": {
      "op": "JUMPI"
    },
    "4790": {
      "op": "PUSH2",
      "value": "0x12BD"
    },
    "4793": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "4796": {
      "jump": "i",
      "op": "JUMP"
    },
    "4797": {
      "op": "JUMPDEST"
    },
    "4798": {
      "op": "POP"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4801": {
      "op": "ADD"
    },
    "4802": {
      "op": "SWAP1"
    },
    "4803": {
      "jump": "o",
      "op": "JUMP"
    },
    "4804": {
      "op": "JUMPDEST"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4809": {
      "op": "DUP3"
    },
    "4810": {
      "op": "DUP5"
    },
    "4811": {
      "op": "SUB"
    },
    "4812": {
      "op": "SLT"
    },
    "4813": {
      "op": "ISZERO"
    },
    "4814": {
      "op": "PUSH2",
      "value": "0x12D6"
    },
    "4817": {
      "op": "JUMPI"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4820": {
      "op": "DUP1"
    },
    "4821": {
      "op": "REVERT"
    },
    "4822": {
      "op": "JUMPDEST"
    },
    "4823": {
      "op": "DUP2"
    },
    "4824": {
      "op": "MLOAD"
    },
    "4825": {
      "op": "DUP1"
    },
    "4826": {
      "op": "ISZERO"
    },
    "4827": {
      "op": "ISZERO"
    },
    "4828": {
      "op": "DUP2"
    },
    "4829": {
      "op": "EQ"
    },
    "4830": {
      "op": "PUSH2",
      "value": "0xF9C"
    },
    "4833": {
      "op": "JUMPI"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4836": {
      "op": "DUP1"
    },
    "4837": {
      "op": "REVERT"
    },
    "4838": {
      "op": "JUMPDEST"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4841": {
      "op": "JUMPDEST"
    },
    "4842": {
      "op": "DUP4"
    },
    "4843": {
      "op": "DUP2"
    },
    "4844": {
      "op": "LT"
    },
    "4845": {
      "op": "ISZERO"
    },
    "4846": {
      "op": "PUSH2",
      "value": "0x1301"
    },
    "4849": {
      "op": "JUMPI"
    },
    "4850": {
      "op": "DUP2"
    },
    "4851": {
      "op": "DUP2"
    },
    "4852": {
      "op": "ADD"
    },
    "4853": {
      "op": "MLOAD"
    },
    "4854": {
      "op": "DUP4"
    },
    "4855": {
      "op": "DUP3"
    },
    "4856": {
      "op": "ADD"
    },
    "4857": {
      "op": "MSTORE"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4860": {
      "op": "ADD"
    },
    "4861": {
      "op": "PUSH2",
      "value": "0x12E9"
    },
    "4864": {
      "op": "JUMP"
    },
    "4865": {
      "op": "JUMPDEST"
    },
    "4866": {
      "op": "DUP4"
    },
    "4867": {
      "op": "DUP2"
    },
    "4868": {
      "op": "GT"
    },
    "4869": {
      "op": "ISZERO"
    },
    "4870": {
      "op": "PUSH2",
      "value": "0x1310"
    },
    "4873": {
      "op": "JUMPI"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4876": {
      "op": "DUP5"
    },
    "4877": {
      "op": "DUP5"
    },
    "4878": {
      "op": "ADD"
    },
    "4879": {
      "op": "MSTORE"
    },
    "4880": {
      "op": "JUMPDEST"
    },
    "4881": {
      "op": "POP"
    },
    "4882": {
      "op": "POP"
    },
    "4883": {
      "op": "POP"
    },
    "4884": {
      "op": "POP"
    },
    "4885": {
      "jump": "o",
      "op": "JUMP"
    },
    "4886": {
      "op": "JUMPDEST"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4889": {
      "op": "DUP3"
    },
    "4890": {
      "op": "MLOAD"
    },
    "4891": {
      "op": "PUSH2",
      "value": "0x1328"
    },
    "4894": {
      "op": "DUP2"
    },
    "4895": {
      "op": "DUP5"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4898": {
      "op": "DUP8"
    },
    "4899": {
      "op": "ADD"
    },
    "4900": {
      "op": "PUSH2",
      "value": "0x12E6"
    },
    "4903": {
      "jump": "i",
      "op": "JUMP"
    },
    "4904": {
      "op": "JUMPDEST"
    },
    "4905": {
      "op": "SWAP2"
    },
    "4906": {
      "op": "SWAP1"
    },
    "4907": {
      "op": "SWAP2"
    },
    "4908": {
      "op": "ADD"
    },
    "4909": {
      "op": "SWAP3"
    },
    "4910": {
      "op": "SWAP2"
    },
    "4911": {
      "op": "POP"
    },
    "4912": {
      "op": "POP"
    },
    "4913": {
      "jump": "o",
      "op": "JUMP"
    },
    "4914": {
      "op": "JUMPDEST"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4917": {
      "op": "DUP2"
    },
    "4918": {
      "op": "MSTORE"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4921": {
      "op": "DUP3"
    },
    "4922": {
      "op": "MLOAD"
    },
    "4923": {
      "op": "DUP1"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4926": {
      "op": "DUP5"
    },
    "4927": {
      "op": "ADD"
    },
    "4928": {
      "op": "MSTORE"
    },
    "4929": {
      "op": "PUSH2",
      "value": "0x1351"
    },
    "4932": {
      "op": "DUP2"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4935": {
      "op": "DUP6"
    },
    "4936": {
      "op": "ADD"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4939": {
      "op": "DUP8"
    },
    "4940": {
      "op": "ADD"
    },
    "4941": {
      "op": "PUSH2",
      "value": "0x12E6"
    },
    "4944": {
      "jump": "i",
      "op": "JUMP"
    },
    "4945": {
      "op": "JUMPDEST"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4948": {
      "op": "ADD"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4951": {
      "op": "NOT"
    },
    "4952": {
      "op": "AND"
    },
    "4953": {
      "op": "SWAP2"
    },
    "4954": {
      "op": "SWAP1"
    },
    "4955": {
      "op": "SWAP2"
    },
    "4956": {
      "op": "ADD"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4959": {
      "op": "ADD"
    },
    "4960": {
      "op": "SWAP3"
    },
    "4961": {
      "op": "SWAP2"
    },
    "4962": {
      "op": "POP"
    },
    "4963": {
      "op": "POP"
    },
    "4964": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "16ddc9bd480c93b7e4af34bfad4214b88988a970",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title TokenVesting\n */\ncontract AniwarVestingV2 is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    // address of the ERC20 token\n    IERC20 private immutable _token;\n\n    struct Beneficiary {\n        uint256 totalAmount;\n        uint256 TGEAmount;\n        uint256 cliff;\n        uint256 totalAmountHasBeenWithdrawn;\n        bool isInitialized;\n    }\n\n    bool private _isStarted;\n    uint256 private _startedTime;\n    uint256 private immutable _splitDuration;\n    uint256 private immutable _splitCount;\n    uint256 private _vestingSchedulesInitializedAmount;\n    uint256 private _vestingSchedulesInitializedAmountLeft;\n\n    address[] private _beneficiariesAddress;\n    mapping(address => Beneficiary) public beneficiaries;\n\n    event Released(uint256 amount);\n    event Begin();\n\n    modifier onlyIfVestingScheduleStarted() {\n        require(_isStarted, \"Vesting is not Started Yet!\");\n        _;\n    }\n    modifier onlyIfVestingScheduleNotStarted() {\n        require(!_isStarted, \"Vesting is Started!\");\n        _;\n    }\n\n    constructor(\n        address token_,\n        uint256 splitDuration_,\n        uint256 splitCount_,\n        uint256 initializedAmount_\n    ) {\n        require(token_ != address(0x0), \"Token address wrong!\");\n        _token = IERC20(token_);\n        _splitDuration = splitDuration_;\n        require(splitCount_ > 0, \"Split counter must be > 0\");\n        _splitCount = splitCount_;\n        _vestingSchedulesInitializedAmount = initializedAmount_;\n        _vestingSchedulesInitializedAmountLeft = initializedAmount_;\n    }\n\n    // _TGERatio is a First release when schedule started: _TGERatio = %\n    function addBeneficiary(\n        address _beneficiary,\n        uint256 _cliff,\n        uint256 _amount,\n        uint256 _TGERatio\n    ) public onlyOwner onlyIfVestingScheduleNotStarted {\n        require(\n            _amount <= _vestingSchedulesInitializedAmountLeft,\n            \"TokenVesting: cannot add beneficiary  because not sufficient tokens\"\n        );\n        require(_amount > 0, \"TokenVesting: amount must be > 0\");\n        require(_cliff < _splitCount, \"cliff must less than sum of split\");\n        require(_TGERatio < 100, \"Rate must less than 100%\");\n        Beneficiary storage beneficiary = beneficiaries[_beneficiary];\n        if (!beneficiary.isInitialized) {\n            beneficiary.isInitialized = true;\n            _beneficiariesAddress.push(_beneficiary);\n        }\n        beneficiary.cliff = _cliff;\n        beneficiary.totalAmount += _amount;\n        beneficiary.TGEAmount += (_amount * _TGERatio) / 100;\n        _vestingSchedulesInitializedAmountLeft -= _amount;\n    }\n\n    function startSchedule(uint256 _time)\n        public\n        onlyOwner\n        onlyIfVestingScheduleNotStarted\n    {\n        require(\n            _token.balanceOf(address(this)) >=\n                _vestingSchedulesInitializedAmount,\n            \"Amount exceeds balance and Init\"\n        );\n        _isStarted = true;\n        _startedTime = _time;\n        emit Begin();\n    }\n\n    function releaseAll()\n        public\n        onlyOwner\n        onlyIfVestingScheduleStarted\n        nonReentrant\n    {\n        for (\n            uint256 beneficiaryIndex = 0;\n            beneficiaryIndex < _beneficiariesAddress.length;\n            beneficiaryIndex++\n        ) {\n            address beneficiaryAddress = _beneficiariesAddress[\n                beneficiaryIndex\n            ];\n            Beneficiary storage beneficiary = beneficiaries[beneficiaryAddress];\n            uint256 amount = calculateWithdrawableAmount(beneficiaryAddress);\n            if (beneficiary.isInitialized && amount > 0) {\n                beneficiary.totalAmountHasBeenWithdrawn += amount;\n                address payable beneficiaryPayable = payable(\n                    beneficiaryAddress\n                );\n                _token.safeTransfer(beneficiaryPayable, amount);\n                emit Released(amount);\n            }\n        }\n    }\n\n    function releaseOne() public onlyIfVestingScheduleStarted nonReentrant {\n        address senderAddress = msg.sender;\n        uint256 amount = calculateWithdrawableAmount(senderAddress);\n        Beneficiary storage beneficiary = beneficiaries[senderAddress];\n        require(\n            beneficiary.isInitialized,\n            \"TokenVesting: only beneficiary can release vested tokens\"\n        );\n        require(amount > 0, \"Amount can be Released must be > 0\");\n        address payable beneficiaryPayable = payable(senderAddress);\n        _token.safeTransfer(beneficiaryPayable, amount);\n        emit Released(amount);\n    }\n\n    function calculateWithdrawableAmount(address _beneficiary)\n        public\n        view\n        onlyIfVestingScheduleStarted\n        returns (uint256)\n    {\n        Beneficiary memory beneficiary = beneficiaries[_beneficiary];\n        uint256 currentTime = getCurrentTime();\n        if (!beneficiary.isInitialized || currentTime < _startedTime) {\n            return 0;\n        }\n        uint256 currentSplit = (currentTime - _startedTime) / _splitDuration;\n        if (currentSplit >= _splitCount) {\n            currentSplit = _splitCount;\n        }\n        if (currentSplit == 0) {\n            currentSplit = 1;\n        }\n        if (currentSplit < beneficiary.cliff) {\n            return 0;\n        }\n        uint256 singleSplitAmount = (beneficiary.totalAmount -\n            beneficiary.TGEAmount) / (_splitCount - 1 - beneficiary.cliff);\n        return\n            singleSplitAmount *\n            (currentSplit - 1 - beneficiary.cliff) +\n            beneficiary.TGEAmount -\n            beneficiary.totalAmountHasBeenWithdrawn;\n    }\n\n    function getContractInfo()\n        public\n        view\n        returns (\n            bool,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        return (\n            _isStarted,\n            _startedTime,\n            _splitDuration,\n            _splitCount,\n            _vestingSchedulesInitializedAmount,\n            _vestingSchedulesInitializedAmountLeft\n        );\n    }\n\n    function getBalance() public view returns (uint256) {\n        return _token.balanceOf(address(this));\n    }\n\n    function getCurrentTime() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    function getToken() public view returns (address) {\n        return address(_token);\n    }\n}\n",
  "sourceMap": "328:6358:8:-:0;;;1347:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:5;867:9:0;:23::i;:::-;1637:1:1;1742:22;;-1:-1:-1;;;;;1504:22:8;;1496:55;;;;-1:-1:-1;;;1496:55:8;;695:2:9;1496:55:8;;;677:21:9;734:2;714:18;;;707:30;773:22;753:18;;;746:50;813:18;;1496:55:8;;;;;;;;;-1:-1:-1;;;;;1561:23:8;;;;1594:31;;;;1643:15;1635:53;;;;-1:-1:-1;;;1635:53:8;;1044:2:9;1635:53:8;;;1026:21:9;1083:2;1063:18;;;1056:30;1122:27;1102:18;;;1095:55;1167:18;;1635:53:8;842:349:9;1635:53:8;1698:25;;;;;1733:34;:55;;;1798:38;:59;-1:-1:-1;328:6358:8;;-1:-1:-1;328:6358:8;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:474:9:-;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;231:16;;-1:-1:-1;;;;;276:31:9;;266:42;;256:70;;322:1;319;312:12;256:70;390:2;375:18;;369:25;434:2;419:18;;413:25;478:2;463:18;;;457:25;345:5;;369:25;;-1:-1:-1;457:25:9;;-1:-1:-1;14:474:9;-1:-1:-1;;;14:474:9:o;842:349::-;328:6358:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/AniwarVestingV2.sol",
  "type": "contract"
}