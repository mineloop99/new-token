{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "splitDuration_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "splitCounter_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Begin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "calculateWithdrawable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "createVestingSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStarted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setInitTotalAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startAllSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vestingSchedules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalAmountReleased",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmountHasBeenWithdrawn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawContractBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
    "2": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "3": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "4": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "5": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "7": "contracts/AniwarVesting.sol"
  },
  "ast": {
    "absolutePath": "contracts/AniwarVesting.sol",
    "exportedSymbols": {
      "Address": [
        2453
      ],
      "AniwarVesting": [
        1143
      ],
      "Context": [
        2156
      ],
      "IERC20": [
        1910
      ],
      "Ownable": [
        1792
      ],
      "ReentrancyGuard": [
        1832
      ],
      "SafeERC20": [
        2134
      ]
    },
    "id": 1144,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 587,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 588,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1144,
        "sourceUnit": 1911,
        "src": "57:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 589,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1144,
        "sourceUnit": 2135,
        "src": "114:65:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 590,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1144,
        "sourceUnit": 1833,
        "src": "180:62:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 591,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1144,
        "sourceUnit": 1793,
        "src": "243:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 593,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1792,
              "src": "354:7:7"
            },
            "id": 594,
            "nodeType": "InheritanceSpecifier",
            "src": "354:7:7"
          },
          {
            "baseName": {
              "id": 595,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1832,
              "src": "363:15:7"
            },
            "id": 596,
            "nodeType": "InheritanceSpecifier",
            "src": "363:15:7"
          }
        ],
        "canonicalName": "AniwarVesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 592,
          "nodeType": "StructuredDocumentation",
          "src": "297:30:7",
          "text": " @title TokenVesting"
        },
        "fullyImplemented": true,
        "id": 1143,
        "linearizedBaseContracts": [
          1143,
          1832,
          1792,
          2156
        ],
        "name": "AniwarVesting",
        "nameLocation": "337:13:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 600,
            "libraryName": {
              "id": 597,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2134,
              "src": "391:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "385:27:7",
            "typeName": {
              "id": 599,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 598,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1910,
                "src": "405:6:7"
              },
              "referencedDeclaration": 1910,
              "src": "405:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1910",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "AniwarVesting.VestingSchedule",
            "id": 609,
            "members": [
              {
                "constant": false,
                "id": 602,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "489:2:7",
                "nodeType": "VariableDeclaration",
                "scope": 609,
                "src": "481:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 601,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "481:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 604,
                "mutability": "mutable",
                "name": "beneficiary",
                "nameLocation": "566:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 609,
                "src": "558:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 603,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "558:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 606,
                "mutability": "mutable",
                "name": "totalAmountReleased",
                "nameLocation": "670:19:7",
                "nodeType": "VariableDeclaration",
                "scope": 609,
                "src": "662:27:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 605,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "662:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 608,
                "mutability": "mutable",
                "name": "totalAmountHasBeenWithdrawn",
                "nameLocation": "759:27:7",
                "nodeType": "VariableDeclaration",
                "scope": 609,
                "src": "751:35:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 607,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "751:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "VestingSchedule",
            "nameLocation": "424:15:7",
            "nodeType": "StructDefinition",
            "scope": 1143,
            "src": "417:376:7",
            "visibility": "public"
          },
          {
            "canonicalName": "AniwarVesting.Beneficiary",
            "id": 614,
            "members": [
              {
                "constant": false,
                "id": 611,
                "mutability": "mutable",
                "name": "vestingId",
                "nameLocation": "836:9:7",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "828:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 610,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "828:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 613,
                "mutability": "mutable",
                "name": "initialized",
                "nameLocation": "912:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "907:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 612,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "907:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Beneficiary",
            "nameLocation": "806:11:7",
            "nodeType": "StructDefinition",
            "scope": 1143,
            "src": "799:131:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "544736e6",
            "id": 616,
            "mutability": "mutable",
            "name": "isStarted",
            "nameLocation": "948:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "936:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 615,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "936:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78e97925",
            "id": 618,
            "mutability": "mutable",
            "name": "startTime",
            "nameLocation": "978:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "963:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 617,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "963:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 620,
            "mutability": "immutable",
            "name": "_splitDuration",
            "nameLocation": "1019:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "993:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 619,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "993:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 622,
            "mutability": "immutable",
            "name": "_splitCounter",
            "nameLocation": "1065:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "1039:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 621,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1039:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "40f1031e",
            "id": 624,
            "mutability": "mutable",
            "name": "vestingIdCounter",
            "nameLocation": "1100:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "1085:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 623,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1085:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 626,
            "mutability": "mutable",
            "name": "_vestingSchedulesTotalAmount",
            "nameLocation": "1138:28:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "1122:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 625,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1122:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 628,
            "mutability": "mutable",
            "name": "_vestingSchedulesTotalAmountLeft",
            "nameLocation": "1188:32:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "1172:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 627,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1172:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 631,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "1286:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "1261:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1910",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 630,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 629,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1910,
                "src": "1261:6:7"
              },
              "referencedDeclaration": 1910,
              "src": "1261:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1910",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "6d3cbe21",
            "id": 635,
            "mutability": "mutable",
            "name": "vestingSchedules",
            "nameLocation": "1324:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "1299:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_VestingSchedule_$609_storage_$dyn_storage",
              "typeString": "struct AniwarVesting.VestingSchedule[]"
            },
            "typeName": {
              "baseType": {
                "id": 633,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 632,
                  "name": "VestingSchedule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 609,
                  "src": "1299:15:7"
                },
                "referencedDeclaration": 609,
                "src": "1299:15:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                  "typeString": "struct AniwarVesting.VestingSchedule"
                }
              },
              "id": 634,
              "nodeType": "ArrayTypeName",
              "src": "1299:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_VestingSchedule_$609_storage_$dyn_storage_ptr",
                "typeString": "struct AniwarVesting.VestingSchedule[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 638,
            "mutability": "mutable",
            "name": "_beneficiariesAddress",
            "nameLocation": "1364:21:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "1346:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 636,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1346:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 637,
              "nodeType": "ArrayTypeName",
              "src": "1346:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 643,
            "mutability": "mutable",
            "name": "_beneficiaries",
            "nameLocation": "1431:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "1391:54:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$614_storage_$",
              "typeString": "mapping(address => struct AniwarVesting.Beneficiary)"
            },
            "typeName": {
              "id": 642,
              "keyType": {
                "id": 639,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1399:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1391:31:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$614_storage_$",
                "typeString": "mapping(address => struct AniwarVesting.Beneficiary)"
              },
              "valueType": {
                "id": 641,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 640,
                  "name": "Beneficiary",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 614,
                  "src": "1410:11:7"
                },
                "referencedDeclaration": 614,
                "src": "1410:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Beneficiary_$614_storage_ptr",
                  "typeString": "struct AniwarVesting.Beneficiary"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 647,
            "name": "Released",
            "nameLocation": "1458:8:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1475:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 647,
                  "src": "1467:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1466:16:7"
            },
            "src": "1452:31:7"
          },
          {
            "anonymous": false,
            "id": 649,
            "name": "Begin",
            "nameLocation": "1494:5:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1499:2:7"
            },
            "src": "1488:14:7"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "1548:77:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 652,
                        "name": "isStarted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "1566:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67206973206e6f7420537461727465642059657421",
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1577:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf5c4402f244d719b7c62f13c993b8eeeadaa2481282ee17a305adb42fd1f8df",
                          "typeString": "literal_string \"Vesting is not Started Yet!\""
                        },
                        "value": "Vesting is not Started Yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf5c4402f244d719b7c62f13c993b8eeeadaa2481282ee17a305adb42fd1f8df",
                          "typeString": "literal_string \"Vesting is not Started Yet!\""
                        }
                      ],
                      "id": 651,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1558:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1558:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:49:7"
                },
                {
                  "id": 656,
                  "nodeType": "PlaceholderStatement",
                  "src": "1617:1:7"
                }
              ]
            },
            "id": 658,
            "name": "onlyIfVestingScheduleStarted",
            "nameLocation": "1517:28:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1545:2:7"
            },
            "src": "1508:117:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "1673:70:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1691:10:7",
                        "subExpression": {
                          "id": 661,
                          "name": "isStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 616,
                          "src": "1692:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67206973205374617274656421",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1703:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa05298d608691a6caf05e0776749e7b22a74a3bcf5d4b0f646066854d7bea03",
                          "typeString": "literal_string \"Vesting is Started!\""
                        },
                        "value": "Vesting is Started!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa05298d608691a6caf05e0776749e7b22a74a3bcf5d4b0f646066854d7bea03",
                          "typeString": "literal_string \"Vesting is Started!\""
                        }
                      ],
                      "id": 660,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1683:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:42:7"
                },
                {
                  "id": 666,
                  "nodeType": "PlaceholderStatement",
                  "src": "1735:1:7"
                }
              ]
            },
            "id": 668,
            "name": "onlyIfVestingScheduleNotStarted",
            "nameLocation": "1639:31:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1670:2:7"
            },
            "src": "1630:113:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 701,
              "nodeType": "Block",
              "src": "1854:185:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 678,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "1872:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1890:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1882:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 679,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1882:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1882:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1872:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616464726573732077726f6e6721",
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1896:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_346cb71b351efaa813155f363cefa0ea78b0fefb7abbf37c9369dae03a32f9c5",
                          "typeString": "literal_string \"Token address wrong!\""
                        },
                        "value": "Token address wrong!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_346cb71b351efaa813155f363cefa0ea78b0fefb7abbf37c9369dae03a32f9c5",
                          "typeString": "literal_string \"Token address wrong!\""
                        }
                      ],
                      "id": 677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1864:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1864:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:55:7"
                },
                {
                  "expression": {
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 687,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "1929:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1910",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 689,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "1945:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 688,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "1938:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1910_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1938:14:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1910",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1929:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1910",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "1929:23:7"
                },
                {
                  "expression": {
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 693,
                      "name": "_splitDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "1962:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 694,
                      "name": "splitDuration_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "1979:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1962:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:31:7"
                },
                {
                  "expression": {
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 697,
                      "name": "_splitCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 622,
                      "src": "2003:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 698,
                      "name": "splitCounter_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "2019:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2003:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:29:7"
                }
              ]
            },
            "id": 702,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "1778:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "1770:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "splitDuration_",
                  "nameLocation": "1802:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "1794:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "splitCounter_",
                  "nameLocation": "1834:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "1826:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1760:93:7"
            },
            "returnParameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1854:0:7"
            },
            "scope": 1143,
            "src": "1749:290:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 712,
              "nodeType": "Block",
              "src": "2095:39:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 709,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "2120:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2112:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 707,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2112:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 706,
                  "id": 711,
                  "nodeType": "Return",
                  "src": "2105:22:7"
                }
              ]
            },
            "functionSelector": "21df0da7",
            "id": 713,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "2054:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2062:2:7"
            },
            "returnParameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "2086:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2085:9:7"
            },
            "scope": 1143,
            "src": "2045:89:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 810,
              "nodeType": "Block",
              "src": "2287:1099:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 725,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 717,
                          "src": "2318:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 726,
                          "name": "_vestingSchedulesTotalAmountLeft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 628,
                          "src": "2329:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2318:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a2063616e6e6f74206372656174652076657374696e67207363686564756c652062656361757365206e6f742073756666696369656e7420746f6b656e73",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2375:76:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2eac501d5068c970a209489eb1d1ae38aa7e39d93aa968139e8303982c5b39d",
                          "typeString": "literal_string \"TokenVesting: cannot create vesting schedule because not sufficient tokens\""
                        },
                        "value": "TokenVesting: cannot create vesting schedule because not sufficient tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2eac501d5068c970a209489eb1d1ae38aa7e39d93aa968139e8303982c5b39d",
                          "typeString": "literal_string \"TokenVesting: cannot create vesting schedule because not sufficient tokens\""
                        }
                      ],
                      "id": 724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2297:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2297:164:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "2297:164:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 732,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 717,
                          "src": "2479:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2489:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2479:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a20616d6f756e74206d757374206265203e2030",
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2492:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596",
                          "typeString": "literal_string \"TokenVesting: amount must be > 0\""
                        },
                        "value": "TokenVesting: amount must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c70faadec25b339b2f742e5e94b797b1880df81c42b077852911ac7c80b0596",
                          "typeString": "literal_string \"TokenVesting: amount must be > 0\""
                        }
                      ],
                      "id": 731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2471:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:56:7"
                },
                {
                  "condition": {
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2541:41:7",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 738,
                          "name": "_beneficiaries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "2542:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$614_storage_$",
                            "typeString": "mapping(address => struct AniwarVesting.Beneficiary storage ref)"
                          }
                        },
                        "id": 740,
                        "indexExpression": {
                          "id": 739,
                          "name": "_beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 715,
                          "src": "2557:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2542:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$614_storage",
                          "typeString": "struct AniwarVesting.Beneficiary storage ref"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 613,
                      "src": "2542:40:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 802,
                    "nodeType": "Block",
                    "src": "2987:282:7",
                    "statements": [
                      {
                        "assignments": [
                          785
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 785,
                            "mutability": "mutable",
                            "name": "vestingSchedule",
                            "nameLocation": "3025:15:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 802,
                            "src": "3001:39:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                              "typeString": "struct AniwarVesting.VestingSchedule"
                            },
                            "typeName": {
                              "id": 784,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 783,
                                "name": "VestingSchedule",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 609,
                                "src": "3001:15:7"
                              },
                              "referencedDeclaration": 609,
                              "src": "3001:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                                "typeString": "struct AniwarVesting.VestingSchedule"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 792,
                        "initialValue": {
                          "baseExpression": {
                            "id": 786,
                            "name": "vestingSchedules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "3043:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_VestingSchedule_$609_storage_$dyn_storage",
                              "typeString": "struct AniwarVesting.VestingSchedule storage ref[] storage ref"
                            }
                          },
                          "id": 791,
                          "indexExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 787,
                                "name": "_beneficiaries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 643,
                                "src": "3077:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$614_storage_$",
                                  "typeString": "mapping(address => struct AniwarVesting.Beneficiary storage ref)"
                                }
                              },
                              "id": 789,
                              "indexExpression": {
                                "id": 788,
                                "name": "_beneficiary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 715,
                                "src": "3092:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3077:28:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$614_storage",
                                "typeString": "struct AniwarVesting.Beneficiary storage ref"
                              }
                            },
                            "id": 790,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vestingId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 611,
                            "src": "3077:38:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3043:86:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$609_storage",
                            "typeString": "struct AniwarVesting.VestingSchedule storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3001:128:7"
                      },
                      {
                        "expression": {
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 793,
                              "name": "vestingSchedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "3143:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                                "typeString": "struct AniwarVesting.VestingSchedule storage pointer"
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalAmountReleased",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 606,
                            "src": "3143:35:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 796,
                                "name": "vestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 785,
                                "src": "3197:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                                  "typeString": "struct AniwarVesting.VestingSchedule storage pointer"
                                }
                              },
                              "id": 797,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalAmountReleased",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 606,
                              "src": "3197:35:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 798,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "3251:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3197:61:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3143:115:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 801,
                        "nodeType": "ExpressionStatement",
                        "src": "3143:115:7"
                      }
                    ]
                  },
                  "id": 803,
                  "nodeType": "IfStatement",
                  "src": "2537:732:7",
                  "trueBody": {
                    "id": 782,
                    "nodeType": "Block",
                    "src": "2584:397:7",
                    "statements": [
                      {
                        "assignments": [
                          745
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 745,
                            "mutability": "mutable",
                            "name": "beneficiary",
                            "nameLocation": "2618:11:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 782,
                            "src": "2598:31:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Beneficiary_$614_storage_ptr",
                              "typeString": "struct AniwarVesting.Beneficiary"
                            },
                            "typeName": {
                              "id": 744,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 743,
                                "name": "Beneficiary",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 614,
                                "src": "2598:11:7"
                              },
                              "referencedDeclaration": 614,
                              "src": "2598:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$614_storage_ptr",
                                "typeString": "struct AniwarVesting.Beneficiary"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 749,
                        "initialValue": {
                          "baseExpression": {
                            "id": 746,
                            "name": "_beneficiaries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "2632:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$614_storage_$",
                              "typeString": "mapping(address => struct AniwarVesting.Beneficiary storage ref)"
                            }
                          },
                          "id": 748,
                          "indexExpression": {
                            "id": 747,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "2647:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2632:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Beneficiary_$614_storage",
                            "typeString": "struct AniwarVesting.Beneficiary storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2598:62:7"
                      },
                      {
                        "expression": {
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 750,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "2674:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$614_storage_ptr",
                                "typeString": "struct AniwarVesting.Beneficiary storage pointer"
                              }
                            },
                            "id": 752,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "vestingId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 611,
                            "src": "2674:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 753,
                            "name": "vestingIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "2698:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2674:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 755,
                        "nodeType": "ExpressionStatement",
                        "src": "2674:40:7"
                      },
                      {
                        "expression": {
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 756,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "2728:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Beneficiary_$614_storage_ptr",
                                "typeString": "struct AniwarVesting.Beneficiary storage pointer"
                              }
                            },
                            "id": 758,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 613,
                            "src": "2728:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2754:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2728:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 761,
                        "nodeType": "ExpressionStatement",
                        "src": "2728:30:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 765,
                              "name": "_beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "2799:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 762,
                              "name": "_beneficiariesAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 638,
                              "src": "2772:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2772:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2772:40:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 767,
                        "nodeType": "ExpressionStatement",
                        "src": "2772:40:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 772,
                                  "name": "vestingIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 624,
                                  "src": "2881:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 773,
                                  "name": "_beneficiary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 715,
                                  "src": "2899:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 774,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 717,
                                  "src": "2913:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 775,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2922:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 771,
                                "name": "VestingSchedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 609,
                                "src": "2865:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_VestingSchedule_$609_storage_ptr_$",
                                  "typeString": "type(struct AniwarVesting.VestingSchedule storage pointer)"
                                }
                              },
                              "id": 776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2865:59:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$609_memory_ptr",
                                "typeString": "struct AniwarVesting.VestingSchedule memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_VestingSchedule_$609_memory_ptr",
                                "typeString": "struct AniwarVesting.VestingSchedule memory"
                              }
                            ],
                            "expression": {
                              "id": 768,
                              "name": "vestingSchedules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "2826:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_VestingSchedule_$609_storage_$dyn_storage",
                                "typeString": "struct AniwarVesting.VestingSchedule storage ref[] storage ref"
                              }
                            },
                            "id": 770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2826:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_VestingSchedule_$609_storage_$dyn_storage_ptr_$_t_struct$_VestingSchedule_$609_storage_$returns$__$bound_to$_t_array$_t_struct$_VestingSchedule_$609_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct AniwarVesting.VestingSchedule storage ref[] storage pointer,struct AniwarVesting.VestingSchedule storage ref)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2826:112:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "2826:112:7"
                      },
                      {
                        "expression": {
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2952:18:7",
                          "subExpression": {
                            "id": 779,
                            "name": "vestingIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "2952:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 781,
                        "nodeType": "ExpressionStatement",
                        "src": "2952:18:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 804,
                      "name": "_vestingSchedulesTotalAmountLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "3278:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 805,
                        "name": "_vestingSchedulesTotalAmountLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "3325:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 806,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "3372:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3325:54:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3278:101:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:101:7"
                }
              ]
            },
            "functionSelector": "419544a0",
            "id": 811,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 720,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 719,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "2233:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2233:9:7"
              },
              {
                "id": 722,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 721,
                  "name": "onlyIfVestingScheduleNotStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 668,
                  "src": "2251:31:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2251:31:7"
              }
            ],
            "name": "createVestingSchedule",
            "nameLocation": "2149:21:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nameLocation": "2179:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 811,
                  "src": "2171:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2201:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 811,
                  "src": "2193:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2193:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2170:39:7"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2287:0:7"
            },
            "scope": 1143,
            "src": "2140:1246:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "3497:244:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 823,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3553:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AniwarVesting_$1143",
                                    "typeString": "contract AniwarVesting"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AniwarVesting_$1143",
                                    "typeString": "contract AniwarVesting"
                                  }
                                ],
                                "id": 822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3545:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 821,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3545:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3545:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 819,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "3528:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1910",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1849,
                            "src": "3528:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3528:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 826,
                          "name": "_vestingSchedulesTotalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "3563:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3528:63:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420657863656564732062616c616e636520616e6420496e6974",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3605:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b19834346339b5c407b5bdea47c28d932dd70f47c996f0a543aee7ae31c8a5e4",
                          "typeString": "literal_string \"Amount exceeds balance and Init\""
                        },
                        "value": "Amount exceeds balance and Init"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b19834346339b5c407b5bdea47c28d932dd70f47c996f0a543aee7ae31c8a5e4",
                          "typeString": "literal_string \"Amount exceeds balance and Init\""
                        }
                      ],
                      "id": 818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3507:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3507:141:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "3507:141:7"
                },
                {
                  "expression": {
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 831,
                      "name": "isStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "3658:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3670:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3658:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 834,
                  "nodeType": "ExpressionStatement",
                  "src": "3658:16:7"
                },
                {
                  "expression": {
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 835,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "3684:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 836,
                        "name": "getCurrentTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1142,
                        "src": "3696:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3696:16:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3684:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:28:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 840,
                      "name": "Begin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "3727:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3727:7:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 842,
                  "nodeType": "EmitStatement",
                  "src": "3722:12:7"
                }
              ]
            },
            "functionSelector": "221abf34",
            "id": 844,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 814,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 813,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "3443:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3443:9:7"
              },
              {
                "id": 816,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 815,
                  "name": "onlyIfVestingScheduleNotStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 668,
                  "src": "3461:31:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3461:31:7"
              }
            ],
            "name": "startAllSchedule",
            "nameLocation": "3401:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3417:2:7"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3497:0:7"
            },
            "scope": 1143,
            "src": "3392:349:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "3869:566:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 854,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 846,
                          "src": "3887:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3897:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3887:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d757374206265203e203021",
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3900:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad606b39e27524dd51ccff7c62be2aa4cae3608d84e6ad661c69a1cb1caa0983",
                          "typeString": "literal_string \"Amount must be > 0!\""
                        },
                        "value": "Amount must be > 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad606b39e27524dd51ccff7c62be2aa4cae3608d84e6ad661c69a1cb1caa0983",
                          "typeString": "literal_string \"Amount must be > 0!\""
                        }
                      ],
                      "id": 853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3879:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3879:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "3879:43:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 861,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 846,
                          "src": "3953:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 866,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3989:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AniwarVesting_$1143",
                                    "typeString": "contract AniwarVesting"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AniwarVesting_$1143",
                                    "typeString": "contract AniwarVesting"
                                  }
                                ],
                                "id": 865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3981:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 864,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3981:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3981:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 862,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "3964:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1910",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1849,
                            "src": "3964:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3964:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3953:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420657863656564732062616c616e636521",
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4009:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09a9960f9be5a5f7c7facf1ba98c49e5cae8c77a482bcbf9315cf4c4f3e3230e",
                          "typeString": "literal_string \"Amount exceeds balance!\""
                        },
                        "value": "Amount exceeds balance!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09a9960f9be5a5f7c7facf1ba98c49e5cae8c77a482bcbf9315cf4c4f3e3230e",
                          "typeString": "literal_string \"Amount exceeds balance!\""
                        }
                      ],
                      "id": 860,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3932:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3932:112:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "3932:112:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 874,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 846,
                          "src": "4075:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 875,
                            "name": "_vestingSchedulesTotalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "4102:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 876,
                            "name": "_vestingSchedulesTotalAmountLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "4133:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4102:63:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4075:90:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d75737420626520626967676572207468616e2070726576696f75732061737369676e656421",
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4179:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec55c99e68ee595d733d0f428488317830bf56c54b8abf134b5e5cc0f21614a5",
                          "typeString": "literal_string \"Amount must be bigger than previous assigned!\""
                        },
                        "value": "Amount must be bigger than previous assigned!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec55c99e68ee595d733d0f428488317830bf56c54b8abf134b5e5cc0f21614a5",
                          "typeString": "literal_string \"Amount must be bigger than previous assigned!\""
                        }
                      ],
                      "id": 873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4054:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4054:182:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "4054:182:7"
                },
                {
                  "expression": {
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 882,
                      "name": "_vestingSchedulesTotalAmountLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "4246:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 883,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "4293:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 884,
                              "name": "_vestingSchedulesTotalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "4316:28:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 885,
                              "name": "_vestingSchedulesTotalAmountLeft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 628,
                              "src": "4347:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4316:63:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 887,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4315:65:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4293:87:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4246:134:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "4246:134:7"
                },
                {
                  "expression": {
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 891,
                      "name": "_vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "4390:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 892,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 846,
                      "src": "4421:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4390:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "4390:38:7"
                }
              ]
            },
            "functionSelector": "8dd996c3",
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 849,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 848,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "3815:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3815:9:7"
              },
              {
                "id": 851,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 850,
                  "name": "onlyIfVestingScheduleNotStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 668,
                  "src": "3833:31:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3833:31:7"
              }
            ],
            "name": "setInitTotalAmount",
            "nameLocation": "3756:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3783:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "3775:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3775:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3774:17:7"
            },
            "returnParameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3869:0:7"
            },
            "scope": 1143,
            "src": "3747:688:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "4495:1059:7",
              "statements": [
                {
                  "assignments": [
                    905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 905,
                      "mutability": "mutable",
                      "name": "vestingSchedule",
                      "nameLocation": "4529:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1000,
                      "src": "4505:39:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                        "typeString": "struct AniwarVesting.VestingSchedule"
                      },
                      "typeName": {
                        "id": 904,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 903,
                          "name": "VestingSchedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 609,
                          "src": "4505:15:7"
                        },
                        "referencedDeclaration": 609,
                        "src": "4505:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                          "typeString": "struct AniwarVesting.VestingSchedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 916,
                  "initialValue": {
                    "baseExpression": {
                      "id": 906,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "4547:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VestingSchedule_$609_storage_$dyn_storage",
                        "typeString": "struct AniwarVesting.VestingSchedule storage ref[] storage ref"
                      }
                    },
                    "id": 915,
                    "indexExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 907,
                          "name": "_beneficiaries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "4577:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$614_storage_$",
                            "typeString": "mapping(address => struct AniwarVesting.Beneficiary storage ref)"
                          }
                        },
                        "id": 913,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 910,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4600:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4600:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4592:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 908,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4592:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4592:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4577:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$614_storage",
                          "typeString": "struct AniwarVesting.Beneficiary storage ref"
                        }
                      },
                      "id": 914,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vestingId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 611,
                      "src": "4577:45:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4547:85:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$609_storage",
                      "typeString": "struct AniwarVesting.VestingSchedule storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4505:127:7"
                },
                {
                  "assignments": [
                    918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 918,
                      "mutability": "mutable",
                      "name": "isBeneficiary",
                      "nameLocation": "4647:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1000,
                      "src": "4642:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 917,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4642:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 924,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 919,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4663:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4663:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 921,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "4677:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                          "typeString": "struct AniwarVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 922,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 604,
                      "src": "4677:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4663:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4642:62:7"
                },
                {
                  "assignments": [
                    926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 926,
                      "mutability": "mutable",
                      "name": "isOwner",
                      "nameLocation": "4719:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1000,
                      "src": "4714:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 925,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4714:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 932,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 927,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4729:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4729:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 929,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1721,
                        "src": "4743:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4743:7:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4729:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4714:36:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 934,
                          "name": "isBeneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 918,
                          "src": "4781:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 935,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 926,
                          "src": "4798:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4781:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e56657374696e673a206f6e6c792062656e656669636961727920616e64206f776e65722063616e2072656c656173652076657374656420746f6b656e73",
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4819:68:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd611d281859d9ca31d28e68329b9c1d51f5452ce3844d60d556eda1e2459a76",
                          "typeString": "literal_string \"TokenVesting: only beneficiary and owner can release vested tokens\""
                        },
                        "value": "TokenVesting: only beneficiary and owner can release vested tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd611d281859d9ca31d28e68329b9c1d51f5452ce3844d60d556eda1e2459a76",
                          "typeString": "literal_string \"TokenVesting: only beneficiary and owner can release vested tokens\""
                        }
                      ],
                      "id": 933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4760:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4760:137:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "4760:137:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 941,
                            "name": "_beneficiaries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "4928:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$614_storage_$",
                              "typeString": "mapping(address => struct AniwarVesting.Beneficiary storage ref)"
                            }
                          },
                          "id": 947,
                          "indexExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 944,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4951:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4951:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4943:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 942,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4943:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4943:19:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4928:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Beneficiary_$614_storage",
                            "typeString": "struct AniwarVesting.Beneficiary storage ref"
                          }
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 613,
                        "src": "4928:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420696e2056657374696e67205363686564756c65",
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4989:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b060995baa10b02a64f373e66806166a56aca1a8c292bde307ed1ebc1172c6cf",
                          "typeString": "literal_string \"Not in Vesting Schedule\""
                        },
                        "value": "Not in Vesting Schedule"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b060995baa10b02a64f373e66806166a56aca1a8c292bde307ed1ebc1172c6cf",
                          "typeString": "literal_string \"Not in Vesting Schedule\""
                        }
                      ],
                      "id": 940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4907:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4907:117:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "4907:117:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 953,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 898,
                          "src": "5042:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5052:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5042:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d757374206265203e2030",
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5055:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
                          "typeString": "literal_string \"Amount must be > 0\""
                        },
                        "value": "Amount must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
                          "typeString": "literal_string \"Amount must be > 0\""
                        }
                      ],
                      "id": 952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5034:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5034:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "5034:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 960,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 898,
                          "src": "5107:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 964,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5148:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 965,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5148:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5140:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 962,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5140:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5140:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 961,
                            "name": "calculateWithdrawable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "5118:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5118:42:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5107:53:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420776974686472617761626c6520696e737566666963656e747321",
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5174:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bc2e50ad035300a73602346a4a5ce67b6cccd8ed86c0a92988b4ca0180cdaaf",
                          "typeString": "literal_string \"Amount withdrawable insufficents!\""
                        },
                        "value": "Amount withdrawable insufficents!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bc2e50ad035300a73602346a4a5ce67b6cccd8ed86c0a92988b4ca0180cdaaf",
                          "typeString": "literal_string \"Amount withdrawable insufficents!\""
                        }
                      ],
                      "id": 959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5086:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5086:133:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "5086:133:7"
                },
                {
                  "expression": {
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 972,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "5229:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                          "typeString": "struct AniwarVesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 974,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmountHasBeenWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 608,
                      "src": "5229:43:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 975,
                          "name": "vestingSchedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 905,
                          "src": "5287:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                            "typeString": "struct AniwarVesting.VestingSchedule storage pointer"
                          }
                        },
                        "id": 976,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalAmountHasBeenWithdrawn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 608,
                        "src": "5287:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 977,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "5345:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5287:65:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5229:123:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "5229:123:7"
                },
                {
                  "assignments": [
                    982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 982,
                      "mutability": "mutable",
                      "name": "beneficiaryPayable",
                      "nameLocation": "5378:18:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1000,
                      "src": "5362:34:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 981,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5362:15:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 988,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 985,
                          "name": "vestingSchedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 905,
                          "src": "5420:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                            "typeString": "struct AniwarVesting.VestingSchedule storage pointer"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "beneficiary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 604,
                        "src": "5420:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5399:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 983,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5399:8:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5399:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5362:95:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 992,
                        "name": "beneficiaryPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "5487:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 993,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "5507:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 989,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "5467:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1941,
                      "src": "5467:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1910_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1910_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5467:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "5467:48:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 997,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "5539:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 996,
                      "name": "Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 647,
                      "src": "5530:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5530:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 999,
                  "nodeType": "EmitStatement",
                  "src": "5525:22:7"
                }
              ]
            },
            "functionSelector": "37bdc99b",
            "id": 1001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 901,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 900,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1831,
                  "src": "4482:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4482:12:7"
              }
            ],
            "name": "release",
            "nameLocation": "4450:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4466:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "4458:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4458:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4457:17:7"
            },
            "returnParameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4495:0:7"
            },
            "scope": 1143,
            "src": "4441:1113:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1075,
              "nodeType": "Block",
              "src": "5708:717:7",
              "statements": [
                {
                  "assignments": [
                    1012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1012,
                      "mutability": "mutable",
                      "name": "beneficiary",
                      "nameLocation": "5737:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1075,
                      "src": "5718:30:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Beneficiary_$614_memory_ptr",
                        "typeString": "struct AniwarVesting.Beneficiary"
                      },
                      "typeName": {
                        "id": 1011,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1010,
                          "name": "Beneficiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 614,
                          "src": "5718:11:7"
                        },
                        "referencedDeclaration": 614,
                        "src": "5718:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$614_storage_ptr",
                          "typeString": "struct AniwarVesting.Beneficiary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1016,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1013,
                      "name": "_beneficiaries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "5751:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$614_storage_$",
                        "typeString": "mapping(address => struct AniwarVesting.Beneficiary storage ref)"
                      }
                    },
                    "id": 1015,
                    "indexExpression": {
                      "id": 1014,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "5766:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5751:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Beneficiary_$614_storage",
                      "typeString": "struct AniwarVesting.Beneficiary storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5718:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1018,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1012,
                          "src": "5797:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Beneficiary_$614_memory_ptr",
                            "typeString": "struct AniwarVesting.Beneficiary memory"
                          }
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 613,
                        "src": "5797:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42656e656669636961727920646f6573206e6f7420657869737421",
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5822:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e587f3eccc1ab5a8872b4782973ea9a6f97b6ef6108b9db6a5e65db3e0c276f1",
                          "typeString": "literal_string \"Beneficiary does not exist!\""
                        },
                        "value": "Beneficiary does not exist!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e587f3eccc1ab5a8872b4782973ea9a6f97b6ef6108b9db6a5e65db3e0c276f1",
                          "typeString": "literal_string \"Beneficiary does not exist!\""
                        }
                      ],
                      "id": 1017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5789:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5789:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "5789:63:7"
                },
                {
                  "assignments": [
                    1025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1025,
                      "mutability": "mutable",
                      "name": "vestingSchedule",
                      "nameLocation": "5885:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1075,
                      "src": "5862:38:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$609_memory_ptr",
                        "typeString": "struct AniwarVesting.VestingSchedule"
                      },
                      "typeName": {
                        "id": 1024,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1023,
                          "name": "VestingSchedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 609,
                          "src": "5862:15:7"
                        },
                        "referencedDeclaration": 609,
                        "src": "5862:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$609_storage_ptr",
                          "typeString": "struct AniwarVesting.VestingSchedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1030,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1026,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "5903:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VestingSchedule_$609_storage_$dyn_storage",
                        "typeString": "struct AniwarVesting.VestingSchedule storage ref[] storage ref"
                      }
                    },
                    "id": 1029,
                    "indexExpression": {
                      "expression": {
                        "id": 1027,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "5933:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Beneficiary_$614_memory_ptr",
                          "typeString": "struct AniwarVesting.Beneficiary memory"
                        }
                      },
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vestingId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 611,
                      "src": "5933:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5903:61:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$609_storage",
                      "typeString": "struct AniwarVesting.VestingSchedule storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5862:102:7"
                },
                {
                  "assignments": [
                    1032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1032,
                      "mutability": "mutable",
                      "name": "currentTime",
                      "nameLocation": "5982:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1075,
                      "src": "5974:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1031,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5974:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1035,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1033,
                      "name": "getCurrentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1142,
                      "src": "5996:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5996:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5974:38:7"
                },
                {
                  "assignments": [
                    1037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1037,
                      "mutability": "mutable",
                      "name": "currentSplit",
                      "nameLocation": "6030:12:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1075,
                      "src": "6022:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6022:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1044,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1038,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1032,
                            "src": "6046:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1039,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 618,
                            "src": "6060:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6046:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1041,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6045:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1042,
                      "name": "_splitDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "6073:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6045:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6022:65:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1045,
                      "name": "currentSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "6101:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1046,
                      "name": "_splitCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 622,
                      "src": "6117:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6101:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1053,
                  "nodeType": "IfStatement",
                  "src": "6097:88:7",
                  "trueBody": {
                    "id": 1052,
                    "nodeType": "Block",
                    "src": "6132:53:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1048,
                            "name": "currentSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "6146:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1049,
                            "name": "_splitCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "6161:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6146:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1051,
                        "nodeType": "ExpressionStatement",
                        "src": "6146:28:7"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1054,
                      "name": "currentSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "6198:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6214:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6198:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1062,
                  "nodeType": "IfStatement",
                  "src": "6194:64:7",
                  "trueBody": {
                    "id": 1061,
                    "nodeType": "Block",
                    "src": "6217:41:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1057,
                            "name": "currentSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "6231:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6246:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6231:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1060,
                        "nodeType": "ExpressionStatement",
                        "src": "6231:16:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1063,
                                    "name": "vestingSchedule",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1025,
                                    "src": "6288:15:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VestingSchedule_$609_memory_ptr",
                                      "typeString": "struct AniwarVesting.VestingSchedule memory"
                                    }
                                  },
                                  "id": 1064,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalAmountReleased",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 606,
                                  "src": "6288:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1065,
                                  "name": "_splitCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 622,
                                  "src": "6326:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6288:51:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1067,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6287:53:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1068,
                            "name": "currentSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "6359:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6287:84:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1070,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6286:86:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 1071,
                        "name": "vestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "6375:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$609_memory_ptr",
                          "typeString": "struct AniwarVesting.VestingSchedule memory"
                        }
                      },
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalAmountHasBeenWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 608,
                      "src": "6375:43:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6286:132:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1009,
                  "id": 1074,
                  "nodeType": "Return",
                  "src": "6267:151:7"
                }
              ]
            },
            "functionSelector": "4c44124f",
            "id": 1076,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1006,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1005,
                  "name": "onlyIfVestingScheduleStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 658,
                  "src": "5649:28:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5649:28:7"
              }
            ],
            "name": "calculateWithdrawable",
            "nameLocation": "5569:21:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nameLocation": "5599:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "5591:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5591:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5590:22:7"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "5695:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5695:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5694:9:7"
            },
            "scope": 1143,
            "src": "5560:865:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "6539:398:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6570:10:7",
                          "subExpression": {
                            "id": 1086,
                            "name": "isStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "6571:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1088,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1078,
                            "src": "6584:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1089,
                            "name": "_vestingSchedulesTotalAmountLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "6595:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6584:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6570:57:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420657863656564732062616c616e636520616e6420496e6974",
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6641:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b19834346339b5c407b5bdea47c28d932dd70f47c996f0a543aee7ae31c8a5e4",
                          "typeString": "literal_string \"Amount exceeds balance and Init\""
                        },
                        "value": "Amount exceeds balance and Init"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b19834346339b5c407b5bdea47c28d932dd70f47c996f0a543aee7ae31c8a5e4",
                          "typeString": "literal_string \"Amount exceeds balance and Init\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6549:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6549:135:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "6549:135:7"
                },
                {
                  "expression": {
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1095,
                      "name": "_vestingSchedulesTotalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "6694:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1096,
                        "name": "_vestingSchedulesTotalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "6725:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1097,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "6756:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6725:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6694:69:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "6694:69:7"
                },
                {
                  "expression": {
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1101,
                      "name": "_vestingSchedulesTotalAmountLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "6773:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1102,
                        "name": "_vestingSchedulesTotalAmountLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "6820:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1103,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "6867:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6820:54:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6773:101:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1106,
                  "nodeType": "ExpressionStatement",
                  "src": "6773:101:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1112,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1721,
                              "src": "6912:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6912:7:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6904:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6904:8:7",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6904:16:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1115,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "6922:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1107,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "6884:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1941,
                      "src": "6884:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1910_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1910_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6884:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "6884:46:7"
                }
              ]
            },
            "functionSelector": "b5abe85a",
            "id": 1119,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1081,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1080,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1831,
                  "src": "6504:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6504:12:7"
              },
              {
                "id": 1083,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1082,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "6525:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6525:9:7"
              }
            ],
            "name": "withdrawContractBalance",
            "nameLocation": "6440:23:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6472:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "6464:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6464:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6463:17:7"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6539:0:7"
            },
            "scope": 1143,
            "src": "6431:506:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1132,
              "nodeType": "Block",
              "src": "6995:55:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1128,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7037:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AniwarVesting_$1143",
                              "typeString": "contract AniwarVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AniwarVesting_$1143",
                              "typeString": "contract AniwarVesting"
                            }
                          ],
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7029:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7029:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7029:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1124,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "7012:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1849,
                      "src": "7012:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7012:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1123,
                  "id": 1131,
                  "nodeType": "Return",
                  "src": "7005:38:7"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 1133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "6952:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6962:2:7"
            },
            "returnParameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "6986:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6986:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6985:9:7"
            },
            "scope": 1143,
            "src": "6943:107:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1141,
              "nodeType": "Block",
              "src": "7112:39:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1138,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "7129:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "7129:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1137,
                  "id": 1140,
                  "nodeType": "Return",
                  "src": "7122:22:7"
                }
              ]
            },
            "functionSelector": "29cb924d",
            "id": 1142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "7065:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7079:2:7"
            },
            "returnParameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "7103:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7103:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7102:9:7"
            },
            "scope": 1143,
            "src": "7056:95:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1144,
        "src": "328:6825:7",
        "usedErrors": []
      }
    ],
    "src": "32:7122:7"
  },
  "bytecode": "60e060405234801561001057600080fd5b506040516117e23803806117e283398101604081905261002f916100ff565b610038336100af565b600180556001600160a01b0383166100965760405162461bcd60e51b815260206004820152601460248201527f546f6b656e20616464726573732077726f6e6721000000000000000000000000604482015260640160405180910390fd5b6001600160a01b0390921660c05260805260a052610142565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006060848603121561011457600080fd5b83516001600160a01b038116811461012b57600080fd5b602085015160409095015190969495509392505050565b60805160a05160c0516116406101a260003960008181610122015281816102770152818161035d015281816106c601528181610d8a0152611006015260008181610bc201528181610bea0152610c1b01526000610b8701526116406000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063544736e6116100975780638da5cb5b116100665780638da5cb5b146102155780638dd996c314610226578063b5abe85a14610239578063f2fde38b1461024c57600080fd5b8063544736e6146101ac5780636d3cbe21146101c9578063715018a61461020457806378e979251461020c57600080fd5b806337bdc99b116100d357806337bdc99b1461016a57806340f1031e1461017d578063419544a0146101865780634c44124f1461019957600080fd5b806312065fe01461010557806321df0da714610120578063221abf341461015a57806329cb924d14610164575b600080fd5b61010d61025f565b6040519081526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610117565b6101626102ef565b005b4261010d565b6101626101783660046113c2565b610460565b61010d60045481565b6101626101943660046113f2565b61072b565b61010d6101a736600461141c565b610a40565b6002546101b99060ff1681565b6040519015158152602001610117565b6101dc6101d73660046113c2565b610c69565b604080519485526001600160a01b039093166020850152918301526060820152608001610117565b610162610cac565b61010d60035481565b6000546001600160a01b0316610142565b6101626102343660046113c2565b610ce2565b6101626102473660046113c2565b610ee3565b61016261025a36600461141c565b611034565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea9190611437565b905090565b6000546001600160a01b031633146103225760405162461bcd60e51b815260040161031990611450565b60405180910390fd5b60025460ff16156103455760405162461bcd60e51b815260040161031990611485565b6005546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d09190611437565b101561041e5760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e7420657863656564732062616c616e636520616e6420496e6974006044820152606401610319565b6002805460ff191660011790556104324290565b6003556040517ffd3415c24b2b4519f08b7935c13f86ea010c77b3ff9bf448a474ae3b2414fce090600090a1565b600260015414156104b35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610319565b6002600155336000908152600960205260408120546007805490919081106104dd576104dd6114b2565b600091825260208220600160049290920201908101549154909250336001600160a01b039283168114929091161481806105145750805b6105915760405162461bcd60e51b815260206004820152604260248201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160448201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b656064820152616e7360f01b608482015260a401610319565b3360009081526009602052604090206001015460ff166105f35760405162461bcd60e51b815260206004820152601760248201527f4e6f7420696e2056657374696e67205363686564756c650000000000000000006044820152606401610319565b600084116106385760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606401610319565b61064133610a40565b84111561069a5760405162461bcd60e51b815260206004820152602160248201527f416d6f756e7420776974686472617761626c6520696e737566666963656e74736044820152602160f81b6064820152608401610319565b8383600301546106aa91906114de565b600384015560018301546001600160a01b03908116906106ed907f00000000000000000000000000000000000000000000000000000000000000001682876110cf565b6040518581527ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c5659060200160405180910390a1505060018055505050565b6000546001600160a01b031633146107555760405162461bcd60e51b815260040161031990611450565b60025460ff16156107785760405162461bcd60e51b815260040161031990611485565b6006548111156108035760405162461bcd60e51b815260206004820152604a60248201527f546f6b656e56657374696e673a2063616e6e6f7420637265617465207665737460448201527f696e67207363686564756c652062656361757365206e6f742073756666696369606482015269656e7420746f6b656e7360b01b608482015260a401610319565b600081116108535760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e20306044820152606401610319565b6001600160a01b03821660009081526009602052604090206001015460ff166109d6576001600160a01b0380831660008181526009602090815260408083206004805482556001808301805460ff191682179055600880548083019091557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319908116891790915584516080810186528354815295860197885293850189815260608601878152600780549384018155885295519183027fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68881019290925596517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689820180549190991694169390931790965593517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a82015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b9091015582549192906109cb836114f6565b919050555050610a2b565b6001600160a01b038216600090815260096020526040812054600780549091908110610a0457610a046114b2565b90600052602060002090600402019050818160020154610a2491906114de565b6002909101555b80600654610a399190611511565b6006555050565b60025460009060ff16610a955760405162461bcd60e51b815260206004820152601b60248201527f56657374696e67206973206e6f742053746172746564205965742100000000006044820152606401610319565b6001600160a01b0382166000908152600960209081526040918290208251808401909352805483526001015460ff161515908201819052610b185760405162461bcd60e51b815260206004820152601b60248201527f42656e656669636961727920646f6573206e6f742065786973742100000000006044820152606401610319565b60006007826000015181548110610b3157610b316114b2565b600091825260208083206040805160808101825260049094029091018054845260018101546001600160a01b0316928401929092526002820154908301526003015460608201529150610b814290565b905060007f000000000000000000000000000000000000000000000000000000000000000060035483610bb49190611511565b610bbe9190611528565b90507f00000000000000000000000000000000000000000000000000000000000000008110610c0a57507f00000000000000000000000000000000000000000000000000000000000000005b80610c13575060015b8260600151817f00000000000000000000000000000000000000000000000000000000000000008560400151610c499190611528565b610c53919061154a565b610c5d9190611511565b9450505050505b919050565b60078181548110610c7957600080fd5b600091825260209091206004909102018054600182015460028301546003909301549193506001600160a01b0316919084565b6000546001600160a01b03163314610cd65760405162461bcd60e51b815260040161031990611450565b610ce06000611126565b565b6000546001600160a01b03163314610d0c5760405162461bcd60e51b815260040161031990611450565b60025460ff1615610d2f5760405162461bcd60e51b815260040161031990611485565b60008111610d755760405162461bcd60e51b8152602060048201526013602482015272416d6f756e74206d757374206265203e20302160681b6044820152606401610319565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610dd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfd9190611437565b811115610e4c5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e7420657863656564732062616c616e6365210000000000000000006044820152606401610319565b600654600554610e5c9190611511565b811015610ec15760405162461bcd60e51b815260206004820152602d60248201527f416d6f756e74206d75737420626520626967676572207468616e20707265766960448201526c6f75732061737369676e65642160981b6064820152608401610319565b600654600554610ed19190611511565b610edb9082611511565b600655600555565b60026001541415610f365760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610319565b60026001556000546001600160a01b03163314610f655760405162461bcd60e51b815260040161031990611450565b60025460ff161580610f7957506006548111155b610fc55760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e7420657863656564732062616c616e636520616e6420496e6974006044820152606401610319565b80600554610fd39190611511565b600555600654610fe4908290611511565b60065561102d610ffc6000546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690836110cf565b5060018055565b6000546001600160a01b0316331461105e5760405162461bcd60e51b815260040161031990611450565b6001600160a01b0381166110c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610319565b6110cc81611126565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611121908490611176565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006111cb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112489092919063ffffffff16565b80519091501561112157808060200190518101906111e99190611569565b6111215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610319565b60606112578484600085611261565b90505b9392505050565b6060824710156112c25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610319565b843b6113105760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610319565b600080866001600160a01b0316858760405161132c91906115bb565b60006040518083038185875af1925050503d8060008114611369576040519150601f19603f3d011682016040523d82523d6000602084013e61136e565b606091505b509150915061137e828286611389565b979650505050505050565b6060831561139857508161125a565b8251156113a85782518084602001fd5b8160405162461bcd60e51b815260040161031991906115d7565b6000602082840312156113d457600080fd5b5035919050565b80356001600160a01b0381168114610c6457600080fd5b6000806040838503121561140557600080fd5b61140e836113db565b946020939093013593505050565b60006020828403121561142e57600080fd5b61125a826113db565b60006020828403121561144957600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526013908201527256657374696e6720697320537461727465642160681b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156114f1576114f16114c8565b500190565b600060001982141561150a5761150a6114c8565b5060010190565b600082821015611523576115236114c8565b500390565b60008261154557634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611564576115646114c8565b500290565b60006020828403121561157b57600080fd5b8151801515811461125a57600080fd5b60005b838110156115a657818101518382015260200161158e565b838111156115b5576000848401525b50505050565b600082516115cd81846020870161158b565b9190910192915050565b60208152600082518060208401526115f681604085016020870161158b565b601f01601f1916919091016040019291505056fea26469706673582212200e661082c70d51cc8150ecd94bf16c3a3047d3b1faa6d0a3c9aaa9e1b88b812464736f6c634300080a0033",
  "bytecodeSha1": "bec70e42b3438d289a32028605f958b82698b5f5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "AniwarVesting",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "70": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {
        "AniwarVesting.withdrawContractBalance": {
          "71": [
            2259,
            2278,
            true
          ]
        }
      },
      "2": {},
      "3": {
        "SafeERC20._callOptionalReturn": {
          "72": [
            3668,
            3689,
            false
          ],
          "73": [
            3752,
            3782,
            true
          ]
        }
      },
      "4": {
        "Address.functionCallWithValue": {
          "67": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "68": [
            7335,
            7342,
            false
          ],
          "69": [
            7476,
            7497,
            false
          ]
        }
      },
      "5": {},
      "7": {
        "AniwarVesting.calculateWithdrawable": {
          "59": [
            1566,
            1575,
            true
          ],
          "60": [
            6101,
            6130,
            false
          ],
          "61": [
            6198,
            6215,
            false
          ]
        },
        "AniwarVesting.createVestingSchedule": {
          "56": [
            2318,
            2361,
            true
          ],
          "57": [
            2479,
            2490,
            true
          ],
          "58": [
            2542,
            2582,
            false
          ]
        },
        "AniwarVesting.release": {
          "52": [
            4798,
            4805,
            true
          ],
          "53": [
            4928,
            4975,
            true
          ],
          "54": [
            5042,
            5053,
            true
          ],
          "55": [
            5107,
            5160,
            true
          ]
        },
        "AniwarVesting.setInitTotalAmount": {
          "62": [
            3887,
            3898,
            true
          ],
          "63": [
            3953,
            3995,
            true
          ],
          "64": [
            4075,
            4165,
            true
          ]
        },
        "AniwarVesting.startAllSchedule": {
          "51": [
            3528,
            3591,
            true
          ]
        },
        "AniwarVesting.withdrawContractBalance": {
          "65": [
            6571,
            6580,
            true
          ],
          "66": [
            6584,
            6627,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "42": [
            2131,
            2148
          ],
          "43": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "2": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "29": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "39": [
            1926,
            1999
          ],
          "40": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "SafeERC20._callOptionalReturn": {
          "44": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "41": [
            746,
            832
          ]
        }
      },
      "4": {
        "Address.functionCall": {
          "45": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "46": [
            4737,
            4818
          ],
          "47": [
            4828,
            4888
          ],
          "48": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "49": [
            7358,
            7375
          ],
          "50": [
            7802,
            7822
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "4": [
            659,
            676
          ]
        }
      },
      "7": {
        "AniwarVesting.calculateWithdrawable": {
          "25": [
            5789,
            5852
          ],
          "26": [
            6146,
            6174
          ],
          "27": [
            6231,
            6247
          ],
          "28": [
            6267,
            6418
          ]
        },
        "AniwarVesting.createVestingSchedule": {
          "16": [
            2297,
            2461
          ],
          "17": [
            2471,
            2527
          ],
          "18": [
            2674,
            2714
          ],
          "19": [
            2728,
            2758
          ],
          "20": [
            2772,
            2812
          ],
          "21": [
            2826,
            2938
          ],
          "22": [
            2952,
            2970
          ],
          "23": [
            3143,
            3258
          ],
          "24": [
            3278,
            3379
          ]
        },
        "AniwarVesting.getBalance": {
          "3": [
            7005,
            7043
          ]
        },
        "AniwarVesting.getCurrentTime": {
          "1": [
            7122,
            7144
          ]
        },
        "AniwarVesting.getToken": {
          "0": [
            2105,
            2127
          ]
        },
        "AniwarVesting.release": {
          "9": [
            4760,
            4897
          ],
          "10": [
            4907,
            5024
          ],
          "11": [
            5034,
            5076
          ],
          "12": [
            5086,
            5219
          ],
          "13": [
            5229,
            5352
          ],
          "14": [
            5467,
            5515
          ],
          "15": [
            5525,
            5547
          ]
        },
        "AniwarVesting.setInitTotalAmount": {
          "30": [
            3879,
            3922
          ],
          "31": [
            3932,
            4044
          ],
          "32": [
            4054,
            4236
          ],
          "33": [
            4246,
            4380
          ],
          "34": [
            4390,
            4428
          ]
        },
        "AniwarVesting.startAllSchedule": {
          "5": [
            3507,
            3648
          ],
          "6": [
            3658,
            3674
          ],
          "7": [
            3684,
            3712
          ],
          "8": [
            3722,
            3734
          ]
        },
        "AniwarVesting.withdrawContractBalance": {
          "35": [
            6549,
            6684
          ],
          "36": [
            6694,
            6763
          ],
          "37": [
            6773,
            6874
          ],
          "38": [
            6884,
            6930
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063544736e6116100975780638da5cb5b116100665780638da5cb5b146102155780638dd996c314610226578063b5abe85a14610239578063f2fde38b1461024c57600080fd5b8063544736e6146101ac5780636d3cbe21146101c9578063715018a61461020457806378e979251461020c57600080fd5b806337bdc99b116100d357806337bdc99b1461016a57806340f1031e1461017d578063419544a0146101865780634c44124f1461019957600080fd5b806312065fe01461010557806321df0da714610120578063221abf341461015a57806329cb924d14610164575b600080fd5b61010d61025f565b6040519081526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610117565b6101626102ef565b005b4261010d565b6101626101783660046113c2565b610460565b61010d60045481565b6101626101943660046113f2565b61072b565b61010d6101a736600461141c565b610a40565b6002546101b99060ff1681565b6040519015158152602001610117565b6101dc6101d73660046113c2565b610c69565b604080519485526001600160a01b039093166020850152918301526060820152608001610117565b610162610cac565b61010d60035481565b6000546001600160a01b0316610142565b6101626102343660046113c2565b610ce2565b6101626102473660046113c2565b610ee3565b61016261025a36600461141c565b611034565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea9190611437565b905090565b6000546001600160a01b031633146103225760405162461bcd60e51b815260040161031990611450565b60405180910390fd5b60025460ff16156103455760405162461bcd60e51b815260040161031990611485565b6005546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d09190611437565b101561041e5760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e7420657863656564732062616c616e636520616e6420496e6974006044820152606401610319565b6002805460ff191660011790556104324290565b6003556040517ffd3415c24b2b4519f08b7935c13f86ea010c77b3ff9bf448a474ae3b2414fce090600090a1565b600260015414156104b35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610319565b6002600155336000908152600960205260408120546007805490919081106104dd576104dd6114b2565b600091825260208220600160049290920201908101549154909250336001600160a01b039283168114929091161481806105145750805b6105915760405162461bcd60e51b815260206004820152604260248201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160448201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b656064820152616e7360f01b608482015260a401610319565b3360009081526009602052604090206001015460ff166105f35760405162461bcd60e51b815260206004820152601760248201527f4e6f7420696e2056657374696e67205363686564756c650000000000000000006044820152606401610319565b600084116106385760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606401610319565b61064133610a40565b84111561069a5760405162461bcd60e51b815260206004820152602160248201527f416d6f756e7420776974686472617761626c6520696e737566666963656e74736044820152602160f81b6064820152608401610319565b8383600301546106aa91906114de565b600384015560018301546001600160a01b03908116906106ed907f00000000000000000000000000000000000000000000000000000000000000001682876110cf565b6040518581527ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c5659060200160405180910390a1505060018055505050565b6000546001600160a01b031633146107555760405162461bcd60e51b815260040161031990611450565b60025460ff16156107785760405162461bcd60e51b815260040161031990611485565b6006548111156108035760405162461bcd60e51b815260206004820152604a60248201527f546f6b656e56657374696e673a2063616e6e6f7420637265617465207665737460448201527f696e67207363686564756c652062656361757365206e6f742073756666696369606482015269656e7420746f6b656e7360b01b608482015260a401610319565b600081116108535760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e20306044820152606401610319565b6001600160a01b03821660009081526009602052604090206001015460ff166109d6576001600160a01b0380831660008181526009602090815260408083206004805482556001808301805460ff191682179055600880548083019091557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319908116891790915584516080810186528354815295860197885293850189815260608601878152600780549384018155885295519183027fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68881019290925596517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689820180549190991694169390931790965593517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a82015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b9091015582549192906109cb836114f6565b919050555050610a2b565b6001600160a01b038216600090815260096020526040812054600780549091908110610a0457610a046114b2565b90600052602060002090600402019050818160020154610a2491906114de565b6002909101555b80600654610a399190611511565b6006555050565b60025460009060ff16610a955760405162461bcd60e51b815260206004820152601b60248201527f56657374696e67206973206e6f742053746172746564205965742100000000006044820152606401610319565b6001600160a01b0382166000908152600960209081526040918290208251808401909352805483526001015460ff161515908201819052610b185760405162461bcd60e51b815260206004820152601b60248201527f42656e656669636961727920646f6573206e6f742065786973742100000000006044820152606401610319565b60006007826000015181548110610b3157610b316114b2565b600091825260208083206040805160808101825260049094029091018054845260018101546001600160a01b0316928401929092526002820154908301526003015460608201529150610b814290565b905060007f000000000000000000000000000000000000000000000000000000000000000060035483610bb49190611511565b610bbe9190611528565b90507f00000000000000000000000000000000000000000000000000000000000000008110610c0a57507f00000000000000000000000000000000000000000000000000000000000000005b80610c13575060015b8260600151817f00000000000000000000000000000000000000000000000000000000000000008560400151610c499190611528565b610c53919061154a565b610c5d9190611511565b9450505050505b919050565b60078181548110610c7957600080fd5b600091825260209091206004909102018054600182015460028301546003909301549193506001600160a01b0316919084565b6000546001600160a01b03163314610cd65760405162461bcd60e51b815260040161031990611450565b610ce06000611126565b565b6000546001600160a01b03163314610d0c5760405162461bcd60e51b815260040161031990611450565b60025460ff1615610d2f5760405162461bcd60e51b815260040161031990611485565b60008111610d755760405162461bcd60e51b8152602060048201526013602482015272416d6f756e74206d757374206265203e20302160681b6044820152606401610319565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610dd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfd9190611437565b811115610e4c5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e7420657863656564732062616c616e6365210000000000000000006044820152606401610319565b600654600554610e5c9190611511565b811015610ec15760405162461bcd60e51b815260206004820152602d60248201527f416d6f756e74206d75737420626520626967676572207468616e20707265766960448201526c6f75732061737369676e65642160981b6064820152608401610319565b600654600554610ed19190611511565b610edb9082611511565b600655600555565b60026001541415610f365760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610319565b60026001556000546001600160a01b03163314610f655760405162461bcd60e51b815260040161031990611450565b60025460ff161580610f7957506006548111155b610fc55760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e7420657863656564732062616c616e636520616e6420496e6974006044820152606401610319565b80600554610fd39190611511565b600555600654610fe4908290611511565b60065561102d610ffc6000546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690836110cf565b5060018055565b6000546001600160a01b0316331461105e5760405162461bcd60e51b815260040161031990611450565b6001600160a01b0381166110c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610319565b6110cc81611126565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611121908490611176565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006111cb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112489092919063ffffffff16565b80519091501561112157808060200190518101906111e99190611569565b6111215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610319565b60606112578484600085611261565b90505b9392505050565b6060824710156112c25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610319565b843b6113105760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610319565b600080866001600160a01b0316858760405161132c91906115bb565b60006040518083038185875af1925050503d8060008114611369576040519150601f19603f3d011682016040523d82523d6000602084013e61136e565b606091505b509150915061137e828286611389565b979650505050505050565b6060831561139857508161125a565b8251156113a85782518084602001fd5b8160405162461bcd60e51b815260040161031991906115d7565b6000602082840312156113d457600080fd5b5035919050565b80356001600160a01b0381168114610c6457600080fd5b6000806040838503121561140557600080fd5b61140e836113db565b946020939093013593505050565b60006020828403121561142e57600080fd5b61125a826113db565b60006020828403121561144957600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526013908201527256657374696e6720697320537461727465642160681b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156114f1576114f16114c8565b500190565b600060001982141561150a5761150a6114c8565b5060010190565b600082821015611523576115236114c8565b500390565b60008261154557634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611564576115646114c8565b500290565b60006020828403121561157b57600080fd5b8151801515811461125a57600080fd5b60005b838110156115a657818101518382015260200161158e565b838111156115b5576000848401525b50505050565b600082516115cd81846020870161158b565b9190910192915050565b60208152600082518060208401526115f681604085016020870161158b565b601f01601f1916919091016040019291505056fea26469706673582212200e661082c70d51cc8150ecd94bf16c3a3047d3b1faa6d0a3c9aaa9e1b88b812464736f6c634300080a0033",
  "deployedSourceMap": "328:6825:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:107;;;:::i;:::-;;;160:25:9;;;148:2;133:18;6943:107:7;;;;;;;;2045:89;2120:6;2045:89;;;-1:-1:-1;;;;;360:32:9;;;342:51;;330:2;315:18;2045:89:7;196:203:9;3392:349:7;;;:::i;:::-;;7056:95;7129:15;7056:95;;4441:1113;;;;;;:::i;:::-;;:::i;1085:31::-;;;;;;2140:1246;;;;;;:::i;:::-;;:::i;5560:865::-;;;;;;:::i;:::-;;:::i;936:21::-;;;;;;;;;;;;1382:14:9;;1375:22;1357:41;;1345:2;1330:18;936:21:7;1217:187:9;1299:41:7;;;;;;:::i;:::-;;:::i;:::-;;;;1640:25:9;;;-1:-1:-1;;;;;1701:32:9;;;1696:2;1681:18;;1674:60;1750:18;;;1743:34;1808:2;1793:18;;1786:34;1627:3;1612:19;1299:41:7;1409:417:9;1605:92:0;;;:::i;963:24:7:-;;;;;;973:85:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;3747:688:7;;;;;;:::i;:::-;;:::i;6431:506::-;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;6943:107:7:-;7012:31;;-1:-1:-1;;;7012:31:7;;7037:4;7012:31;;;342:51:9;6986:7:7;;7012:6;-1:-1:-1;;;;;7012:16:7;;;;315:18:9;;7012:31:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7005:38;;6943:107;:::o;3392:349::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1692:9:7::1;::::0;::::1;;1691:10;1683:42;;;;-1:-1:-1::0;;;1683:42:7::1;;;;;;;:::i;:::-;3563:28:::2;::::0;3528:31:::2;::::0;-1:-1:-1;;;3528:31:7;;3553:4:::2;3528:31;::::0;::::2;342:51:9::0;3528:6:7::2;-1:-1:-1::0;;;;;3528:16:7::2;::::0;::::2;::::0;315:18:9;;3528:31:7::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;3507:141;;;::::0;-1:-1:-1;;;3507:141:7;;2931:2:9;3507:141:7::2;::::0;::::2;2913:21:9::0;2970:2;2950:18;;;2943:30;3009:33;2989:18;;;2982:61;3060:18;;3507:141:7::2;2729:355:9::0;3507:141:7::2;3658:9;:16:::0;;-1:-1:-1;;3658:16:7::2;3670:4;3658:16;::::0;;3696::::2;7129:15:::0;;7056:95;3696:16:::2;3684:9;:28:::0;3727:7:::2;::::0;::::2;::::0;;;::::2;3392:349::o:0;4441:1113::-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;3291:2:9;2251:63:1;;;3273:21:9;3330:2;3310:18;;;3303:30;3369:33;3349:18;;;3342:61;3420:18;;2251:63:1;3089:355:9;2251:63:1;1680:1;2389:7;:18;4600:10:7::1;4505:39;4577:35:::0;;;:14:::1;:35;::::0;;;;:45;4547:16:::1;:85:::0;;:16;;4577:45;4547:85;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;4677:27:::1;4547:85;::::0;;;::::1;;4677:27:::0;;::::1;::::0;1045:6:0;;4547:85:7;;-1:-1:-1;4663:10:7::1;-1:-1:-1::0;;;;;4677:27:7;;::::1;4663:41:::0;::::1;::::0;1045:6:0;;;4729:21:7::1;4663:41:::0;;4781:24:::1;;;4798:7;4781:24;4760:137;;;::::0;-1:-1:-1;;;4760:137:7;;3783:2:9;4760:137:7::1;::::0;::::1;3765:21:9::0;3822:2;3802:18;;;3795:30;3861:34;3841:18;;;3834:62;3932:34;3912:18;;;3905:62;-1:-1:-1;;;3983:19:9;;;3976:33;4026:19;;4760:137:7::1;3581:470:9::0;4760:137:7::1;4951:10;4928:35;::::0;;;:14:::1;:35;::::0;;;;:47:::1;;::::0;::::1;;4907:117;;;::::0;-1:-1:-1;;;4907:117:7;;4258:2:9;4907:117:7::1;::::0;::::1;4240:21:9::0;4297:2;4277:18;;;4270:30;4336:25;4316:18;;;4309:53;4379:18;;4907:117:7::1;4056:347:9::0;4907:117:7::1;5052:1;5042:7;:11;5034:42;;;::::0;-1:-1:-1;;;5034:42:7;;4610:2:9;5034:42:7::1;::::0;::::1;4592:21:9::0;4649:2;4629:18;;;4622:30;-1:-1:-1;;;4668:18:9;;;4661:48;4726:18;;5034:42:7::1;4408:342:9::0;5034:42:7::1;5118;5148:10;5118:21;:42::i;:::-;5107:7;:53;;5086:133;;;::::0;-1:-1:-1;;;5086:133:7;;4957:2:9;5086:133:7::1;::::0;::::1;4939:21:9::0;4996:2;4976:18;;;4969:30;5035:34;5015:18;;;5008:62;-1:-1:-1;;;5086:18:9;;;5079:31;5127:19;;5086:133:7::1;4755:397:9::0;5086:133:7::1;5345:7;5287:15;:43;;;:65;;;;:::i;:::-;5229:43;::::0;::::1;:123:::0;5420:27:::1;::::0;::::1;::::0;-1:-1:-1;;;;;5420:27:7;;::::1;::::0;5467:48:::1;::::0;:6:::1;:19;5420:27:::0;5507:7;5467:19:::1;:48::i;:::-;5530:17;::::0;160:25:9;;;5530:17:7::1;::::0;148:2:9;133:18;5530:17:7::1;;;;;;;-1:-1:-1::0;;1637:1:1;2562:22;;-1:-1:-1;;;4441:1113:7:o;2140:1246::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1692:9:7::1;::::0;::::1;;1691:10;1683:42;;;;-1:-1:-1::0;;;1683:42:7::1;;;;;;;:::i;:::-;2329:32:::2;;2318:7;:43;;2297:164;;;::::0;-1:-1:-1;;;2297:164:7;;5624:2:9;2297:164:7::2;::::0;::::2;5606:21:9::0;5663:2;5643:18;;;5636:30;5702:34;5682:18;;;5675:62;5773:34;5753:18;;;5746:62;-1:-1:-1;;;5824:19:9;;;5817:41;5875:19;;2297:164:7::2;5422:478:9::0;2297:164:7::2;2489:1;2479:7;:11;2471:56;;;::::0;-1:-1:-1;;;2471:56:7;;6107:2:9;2471:56:7::2;::::0;::::2;6089:21:9::0;;;6126:18;;;6119:30;6185:34;6165:18;;;6158:62;6237:18;;2471:56:7::2;5905:356:9::0;2471:56:7::2;-1:-1:-1::0;;;;;2542:28:7;::::2;;::::0;;;:14:::2;:28;::::0;;;;:40:::2;;::::0;::::2;;2537:732;;-1:-1:-1::0;;;;;2632:28:7;;::::2;2598:31;2632:28:::0;;;:14:::2;:28;::::0;;;;;;;2698:16:::2;::::0;;2674:40;;2754:4:::2;2728:23:::0;;::::2;:30:::0;;-1:-1:-1;;2728:30:7::2;::::0;::::2;::::0;;2772:21:::2;:40:::0;;;;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;;2772:40:7;;::::2;::::0;::::2;::::0;;;2865:59;;::::2;::::0;::::2;::::0;;2881:16;;2865:59;;;;::::2;::::0;;;;;;;;;;;;;;;2826:16:::2;:112:::0;;;;::::2;::::0;;;;;;;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;;;;;;;;;2952:18;;2632:28;;2698:16;2952:18:::2;::::0;::::2;:::i;:::-;;;;;;2584:397;2537:732;;;-1:-1:-1::0;;;;;3077:28:7;::::2;3001:39;3077:28:::0;;;:14:::2;:28;::::0;;;;:38;3043:16:::2;:86:::0;;:16;;3077:38;3043:86;::::2;;;;;:::i;:::-;;;;;;;;;;;3001:128;;3251:7;3197:15;:35;;;:61;;;;:::i;:::-;3143:35;::::0;;::::2;:115:::0;2537:732:::2;3372:7;3325:32;;:54;;;;:::i;:::-;3278:32;:101:::0;-1:-1:-1;;2140:1246:7:o;5560:865::-;1566:9;;5695:7;;1566:9;;1558:49;;;;-1:-1:-1;;;1558:49:7;;6738:2:9;1558:49:7;;;6720:21:9;6777:2;6757:18;;;6750:30;6816:29;6796:18;;;6789:57;6863:18;;1558:49:7;6536:351:9;1558:49:7;-1:-1:-1;;;;;5751:28:7;::::1;5718:30;5751:28:::0;;;:14:::1;:28;::::0;;;;;;;;5718:61;;;;::::1;::::0;;;;;;;::::1;;::::0;::::1;;;;::::0;;::::1;::::0;;;5789:63:::1;;;::::0;-1:-1:-1;;;5789:63:7;;7094:2:9;5789:63:7::1;::::0;::::1;7076:21:9::0;7133:2;7113:18;;;7106:30;7172:29;7152:18;;;7145:57;7219:18;;5789:63:7::1;6892:351:9::0;5789:63:7::1;5862:38;5903:16;5933:11;:21;;;5903:61;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;5862:102:::1;::::0;;::::1;::::0;::::1;::::0;;5903:61:::1;::::0;;::::1;::::0;;::::1;5862:102:::0;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;5862:102:7::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;;::::0;;;;;;-1:-1:-1;5996:16:7::1;7129:15:::0;;7056:95;5996:16:::1;5974:38;;6022:20;6073:14;6060:9;;6046:11;:23;;;;:::i;:::-;6045:42;;;;:::i;:::-;6022:65;;6117:13;6101:12;:29;6097:88;;-1:-1:-1::0;6161:13:7::1;6097:88;6198:17:::0;6194:64:::1;;-1:-1:-1::0;6246:1:7::1;6194:64;6375:15;:43;;;6359:12;6326:13;6288:15;:35;;;:51;;;;:::i;:::-;6287:84;;;;:::i;:::-;6286:132;;;;:::i;:::-;6267:151;;;;;;1617:1;5560:865:::0;;;:::o;1299:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1299:41:7;;;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3747:688:7:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1692:9:7::1;::::0;::::1;;1691:10;1683:42;;;;-1:-1:-1::0;;;1683:42:7::1;;;;;;;:::i;:::-;3897:1:::2;3887:7;:11;3879:43;;;::::0;-1:-1:-1;;;3879:43:7;;7845:2:9;3879:43:7::2;::::0;::::2;7827:21:9::0;7884:2;7864:18;;;7857:30;-1:-1:-1;;;7903:18:9;;;7896:49;7962:18;;3879:43:7::2;7643:343:9::0;3879:43:7::2;3964:31;::::0;-1:-1:-1;;;3964:31:7;;3989:4:::2;3964:31;::::0;::::2;342:51:9::0;3964:6:7::2;-1:-1:-1::0;;;;;3964:16:7::2;::::0;::::2;::::0;315:18:9;;3964:31:7::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3953:7;:42;;3932:112;;;::::0;-1:-1:-1;;;3932:112:7;;8193:2:9;3932:112:7::2;::::0;::::2;8175:21:9::0;8232:2;8212:18;;;8205:30;8271:25;8251:18;;;8244:53;8314:18;;3932:112:7::2;7991:347:9::0;3932:112:7::2;4133:32;;4102:28;;:63;;;;:::i;:::-;4075:7;:90;;4054:182;;;::::0;-1:-1:-1;;;4054:182:7;;8545:2:9;4054:182:7::2;::::0;::::2;8527:21:9::0;8584:2;8564:18;;;8557:30;8623:34;8603:18;;;8596:62;-1:-1:-1;;;8674:18:9;;;8667:43;8727:19;;4054:182:7::2;8343:409:9::0;4054:182:7::2;4347:32;;4316:28;;:63;;;;:::i;:::-;4293:87;::::0;:7;:87:::2;:::i;:::-;4246:32;:134:::0;4390:28:::2;:38:::0;3747:688::o;6431:506::-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;3291:2:9;2251:63:1;;;3273:21:9;3330:2;3310:18;;;3303:30;3369:33;3349:18;;;3342:61;3420:18;;2251:63:1;3089:355:9;2251:63:1;1680:1;2389:7;:18;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0::1;1177:68;;;;-1:-1:-1::0;;;1177:68:0::1;;;;;;;:::i;:::-;6571:9:7::2;::::0;::::2;;6570:10;::::0;:57:::2;;;6595:32;;6584:7;:43;;6570:57;6549:135;;;::::0;-1:-1:-1;;;6549:135:7;;2931:2:9;6549:135:7::2;::::0;::::2;2913:21:9::0;2970:2;2950:18;;;2943:30;3009:33;2989:18;;;2982:61;3060:18;;6549:135:7::2;2729:355:9::0;6549:135:7::2;6756:7;6725:28;;:38;;;;:::i;:::-;6694:28;:69:::0;6820:32:::2;::::0;:54:::2;::::0;6867:7;;6820:54:::2;:::i;:::-;6773:32;:101:::0;6884:46:::2;6912:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;6912:7:7::2;-1:-1:-1::0;;;;;6884:6:7::2;:19;::::0;6922:7;6884:19:::2;:46::i;:::-;-1:-1:-1::0;1637:1:1;2562:22;;6431:506:7:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;8959:2:9;1926:73:0::1;::::0;::::1;8941:21:9::0;8998:2;8978:18;;;8971:30;9037:34;9017:18;;;9010:62;-1:-1:-1;;;9088:18:9;;;9081:36;9134:19;;1926:73:0::1;8757:402:9::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;634:205:3:-;773:58;;;-1:-1:-1;;;;;9356:32:9;;773:58:3;;;9338:51:9;9405:18;;;;9398:34;;;773:58:3;;;;;;;;;;9311:18:9;;;;773:58:3;;;;;;;;-1:-1:-1;;;;;773:58:3;-1:-1:-1;;;773:58:3;;;746:86;;766:5;;746:19;:86::i;:::-;634:205;;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;3140:706:3:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:3;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:3;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:3;;9927:2:9;3744:85:3;;;9909:21:9;9966:2;9946:18;;;9939:30;10005:34;9985:18;;;9978:62;-1:-1:-1;;;10056:18:9;;;10049:40;10106:19;;3744:85:3;9725:406:9;3461:223:4;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:4;;10338:2:9;4737:81:4;;;10320:21:9;10377:2;10357:18;;;10350:30;10416:34;10396:18;;;10389:62;-1:-1:-1;;;10467:18:9;;;10460:36;10513:19;;4737:81:4;10136:402:9;4737:81:4;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:4;;10745:2:9;4828:60:4;;;10727:21:9;10784:2;10764:18;;;10757:30;10823:31;10803:18;;;10796:59;10872:18;;4828:60:4;10543:353:9;4828:60:4;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:4;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:4:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:4;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:4;;;;;;;;:::i;404:180:9:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;-1:-1:-1;555:23:9;;404:180;-1:-1:-1;404:180:9:o;589:173::-;657:20;;-1:-1:-1;;;;;706:31:9;;696:42;;686:70;;752:1;749;742:12;767:254;835:6;843;896:2;884:9;875:7;871:23;867:32;864:52;;;912:1;909;902:12;864:52;935:29;954:9;935:29;:::i;:::-;925:39;1011:2;996:18;;;;983:32;;-1:-1:-1;;;767:254:9:o;1026:186::-;1085:6;1138:2;1126:9;1117:7;1113:23;1109:32;1106:52;;;1154:1;1151;1144:12;1106:52;1177:29;1196:9;1177:29;:::i;1831:184::-;1901:6;1954:2;1942:9;1933:7;1929:23;1925:32;1922:52;;;1970:1;1967;1960:12;1922:52;-1:-1:-1;1993:16:9;;1831:184;-1:-1:-1;1831:184:9:o;2020:356::-;2222:2;2204:21;;;2241:18;;;2234:30;2300:34;2295:2;2280:18;;2273:62;2367:2;2352:18;;2020:356::o;2381:343::-;2583:2;2565:21;;;2622:2;2602:18;;;2595:30;-1:-1:-1;;;2656:2:9;2641:18;;2634:49;2715:2;2700:18;;2381:343::o;3449:127::-;3510:10;3505:3;3501:20;3498:1;3491:31;3541:4;3538:1;3531:15;3565:4;3562:1;3555:15;5157:127;5218:10;5213:3;5209:20;5206:1;5199:31;5249:4;5246:1;5239:15;5273:4;5270:1;5263:15;5289:128;5329:3;5360:1;5356:6;5353:1;5350:13;5347:39;;;5366:18;;:::i;:::-;-1:-1:-1;5402:9:9;;5289:128::o;6266:135::-;6305:3;-1:-1:-1;;6326:17:9;;6323:43;;;6346:18;;:::i;:::-;-1:-1:-1;6393:1:9;6382:13;;6266:135::o;6406:125::-;6446:4;6474:1;6471;6468:8;6465:34;;;6479:18;;:::i;:::-;-1:-1:-1;6516:9:9;;6406:125::o;7248:217::-;7288:1;7314;7304:132;;7358:10;7353:3;7349:20;7346:1;7339:31;7393:4;7390:1;7383:15;7421:4;7418:1;7411:15;7304:132;-1:-1:-1;7450:9:9;;7248:217::o;7470:168::-;7510:7;7576:1;7572;7568:6;7564:14;7561:1;7558:21;7553:1;7546:9;7539:17;7535:45;7532:71;;;7583:18;;:::i;:::-;-1:-1:-1;7623:9:9;;7470:168::o;9443:277::-;9510:6;9563:2;9551:9;9542:7;9538:23;9534:32;9531:52;;;9579:1;9576;9569:12;9531:52;9611:9;9605:16;9664:5;9657:13;9650:21;9643:5;9640:32;9630:60;;9686:1;9683;9676:12;10901:258;10973:1;10983:113;10997:6;10994:1;10991:13;10983:113;;;11073:11;;;11067:18;11054:11;;;11047:39;11019:2;11012:10;10983:113;;;11114:6;11111:1;11108:13;11105:48;;;11149:1;11140:6;11135:3;11131:16;11124:27;11105:48;;10901:258;;;:::o;11164:274::-;11293:3;11331:6;11325:13;11347:53;11393:6;11388:3;11381:4;11373:6;11369:17;11347:53;:::i;:::-;11416:16;;;;;11164:274;-1:-1:-1;;11164:274:9:o;11443:383::-;11592:2;11581:9;11574:21;11555:4;11624:6;11618:13;11667:6;11662:2;11651:9;11647:18;11640:34;11683:66;11742:6;11737:2;11726:9;11722:18;11717:2;11709:6;11705:15;11683:66;:::i;:::-;11810:2;11789:15;-1:-1:-1;;11785:29:9;11770:45;;;;11817:2;11766:54;;11443:383;-1:-1:-1;;11443:383:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "TokenVesting",
    "version": 1
  },
  "offset": [
    328,
    7153
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x544736E6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x8DD996C3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xB5ABE85A EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x544736E6 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x6D3CBE21 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x37BDC99B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x37BDC99B EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x40F1031E EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x419544A0 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x4C44124F EQ PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x221ABF34 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x117 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x2EF JUMP JUMPDEST STOP JUMPDEST TIMESTAMP PUSH2 0x10D JUMP JUMPDEST PUSH2 0x162 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH2 0x10D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F2 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x141C JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x117 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x117 JUMP JUMPDEST PUSH2 0x162 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x10D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x142 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xCE2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST LT ISZERO PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420657863656564732062616C616E636520616E6420496E697400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x432 TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH32 0xFD3415C24B2B4519F08B7935C13F86EA010C77B3FF9BF448A474AE3B2414FCE0 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x4DD JUMPI PUSH2 0x4DD PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x4 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SLOAD SWAP2 SLOAD SWAP1 SWAP3 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 EQ SWAP3 SWAP1 SWAP2 AND EQ DUP2 DUP1 PUSH2 0x514 JUMPI POP DUP1 JUMPDEST PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A206F6E6C792062656E65666963696172792061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E64206F776E65722063616E2072656C656173652076657374656420746F6B65 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x6E73 PUSH1 0xF0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x319 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420696E2056657374696E67205363686564756C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH2 0x641 CALLER PUSH2 0xA40 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420776974686472617761626C6520696E737566666963656E7473 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST DUP4 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH2 0x6ED SWAP1 PUSH32 0x0 AND DUP3 DUP8 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0xFB81F9B30D73D830C3544B34D827C08142579EE75710B490BAB0B3995468C565 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A2063616E6E6F74206372656174652076657374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E67207363686564756C652062656361757365206E6F742073756666696369 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x656E7420746F6B656E73 PUSH1 0xB0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A20616D6F756E74206D757374206265203E2030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH2 0x9D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 SLOAD DUP3 SSTORE PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 DUP4 ADD SWAP1 SWAP2 SSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP10 OR SWAP1 SWAP2 SSTORE DUP5 MLOAD PUSH1 0x80 DUP2 ADD DUP7 MSTORE DUP4 SLOAD DUP2 MSTORE SWAP6 DUP7 ADD SWAP8 DUP9 MSTORE SWAP4 DUP6 ADD DUP10 DUP2 MSTORE PUSH1 0x60 DUP7 ADD DUP8 DUP2 MSTORE PUSH1 0x7 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE DUP9 MSTORE SWAP6 MLOAD SWAP2 DUP4 MUL PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP7 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE SWAP4 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68B SWAP1 SWAP2 ADD SSTORE DUP3 SLOAD SWAP2 SWAP3 SWAP1 PUSH2 0x9CB DUP4 PUSH2 0x14F6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xA04 JUMPI PUSH2 0xA04 PUSH2 0x14B2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST DUP1 PUSH1 0x6 SLOAD PUSH2 0xA39 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x6 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E67206973206E6F74205374617274656420596574210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42656E656669636961727920646F6573206E6F74206578697374210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 PUSH1 0x0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xB31 JUMPI PUSH2 0xB31 PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 POP PUSH2 0xB81 TIMESTAMP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x3 SLOAD DUP4 PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT PUSH2 0xC0A JUMPI POP PUSH32 0x0 JUMPDEST DUP1 PUSH2 0xC13 JUMPI POP PUSH1 0x1 JUMPDEST DUP3 PUSH1 0x60 ADD MLOAD DUP2 PUSH32 0x0 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0xCE0 PUSH1 0x0 PUSH2 0x1126 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x416D6F756E74206D757374206265203E203021 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDFD SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420657863656564732062616C616E636521000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D75737420626520626967676572207468616E207072657669 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6F75732061737369676E656421 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xED1 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0xEDB SWAP1 DUP3 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xF79 JUMPI POP PUSH1 0x6 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xFC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420657863656564732062616C616E636520616E6420496E697400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD PUSH2 0xFD3 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x6 SLOAD PUSH2 0xFE4 SWAP1 DUP3 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0x102D PUSH2 0xFFC PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 DUP4 PUSH2 0x10CF JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x105E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0x1126 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1121 SWAP1 DUP5 SWAP1 PUSH2 0x1176 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1248 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1121 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11E9 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1257 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1261 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x319 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x319 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x132C SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1369 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x136E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x137E DUP3 DUP3 DUP7 PUSH2 0x1389 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1398 JUMPI POP DUP2 PUSH2 0x125A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x13A8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140E DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125A DUP3 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x56657374696E67206973205374617274656421 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x14F1 JUMPI PUSH2 0x14F1 PUSH2 0x14C8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x150A JUMPI PUSH2 0x150A PUSH2 0x14C8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1523 JUMPI PUSH2 0x1523 PUSH2 0x14C8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1545 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1564 JUMPI PUSH2 0x1564 PUSH2 0x14C8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x125A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x158E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15B5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x15CD DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x158B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x15F6 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x158B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE PUSH7 0x1082C70D51CC81 POP 0xEC 0xD9 0x4B CALL PUSH13 0x3A3047D3B1FAA6D0A3C9AAA9E1 0xB8 DUP12 DUP2 0x24 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x544736E6"
    },
    "38": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x215"
    },
    "64": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DD996C3"
    },
    "71": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x226"
    },
    "75": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB5ABE85A"
    },
    "82": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x239"
    },
    "86": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x24C"
    },
    "97": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "101": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "REVERT",
      "path": "7"
    },
    "102": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "104": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x544736E6"
    },
    "109": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AC"
    },
    "113": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6D3CBE21"
    },
    "120": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C9"
    },
    "124": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x204"
    },
    "135": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x78E97925"
    },
    "142": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20C"
    },
    "146": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "150": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "REVERT",
      "path": "7"
    },
    "151": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "153": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x37BDC99B"
    },
    "158": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "GT",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x37BDC99B"
    },
    "169": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16A"
    },
    "173": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x40F1031E"
    },
    "180": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17D"
    },
    "184": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x419544A0"
    },
    "191": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x186"
    },
    "195": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4C44124F"
    },
    "202": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x199"
    },
    "206": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "210": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "REVERT",
      "path": "7"
    },
    "211": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "212": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "213": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x12065FE0"
    },
    "218": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "219": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "223": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "224": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x21DF0DA7"
    },
    "229": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "230": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x120"
    },
    "233": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "235": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x221ABF34"
    },
    "240": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "241": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15A"
    },
    "244": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "246": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x29CB924D"
    },
    "251": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "EQ",
      "path": "7"
    },
    "252": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x164"
    },
    "255": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "256": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "257": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        328,
        7153
      ],
      "op": "REVERT",
      "path": "7"
    },
    "261": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "262": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D"
    },
    "265": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25F"
    },
    "268": {
      "fn": "AniwarVesting.getBalance",
      "jump": "i",
      "offset": [
        6943,
        7050
      ],
      "op": "JUMP",
      "path": "7"
    },
    "269": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "270": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "272": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "273": {
      "op": "SWAP1"
    },
    "274": {
      "op": "DUP2"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "278": {
      "op": "ADD"
    },
    "279": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "280": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "282": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "283": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "DUP1",
      "path": "7"
    },
    "284": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "285": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "SUB",
      "path": "7"
    },
    "286": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "287": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "RETURN",
      "path": "7"
    },
    "288": {
      "fn": "AniwarVesting.getToken",
      "offset": [
        2045,
        2134
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "289": {
      "fn": "AniwarVesting.getToken",
      "offset": [
        2120,
        2126
      ],
      "op": "PUSH32",
      "path": "7",
      "statement": 0,
      "value": "0x0"
    },
    "322": {
      "fn": "AniwarVesting.getToken",
      "offset": [
        2045,
        2134
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "323": {
      "fn": "AniwarVesting.getToken",
      "offset": [
        2045,
        2134
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "325": {
      "fn": "AniwarVesting.getToken",
      "offset": [
        2045,
        2134
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "332": {
      "op": "SHL"
    },
    "333": {
      "op": "SUB"
    },
    "334": {
      "op": "SWAP1"
    },
    "335": {
      "op": "SWAP2"
    },
    "336": {
      "op": "AND"
    },
    "337": {
      "op": "DUP2"
    },
    "338": {
      "op": "MSTORE"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "fn": "AniwarVesting.getToken",
      "offset": [
        2045,
        2134
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x117"
    },
    "345": {
      "op": "JUMP"
    },
    "346": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3392,
        3741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "347": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3392,
        3741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "350": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3392,
        3741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EF"
    },
    "353": {
      "fn": "AniwarVesting.startAllSchedule",
      "jump": "i",
      "offset": [
        3392,
        3741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "354": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3392,
        3741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "355": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3392,
        3741
      ],
      "op": "STOP",
      "path": "7"
    },
    "356": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7056,
        7151
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "357": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7129,
        7144
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 1
    },
    "358": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7056,
        7151
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D"
    },
    "361": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7056,
        7151
      ],
      "op": "JUMP",
      "path": "7"
    },
    "362": {
      "fn": "AniwarVesting.release",
      "offset": [
        4441,
        5554
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "363": {
      "fn": "AniwarVesting.release",
      "offset": [
        4441,
        5554
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "366": {
      "fn": "AniwarVesting.release",
      "offset": [
        4441,
        5554
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x178"
    },
    "369": {
      "fn": "AniwarVesting.release",
      "offset": [
        4441,
        5554
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "370": {
      "fn": "AniwarVesting.release",
      "offset": [
        4441,
        5554
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "372": {
      "fn": "AniwarVesting.release",
      "offset": [
        4441,
        5554
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13C2"
    },
    "375": {
      "fn": "AniwarVesting.release",
      "jump": "i",
      "offset": [
        4441,
        5554
      ],
      "op": "JUMP",
      "path": "7"
    },
    "376": {
      "fn": "AniwarVesting.release",
      "offset": [
        4441,
        5554
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "377": {
      "fn": "AniwarVesting.release",
      "offset": [
        4441,
        5554
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x460"
    },
    "380": {
      "fn": "AniwarVesting.release",
      "jump": "i",
      "offset": [
        4441,
        5554
      ],
      "op": "JUMP",
      "path": "7"
    },
    "381": {
      "offset": [
        1085,
        1116
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "382": {
      "fn": "AniwarVesting.release",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D"
    },
    "385": {
      "fn": "AniwarVesting.release",
      "offset": [
        1085,
        1116
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "387": {
      "fn": "AniwarVesting.release",
      "offset": [
        1085,
        1116
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "388": {
      "fn": "AniwarVesting.release",
      "offset": [
        1085,
        1116
      ],
      "op": "DUP2",
      "path": "7"
    },
    "389": {
      "fn": "AniwarVesting.release",
      "offset": [
        1085,
        1116
      ],
      "op": "JUMP",
      "path": "7"
    },
    "390": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2140,
        3386
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "391": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2140,
        3386
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "394": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2140,
        3386
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x194"
    },
    "397": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2140,
        3386
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "398": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2140,
        3386
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "400": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2140,
        3386
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F2"
    },
    "403": {
      "fn": "AniwarVesting.createVestingSchedule",
      "jump": "i",
      "offset": [
        2140,
        3386
      ],
      "op": "JUMP",
      "path": "7"
    },
    "404": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2140,
        3386
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "405": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2140,
        3386
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x72B"
    },
    "408": {
      "fn": "AniwarVesting.createVestingSchedule",
      "jump": "i",
      "offset": [
        2140,
        3386
      ],
      "op": "JUMP",
      "path": "7"
    },
    "409": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "410": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D"
    },
    "413": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A7"
    },
    "416": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "417": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "419": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x141C"
    },
    "422": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        5560,
        6425
      ],
      "op": "JUMP",
      "path": "7"
    },
    "423": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "424": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA40"
    },
    "427": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        5560,
        6425
      ],
      "op": "JUMP",
      "path": "7"
    },
    "428": {
      "offset": [
        936,
        957
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "429": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "431": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "432": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B9"
    },
    "435": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "436": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "438": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "AND",
      "path": "7"
    },
    "439": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "DUP2",
      "path": "7"
    },
    "440": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "JUMP",
      "path": "7"
    },
    "441": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "442": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "444": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        936,
        957
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "445": {
      "op": "SWAP1"
    },
    "446": {
      "op": "ISZERO"
    },
    "447": {
      "op": "ISZERO"
    },
    "448": {
      "op": "DUP2"
    },
    "449": {
      "op": "MSTORE"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "452": {
      "op": "ADD"
    },
    "453": {
      "offset": [
        936,
        957
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x117"
    },
    "456": {
      "op": "JUMP"
    },
    "457": {
      "offset": [
        1299,
        1340
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "458": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DC"
    },
    "461": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D7"
    },
    "464": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "465": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "467": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13C2"
    },
    "470": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        1299,
        1340
      ],
      "op": "JUMP",
      "path": "7"
    },
    "471": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "472": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC69"
    },
    "475": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        1299,
        1340
      ],
      "op": "JUMP",
      "path": "7"
    },
    "476": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "477": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "479": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP1",
      "path": "7"
    },
    "480": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "481": {
      "op": "SWAP5"
    },
    "482": {
      "op": "DUP6"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "490": {
      "op": "SHL"
    },
    "491": {
      "op": "SUB"
    },
    "492": {
      "op": "SWAP1"
    },
    "493": {
      "op": "SWAP4"
    },
    "494": {
      "op": "AND"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "497": {
      "op": "DUP6"
    },
    "498": {
      "op": "ADD"
    },
    "499": {
      "op": "MSTORE"
    },
    "500": {
      "op": "SWAP2"
    },
    "501": {
      "op": "DUP4"
    },
    "502": {
      "op": "ADD"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "506": {
      "op": "DUP3"
    },
    "507": {
      "op": "ADD"
    },
    "508": {
      "op": "MSTORE"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "511": {
      "op": "ADD"
    },
    "512": {
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x117"
    },
    "515": {
      "op": "JUMP"
    },
    "516": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "517": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "520": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCAC"
    },
    "523": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "524": {
      "offset": [
        963,
        987
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "525": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        963,
        987
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D"
    },
    "528": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        963,
        987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "530": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        963,
        987
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "531": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        963,
        987
      ],
      "op": "DUP2",
      "path": "7"
    },
    "532": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        963,
        987
      ],
      "op": "JUMP",
      "path": "7"
    },
    "533": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "536": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "546": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142"
    },
    "549": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "550": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3747,
        4435
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "551": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3747,
        4435
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "554": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3747,
        4435
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x234"
    },
    "557": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3747,
        4435
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "558": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3747,
        4435
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "560": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3747,
        4435
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13C2"
    },
    "563": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "jump": "i",
      "offset": [
        3747,
        4435
      ],
      "op": "JUMP",
      "path": "7"
    },
    "564": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3747,
        4435
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "565": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3747,
        4435
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCE2"
    },
    "568": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "jump": "i",
      "offset": [
        3747,
        4435
      ],
      "op": "JUMP",
      "path": "7"
    },
    "569": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6431,
        6937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "570": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6431,
        6937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "573": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6431,
        6937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x247"
    },
    "576": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6431,
        6937
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "577": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6431,
        6937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "579": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6431,
        6937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13C2"
    },
    "582": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "jump": "i",
      "offset": [
        6431,
        6937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "583": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6431,
        6937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "584": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6431,
        6937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEE3"
    },
    "587": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "jump": "i",
      "offset": [
        6431,
        6937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "592": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "595": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "596": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141C"
    },
    "601": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "602": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1034"
    },
    "606": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "607": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "608": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 3,
      "value": "0x40"
    },
    "610": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "611": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "616": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "618": {
      "op": "SHL"
    },
    "619": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "620": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "621": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7037,
        7041
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "622": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "624": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP3",
      "path": "7"
    },
    "625": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "ADD",
      "path": "7"
    },
    "626": {
      "op": "MSTORE"
    },
    "627": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6986,
        6993
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "629": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6986,
        6993
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "630": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7018
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7028
      ],
      "op": "AND",
      "path": "7"
    },
    "672": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7028
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "673": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7028
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "678": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7028
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "681": {
      "op": "ADD"
    },
    "682": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "684": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "686": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "687": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP1",
      "path": "7"
    },
    "688": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP4",
      "path": "7"
    },
    "689": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "SUB",
      "path": "7"
    },
    "690": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "691": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP7",
      "path": "7"
    },
    "692": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "GAS",
      "path": "7"
    },
    "693": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "694": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "695": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP1",
      "path": "7"
    },
    "696": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "697": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C6"
    },
    "700": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "701": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "702": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "704": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP1",
      "path": "7"
    },
    "705": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "706": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "707": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "709": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "REVERT",
      "path": "7"
    },
    "710": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "711": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "POP",
      "path": "7"
    },
    "712": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "POP",
      "path": "7"
    },
    "713": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "POP",
      "path": "7"
    },
    "714": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "POP",
      "path": "7"
    },
    "715": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "717": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "718": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "719": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "721": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "NOT",
      "path": "7"
    },
    "722": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "724": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP3",
      "path": "7"
    },
    "725": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "ADD",
      "path": "7"
    },
    "726": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "AND",
      "path": "7"
    },
    "727": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP3",
      "path": "7"
    },
    "728": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "ADD",
      "path": "7"
    },
    "729": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP1",
      "path": "7"
    },
    "730": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "732": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "733": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "POP",
      "path": "7"
    },
    "734": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "735": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "ADD",
      "path": "7"
    },
    "736": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "737": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EA"
    },
    "740": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "741": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "742": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1437"
    },
    "745": {
      "fn": "AniwarVesting.getBalance",
      "jump": "i",
      "offset": [
        7012,
        7043
      ],
      "op": "JUMP",
      "path": "7"
    },
    "746": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7012,
        7043
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "747": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7005,
        7043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "748": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        7005,
        7043
      ],
      "op": "POP",
      "path": "7"
    },
    "749": {
      "fn": "AniwarVesting.getBalance",
      "offset": [
        6943,
        7050
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "750": {
      "fn": "AniwarVesting.getBalance",
      "jump": "o",
      "offset": [
        6943,
        7050
      ],
      "op": "JUMP",
      "path": "7"
    },
    "751": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3392,
        3741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "752": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "754": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "764": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 4
    },
    "765": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "766": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "769": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "770": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "772": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "779": {
      "op": "SHL"
    },
    "780": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "781": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "782": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "784": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "785": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "788": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "789": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1450"
    },
    "792": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "793": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "794": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "796": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "797": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "798": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "799": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "800": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "801": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "802": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "803": {
      "offset": [
        1692,
        1701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "805": {
      "fn": "Context._msgSender",
      "offset": [
        1692,
        1701
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "806": {
      "fn": "Context._msgSender",
      "offset": [
        1692,
        1701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "808": {
      "fn": "Context._msgSender",
      "offset": [
        1692,
        1701
      ],
      "op": "AND",
      "path": "7"
    },
    "809": {
      "offset": [
        1691,
        1701
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "810": {
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x345"
    },
    "813": {
      "offset": [
        1683,
        1725
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "814": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "816": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "offset": [
        1683,
        1725
      ],
      "op": "DUP2",
      "path": "7"
    },
    "825": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "826": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "828": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "ADD",
      "path": "7"
    },
    "829": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "832": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "833": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1485"
    },
    "836": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1683,
        1725
      ],
      "op": "JUMP",
      "path": "7"
    },
    "837": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "838": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3563,
        3591
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x5"
    },
    "840": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3563,
        3591
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "841": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "843": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "844": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "849": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "851": {
      "op": "SHL"
    },
    "852": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP2",
      "path": "7"
    },
    "853": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "854": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3553,
        3557
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "855": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "857": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP3",
      "path": "7"
    },
    "858": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "ADD",
      "path": "7"
    },
    "859": {
      "op": "MSTORE"
    },
    "860": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3534
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "899": {
      "op": "SHL"
    },
    "900": {
      "op": "SUB"
    },
    "901": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3544
      ],
      "op": "AND",
      "path": "7"
    },
    "902": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "903": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "908": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "911": {
      "op": "ADD"
    },
    "912": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "914": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "916": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "917": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP1",
      "path": "7"
    },
    "918": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP4",
      "path": "7"
    },
    "919": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "SUB",
      "path": "7"
    },
    "920": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP2",
      "path": "7"
    },
    "921": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP7",
      "path": "7"
    },
    "922": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "GAS",
      "path": "7"
    },
    "923": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "924": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "925": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP1",
      "path": "7"
    },
    "926": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "927": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AC"
    },
    "930": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "931": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "932": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "934": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP1",
      "path": "7"
    },
    "935": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "936": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "937": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "939": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "REVERT",
      "path": "7"
    },
    "940": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "941": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "POP",
      "path": "7"
    },
    "942": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "POP",
      "path": "7"
    },
    "943": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "POP",
      "path": "7"
    },
    "944": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "POP",
      "path": "7"
    },
    "945": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "947": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "948": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "949": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "951": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "NOT",
      "path": "7"
    },
    "952": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "954": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP3",
      "path": "7"
    },
    "955": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "ADD",
      "path": "7"
    },
    "956": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "AND",
      "path": "7"
    },
    "957": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP3",
      "path": "7"
    },
    "958": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "ADD",
      "path": "7"
    },
    "959": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP1",
      "path": "7"
    },
    "960": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "962": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "963": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "POP",
      "path": "7"
    },
    "964": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "DUP2",
      "path": "7"
    },
    "965": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "ADD",
      "path": "7"
    },
    "966": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "967": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D0"
    },
    "970": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "971": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "972": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1437"
    },
    "975": {
      "fn": "AniwarVesting.startAllSchedule",
      "jump": "i",
      "offset": [
        3528,
        3559
      ],
      "op": "JUMP",
      "path": "7"
    },
    "976": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3559
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "977": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3591
      ],
      "op": "LT",
      "path": "7"
    },
    "978": {
      "branch": 51,
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3528,
        3591
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "979": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41E"
    },
    "982": {
      "branch": 51,
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "983": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "985": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "DUP2",
      "path": "7"
    },
    "994": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "997": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "999": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1000": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "ADD",
      "path": "7"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1006": {
      "op": "DUP3"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420657863656564732062616C616E636520616E6420496E697400"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1044": {
      "op": "DUP3"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "1053": {
      "op": "JUMP"
    },
    "1054": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3507,
        3648
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1055": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3658,
        3667
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 6,
      "value": "0x2"
    },
    "1057": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3658,
        3674
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1058": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3658,
        3674
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1061": {
      "op": "NOT"
    },
    "1062": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3658,
        3674
      ],
      "op": "AND",
      "path": "7"
    },
    "1063": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3670,
        3674
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1065": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3658,
        3674
      ],
      "op": "OR",
      "path": "7"
    },
    "1066": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3658,
        3674
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1067": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3658,
        3674
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1068": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3696,
        3712
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 7,
      "value": "0x432"
    },
    "1071": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7129,
        7144
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "1072": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7129,
        7144
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1073": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7056,
        7151
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1074": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3696,
        3712
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1075": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3684,
        3693
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1077": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3684,
        3712
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1078": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3727,
        3734
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0x40"
    },
    "1080": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3727,
        3734
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1081": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3727,
        3734
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xFD3415C24B2B4519F08B7935C13F86EA010C77B3FF9BF448A474AE3B2414FCE0"
    },
    "1114": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3727,
        3734
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1115": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3727,
        3734
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1117": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3727,
        3734
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1118": {
      "fn": "AniwarVesting.startAllSchedule",
      "offset": [
        3727,
        3734
      ],
      "op": "LOG1",
      "path": "7"
    },
    "1119": {
      "fn": "AniwarVesting.startAllSchedule",
      "jump": "o",
      "offset": [
        3392,
        3741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1120": {
      "fn": "AniwarVesting.release",
      "offset": [
        4441,
        5554
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1121": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1123": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1125": {
      "fn": "AniwarVesting.release",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1126": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "1"
    },
    "1127": {
      "fn": "AniwarVesting.release",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1128": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B3"
    },
    "1131": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1132": {
      "fn": "AniwarVesting.release",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1134": {
      "fn": "AniwarVesting.release",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1141": {
      "op": "SHL"
    },
    "1142": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1143": {
      "fn": "AniwarVesting.release",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1146": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1148": {
      "fn": "AniwarVesting.release",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1149": {
      "fn": "AniwarVesting.release",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1155": {
      "op": "DUP3"
    },
    "1156": {
      "op": "ADD"
    },
    "1157": {
      "op": "MSTORE"
    },
    "1158": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1193": {
      "op": "DUP3"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "MSTORE"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1198": {
      "op": "ADD"
    },
    "1199": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x319"
    },
    "1202": {
      "op": "JUMP"
    },
    "1203": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1204": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1206": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1208": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1209": {
      "fn": "AniwarVesting.release",
      "offset": [
        4600,
        4610
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1210": {
      "fn": "AniwarVesting.release",
      "offset": [
        4505,
        4544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1212": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1213": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1214": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4612
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1215": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4591
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1217": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1219": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4612
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1220": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1222": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1223": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4612
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1224": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4622
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1225": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4563
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1227": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1228": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1229": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4563
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1230": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4563
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1231": {
      "fn": "AniwarVesting.release",
      "offset": [
        4577,
        4622
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1232": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1233": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "LT",
      "path": "7"
    },
    "1234": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4DD"
    },
    "1237": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1238": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4DD"
    },
    "1241": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14B2"
    },
    "1244": {
      "fn": "AniwarVesting.release",
      "jump": "i",
      "offset": [
        4547,
        4632
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1245": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1246": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1248": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1249": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1250": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1251": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1253": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1254": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1255": {
      "fn": "AniwarVesting.release",
      "offset": [
        4677,
        4704
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1257": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1259": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1260": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1261": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1262": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "MUL",
      "path": "7"
    },
    "1263": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "ADD",
      "path": "7"
    },
    "1264": {
      "fn": "AniwarVesting.release",
      "offset": [
        4677,
        4704
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1265": {
      "fn": "AniwarVesting.release",
      "offset": [
        4677,
        4704
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1266": {
      "fn": "AniwarVesting.release",
      "offset": [
        4677,
        4704
      ],
      "op": "ADD",
      "path": "7"
    },
    "1267": {
      "fn": "AniwarVesting.release",
      "offset": [
        4677,
        4704
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1268": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1269": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1270": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1271": {
      "fn": "AniwarVesting.release",
      "offset": [
        4547,
        4632
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1272": {
      "op": "POP"
    },
    "1273": {
      "fn": "AniwarVesting.release",
      "offset": [
        4663,
        4673
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "op": "SUB"
    },
    "1282": {
      "fn": "AniwarVesting.release",
      "offset": [
        4677,
        4704
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1283": {
      "fn": "AniwarVesting.release",
      "offset": [
        4677,
        4704
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1284": {
      "fn": "AniwarVesting.release",
      "offset": [
        4677,
        4704
      ],
      "op": "AND",
      "path": "7"
    },
    "1285": {
      "fn": "AniwarVesting.release",
      "offset": [
        4663,
        4704
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1286": {
      "fn": "AniwarVesting.release",
      "offset": [
        4663,
        4704
      ],
      "op": "EQ",
      "path": "7"
    },
    "1287": {
      "fn": "AniwarVesting.release",
      "offset": [
        4663,
        4704
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1288": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1289": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1290": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1291": {
      "fn": "AniwarVesting.release",
      "offset": [
        4729,
        4750
      ],
      "op": "EQ",
      "path": "7"
    },
    "1292": {
      "fn": "AniwarVesting.release",
      "offset": [
        4663,
        4704
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1293": {
      "fn": "AniwarVesting.release",
      "offset": [
        4663,
        4704
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1294": {
      "fn": "AniwarVesting.release",
      "offset": [
        4781,
        4805
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 9,
      "value": "0x514"
    },
    "1297": {
      "fn": "AniwarVesting.release",
      "offset": [
        4781,
        4805
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1298": {
      "fn": "AniwarVesting.release",
      "offset": [
        4781,
        4805
      ],
      "op": "POP",
      "path": "7"
    },
    "1299": {
      "branch": 52,
      "fn": "AniwarVesting.release",
      "offset": [
        4798,
        4805
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1300": {
      "fn": "AniwarVesting.release",
      "offset": [
        4781,
        4805
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1301": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x591"
    },
    "1304": {
      "branch": 52,
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1305": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1307": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1316": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1319": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1321": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1322": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "ADD",
      "path": "7"
    },
    "1323": {
      "op": "MSTORE"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1328": {
      "op": "DUP3"
    },
    "1329": {
      "op": "ADD"
    },
    "1330": {
      "op": "MSTORE"
    },
    "1331": {
      "op": "PUSH32",
      "value": "0x546F6B656E56657374696E673A206F6E6C792062656E65666963696172792061"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1366": {
      "op": "DUP3"
    },
    "1367": {
      "op": "ADD"
    },
    "1368": {
      "op": "MSTORE"
    },
    "1369": {
      "op": "PUSH32",
      "value": "0x6E64206F776E65722063616E2072656C656173652076657374656420746F6B65"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1404": {
      "op": "DUP3"
    },
    "1405": {
      "op": "ADD"
    },
    "1406": {
      "op": "MSTORE"
    },
    "1407": {
      "op": "PUSH2",
      "value": "0x6E73"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1412": {
      "op": "SHL"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1415": {
      "op": "DUP3"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "1424": {
      "op": "JUMP"
    },
    "1425": {
      "fn": "AniwarVesting.release",
      "offset": [
        4760,
        4897
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1426": {
      "fn": "AniwarVesting.release",
      "offset": [
        4951,
        4961
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 10
    },
    "1427": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4963
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1429": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4963
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1430": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4963
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1431": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4963
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1432": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1434": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4963
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1436": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4963
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1437": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4963
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1439": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4963
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1440": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4963
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1441": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4975
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1443": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4975
      ],
      "op": "ADD",
      "path": "7"
    },
    "1444": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4975
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1445": {
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4975
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1447": {
      "branch": 53,
      "fn": "AniwarVesting.release",
      "offset": [
        4928,
        4975
      ],
      "op": "AND",
      "path": "7"
    },
    "1448": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F3"
    },
    "1451": {
      "branch": 53,
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1452": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1454": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1463": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1466": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1468": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1469": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "ADD",
      "path": "7"
    },
    "1470": {
      "op": "MSTORE"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1475": {
      "op": "DUP3"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "MSTORE"
    },
    "1478": {
      "op": "PUSH32",
      "value": "0x4E6F7420696E2056657374696E67205363686564756C65000000000000000000"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1513": {
      "op": "DUP3"
    },
    "1514": {
      "op": "ADD"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "1522": {
      "op": "JUMP"
    },
    "1523": {
      "fn": "AniwarVesting.release",
      "offset": [
        4907,
        5024
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1524": {
      "fn": "AniwarVesting.release",
      "offset": [
        5052,
        5053
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x0"
    },
    "1526": {
      "fn": "AniwarVesting.release",
      "offset": [
        5042,
        5049
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1527": {
      "branch": 54,
      "fn": "AniwarVesting.release",
      "offset": [
        5042,
        5053
      ],
      "op": "GT",
      "path": "7"
    },
    "1528": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x638"
    },
    "1531": {
      "branch": 54,
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1532": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1534": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1535": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1541": {
      "op": "SHL"
    },
    "1542": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1543": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1546": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1548": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1549": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "ADD",
      "path": "7"
    },
    "1550": {
      "op": "MSTORE"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "MSTORE"
    },
    "1558": {
      "op": "PUSH18",
      "value": "0x416D6F756E74206D757374206265203E203"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1582": {
      "op": "DUP3"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "1591": {
      "op": "JUMP"
    },
    "1592": {
      "fn": "AniwarVesting.release",
      "offset": [
        5034,
        5076
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1593": {
      "fn": "AniwarVesting.release",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 12,
      "value": "0x641"
    },
    "1596": {
      "fn": "AniwarVesting.release",
      "offset": [
        5148,
        5158
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1597": {
      "fn": "AniwarVesting.release",
      "offset": [
        5118,
        5139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA40"
    },
    "1600": {
      "fn": "AniwarVesting.release",
      "jump": "i",
      "offset": [
        5118,
        5160
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1601": {
      "fn": "AniwarVesting.release",
      "offset": [
        5118,
        5160
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1602": {
      "fn": "AniwarVesting.release",
      "offset": [
        5107,
        5114
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1603": {
      "fn": "AniwarVesting.release",
      "offset": [
        5107,
        5160
      ],
      "op": "GT",
      "path": "7"
    },
    "1604": {
      "branch": 55,
      "fn": "AniwarVesting.release",
      "offset": [
        5107,
        5160
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1605": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x69A"
    },
    "1608": {
      "branch": 55,
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1609": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1611": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1612": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1618": {
      "op": "SHL"
    },
    "1619": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1620": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1623": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1625": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1626": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "ADD",
      "path": "7"
    },
    "1627": {
      "op": "MSTORE"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1632": {
      "op": "DUP3"
    },
    "1633": {
      "op": "ADD"
    },
    "1634": {
      "op": "MSTORE"
    },
    "1635": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420776974686472617761626C6520696E737566666963656E7473"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1670": {
      "op": "DUP3"
    },
    "1671": {
      "op": "ADD"
    },
    "1672": {
      "op": "MSTORE"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "1677": {
      "op": "SHL"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1680": {
      "op": "DUP3"
    },
    "1681": {
      "op": "ADD"
    },
    "1682": {
      "op": "MSTORE"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1685": {
      "op": "ADD"
    },
    "1686": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "1689": {
      "op": "JUMP"
    },
    "1690": {
      "fn": "AniwarVesting.release",
      "offset": [
        5086,
        5219
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1691": {
      "fn": "AniwarVesting.release",
      "offset": [
        5345,
        5352
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 13
    },
    "1692": {
      "fn": "AniwarVesting.release",
      "offset": [
        5287,
        5302
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1693": {
      "fn": "AniwarVesting.release",
      "offset": [
        5287,
        5330
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1695": {
      "fn": "AniwarVesting.release",
      "offset": [
        5287,
        5330
      ],
      "op": "ADD",
      "path": "7"
    },
    "1696": {
      "fn": "AniwarVesting.release",
      "offset": [
        5287,
        5330
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1697": {
      "fn": "AniwarVesting.release",
      "offset": [
        5287,
        5352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6AA"
    },
    "1700": {
      "fn": "AniwarVesting.release",
      "offset": [
        5287,
        5352
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1701": {
      "fn": "AniwarVesting.release",
      "offset": [
        5287,
        5352
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1702": {
      "fn": "AniwarVesting.release",
      "offset": [
        5287,
        5352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14DE"
    },
    "1705": {
      "fn": "AniwarVesting.release",
      "jump": "i",
      "offset": [
        5287,
        5352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1706": {
      "fn": "AniwarVesting.release",
      "offset": [
        5287,
        5352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1707": {
      "fn": "AniwarVesting.release",
      "offset": [
        5229,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1709": {
      "fn": "AniwarVesting.release",
      "offset": [
        5229,
        5272
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1710": {
      "fn": "AniwarVesting.release",
      "offset": [
        5229,
        5272
      ],
      "op": "ADD",
      "path": "7"
    },
    "1711": {
      "fn": "AniwarVesting.release",
      "offset": [
        5229,
        5352
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1712": {
      "fn": "AniwarVesting.release",
      "offset": [
        5420,
        5447
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1714": {
      "fn": "AniwarVesting.release",
      "offset": [
        5420,
        5447
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1715": {
      "fn": "AniwarVesting.release",
      "offset": [
        5420,
        5447
      ],
      "op": "ADD",
      "path": "7"
    },
    "1716": {
      "fn": "AniwarVesting.release",
      "offset": [
        5420,
        5447
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "fn": "AniwarVesting.release",
      "offset": [
        5420,
        5447
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1726": {
      "fn": "AniwarVesting.release",
      "offset": [
        5420,
        5447
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1727": {
      "fn": "AniwarVesting.release",
      "offset": [
        5420,
        5447
      ],
      "op": "AND",
      "path": "7"
    },
    "1728": {
      "fn": "AniwarVesting.release",
      "offset": [
        5420,
        5447
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1729": {
      "fn": "AniwarVesting.release",
      "offset": [
        5467,
        5515
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 14,
      "value": "0x6ED"
    },
    "1732": {
      "fn": "AniwarVesting.release",
      "offset": [
        5467,
        5515
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1733": {
      "fn": "AniwarVesting.release",
      "offset": [
        5467,
        5473
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "1766": {
      "fn": "AniwarVesting.release",
      "offset": [
        5467,
        5486
      ],
      "op": "AND",
      "path": "7"
    },
    "1767": {
      "fn": "AniwarVesting.release",
      "offset": [
        5420,
        5447
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1768": {
      "fn": "AniwarVesting.release",
      "offset": [
        5507,
        5514
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1769": {
      "fn": "AniwarVesting.release",
      "offset": [
        5467,
        5486
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10CF"
    },
    "1772": {
      "fn": "AniwarVesting.release",
      "jump": "i",
      "offset": [
        5467,
        5515
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1773": {
      "fn": "AniwarVesting.release",
      "offset": [
        5467,
        5515
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1774": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 15,
      "value": "0x40"
    },
    "1776": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1777": {
      "op": "DUP6"
    },
    "1778": {
      "op": "DUP2"
    },
    "1779": {
      "op": "MSTORE"
    },
    "1780": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xFB81F9B30D73D830C3544B34D827C08142579EE75710B490BAB0B3995468C565"
    },
    "1813": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1816": {
      "op": "ADD"
    },
    "1817": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1819": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1820": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1821": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1822": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "SUB",
      "path": "7"
    },
    "1823": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1824": {
      "fn": "AniwarVesting.release",
      "offset": [
        5530,
        5547
      ],
      "op": "LOG1",
      "path": "7"
    },
    "1825": {
      "op": "POP"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1829": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1830": {
      "fn": "AniwarVesting.release",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1831": {
      "op": "POP"
    },
    "1832": {
      "op": "POP"
    },
    "1833": {
      "op": "POP"
    },
    "1834": {
      "fn": "AniwarVesting.release",
      "jump": "o",
      "offset": [
        4441,
        5554
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1835": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2140,
        3386
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1836": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1838": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1845": {
      "op": "SHL"
    },
    "1846": {
      "op": "SUB"
    },
    "1847": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1848": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1849": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1850": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x755"
    },
    "1853": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1854": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1856": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1857": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1863": {
      "op": "SHL"
    },
    "1864": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1865": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1866": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1868": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1869": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "1872": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1873": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1450"
    },
    "1876": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1877": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1878": {
      "offset": [
        1692,
        1701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1880": {
      "fn": "Context._msgSender",
      "offset": [
        1692,
        1701
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1881": {
      "fn": "Context._msgSender",
      "offset": [
        1692,
        1701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1883": {
      "fn": "Context._msgSender",
      "offset": [
        1692,
        1701
      ],
      "op": "AND",
      "path": "7"
    },
    "1884": {
      "offset": [
        1691,
        1701
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1885": {
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x778"
    },
    "1888": {
      "offset": [
        1683,
        1725
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1889": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1891": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1892": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "offset": [
        1683,
        1725
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1900": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1901": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1903": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "ADD",
      "path": "7"
    },
    "1904": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "1907": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1908": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1485"
    },
    "1911": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1683,
        1725
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1912": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1913": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2329,
        2361
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 16,
      "value": "0x6"
    },
    "1915": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2329,
        2361
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1916": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2318,
        2325
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1917": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2318,
        2361
      ],
      "op": "GT",
      "path": "7"
    },
    "1918": {
      "branch": 56,
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2318,
        2361
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1919": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x803"
    },
    "1922": {
      "branch": 56,
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1923": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1925": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1934": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1937": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1939": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1940": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "ADD",
      "path": "7"
    },
    "1941": {
      "op": "MSTORE"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x4A"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1946": {
      "op": "DUP3"
    },
    "1947": {
      "op": "ADD"
    },
    "1948": {
      "op": "MSTORE"
    },
    "1949": {
      "op": "PUSH32",
      "value": "0x546F6B656E56657374696E673A2063616E6E6F74206372656174652076657374"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1984": {
      "op": "DUP3"
    },
    "1985": {
      "op": "ADD"
    },
    "1986": {
      "op": "MSTORE"
    },
    "1987": {
      "op": "PUSH32",
      "value": "0x696E67207363686564756C652062656361757365206E6F742073756666696369"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2022": {
      "op": "DUP3"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "MSTORE"
    },
    "2025": {
      "op": "PUSH10",
      "value": "0x656E7420746F6B656E73"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2038": {
      "op": "SHL"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2041": {
      "op": "DUP3"
    },
    "2042": {
      "op": "ADD"
    },
    "2043": {
      "op": "MSTORE"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2046": {
      "op": "ADD"
    },
    "2047": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "2050": {
      "op": "JUMP"
    },
    "2051": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2297,
        2461
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2052": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2489,
        2490
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x0"
    },
    "2054": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2479,
        2486
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2055": {
      "branch": 57,
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2479,
        2490
      ],
      "op": "GT",
      "path": "7"
    },
    "2056": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x853"
    },
    "2059": {
      "branch": 57,
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2060": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2062": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2063": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2071": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2074": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2076": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2077": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "ADD",
      "path": "7"
    },
    "2078": {
      "op": "DUP2"
    },
    "2079": {
      "op": "SWAP1"
    },
    "2080": {
      "op": "MSTORE"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2083": {
      "op": "DUP3"
    },
    "2084": {
      "op": "ADD"
    },
    "2085": {
      "op": "MSTORE"
    },
    "2086": {
      "op": "PUSH32",
      "value": "0x546F6B656E56657374696E673A20616D6F756E74206D757374206265203E2030"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2121": {
      "op": "DUP3"
    },
    "2122": {
      "op": "ADD"
    },
    "2123": {
      "op": "MSTORE"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "2130": {
      "op": "JUMP"
    },
    "2131": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2471,
        2527
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2141": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "AND",
      "path": "7"
    },
    "2142": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2144": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2145": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2146": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2147": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2556
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2149": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2151": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2152": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2154": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2155": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2570
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2156": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2158": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2582
      ],
      "op": "ADD",
      "path": "7"
    },
    "2159": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2582
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2160": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2162": {
      "branch": 58,
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2542,
        2582
      ],
      "op": "AND",
      "path": "7"
    },
    "2163": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2537,
        3269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9D6"
    },
    "2166": {
      "branch": 58,
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2537,
        3269
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "op": "SUB"
    },
    "2175": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2176": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2177": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "AND",
      "path": "7"
    },
    "2178": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2598,
        2629
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2180": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2181": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2182": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2183": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2185": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2187": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2188": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2189": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2190": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2192": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2193": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2194": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2195": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2698,
        2714
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 18,
      "value": "0x4"
    },
    "2197": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2698,
        2714
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2198": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2698,
        2714
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2199": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2674,
        2714
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2200": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2674,
        2714
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2201": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2754,
        2758
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 19,
      "value": "0x1"
    },
    "2203": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2751
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2204": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2751
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2205": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2751
      ],
      "op": "ADD",
      "path": "7"
    },
    "2206": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2758
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2207": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2758
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2210": {
      "op": "NOT"
    },
    "2211": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2758
      ],
      "op": "AND",
      "path": "7"
    },
    "2212": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2758
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2213": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2758
      ],
      "op": "OR",
      "path": "7"
    },
    "2214": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2215": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2728,
        2758
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2216": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2793
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0x8"
    },
    "2218": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2219": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2220": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2221": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2222": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "ADD",
      "path": "7"
    },
    "2223": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2224": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2225": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2226": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "2259": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "ADD",
      "path": "7"
    },
    "2260": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2261": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2268": {
      "op": "SHL"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "op": "NOT"
    },
    "2271": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2272": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2273": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "AND",
      "path": "7"
    },
    "2274": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "DUP10",
      "path": "7"
    },
    "2275": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "OR",
      "path": "7"
    },
    "2276": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2277": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2278": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2772,
        2812
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2279": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 21
    },
    "2280": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2281": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2283": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2284": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "ADD",
      "path": "7"
    },
    "2285": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2286": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2287": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2881,
        2897
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2288": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2881,
        2897
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2289": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2290": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2291": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "2292": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2293": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "ADD",
      "path": "7"
    },
    "2294": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "2295": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2296": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2297": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2298": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2299": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "ADD",
      "path": "7"
    },
    "2300": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP10",
      "path": "7"
    },
    "2301": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2302": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2303": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2305": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2306": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "ADD",
      "path": "7"
    },
    "2307": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2308": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2309": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2865,
        2924
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2310": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2842
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2312": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2313": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2314": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2315": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2316": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "ADD",
      "path": "7"
    },
    "2317": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2318": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2319": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2320": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2321": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "2322": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2323": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2324": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2325": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "MUL",
      "path": "7"
    },
    "2326": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "2359": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2360": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "ADD",
      "path": "7"
    },
    "2361": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2362": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2363": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2364": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2365": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "2366": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2367": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689"
    },
    "2400": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2401": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "ADD",
      "path": "7"
    },
    "2402": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2403": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2404": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2405": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2406": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP10",
      "path": "7"
    },
    "2407": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "AND",
      "path": "7"
    },
    "2408": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2409": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "AND",
      "path": "7"
    },
    "2410": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2411": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2412": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2413": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "OR",
      "path": "7"
    },
    "2414": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2415": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "2416": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2417": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2418": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2419": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A"
    },
    "2452": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2453": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "ADD",
      "path": "7"
    },
    "2454": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2455": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2456": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2457": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68B"
    },
    "2490": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2491": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2492": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "ADD",
      "path": "7"
    },
    "2493": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2826,
        2938
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2494": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 22
    },
    "2495": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2496": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2497": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2632,
        2660
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2498": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2698,
        2714
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2499": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9CB"
    },
    "2502": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2503": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F6"
    },
    "2506": {
      "fn": "AniwarVesting.createVestingSchedule",
      "jump": "i",
      "offset": [
        2952,
        2970
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2507": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2508": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2509": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2510": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "POP",
      "path": "7"
    },
    "2511": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2512": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2952,
        2970
      ],
      "op": "POP",
      "path": "7"
    },
    "2513": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2584,
        2981
      ],
      "op": "POP",
      "path": "7"
    },
    "2514": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2537,
        3269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2B"
    },
    "2517": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2537,
        3269
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2518": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2537,
        3269
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2525": {
      "op": "SHL"
    },
    "2526": {
      "op": "SUB"
    },
    "2527": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2528": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "AND",
      "path": "7"
    },
    "2529": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3001,
        3040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2531": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2532": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2533": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2534": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3091
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2536": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2538": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2539": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2541": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2542": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3105
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2543": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3115
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2544": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3059
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2546": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2547": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2548": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3059
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2549": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3059
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2550": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3077,
        3115
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2551": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2552": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "LT",
      "path": "7"
    },
    "2553": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA04"
    },
    "2556": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2557": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA04"
    },
    "2560": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14B2"
    },
    "2563": {
      "fn": "AniwarVesting.createVestingSchedule",
      "jump": "i",
      "offset": [
        3043,
        3129
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2564": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2565": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2566": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2568": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2569": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2571": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2573": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2574": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2575": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2577": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "MUL",
      "path": "7"
    },
    "2578": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3043,
        3129
      ],
      "op": "ADD",
      "path": "7"
    },
    "2579": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3001,
        3129
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2580": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3001,
        3129
      ],
      "op": "POP",
      "path": "7"
    },
    "2581": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3251,
        3258
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 23
    },
    "2582": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3197,
        3212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2583": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3197,
        3232
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2585": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3197,
        3232
      ],
      "op": "ADD",
      "path": "7"
    },
    "2586": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3197,
        3232
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2587": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3197,
        3258
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA24"
    },
    "2590": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3197,
        3258
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2591": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3197,
        3258
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2592": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3197,
        3258
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14DE"
    },
    "2595": {
      "fn": "AniwarVesting.createVestingSchedule",
      "jump": "i",
      "offset": [
        3197,
        3258
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2596": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3197,
        3258
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2597": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3143,
        3178
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2599": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3143,
        3178
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2600": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3143,
        3178
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2601": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3143,
        3178
      ],
      "op": "ADD",
      "path": "7"
    },
    "2602": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3143,
        3258
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2603": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        2537,
        3269
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2604": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3372,
        3379
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 24
    },
    "2605": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3325,
        3357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2607": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3325,
        3357
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2608": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3325,
        3379
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA39"
    },
    "2611": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3325,
        3379
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2612": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3325,
        3379
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2613": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3325,
        3379
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1511"
    },
    "2616": {
      "fn": "AniwarVesting.createVestingSchedule",
      "jump": "i",
      "offset": [
        3325,
        3379
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2617": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3325,
        3379
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2618": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3278,
        3310
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2620": {
      "fn": "AniwarVesting.createVestingSchedule",
      "offset": [
        3278,
        3379
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2621": {
      "op": "POP"
    },
    "2622": {
      "op": "POP"
    },
    "2623": {
      "fn": "AniwarVesting.createVestingSchedule",
      "jump": "o",
      "offset": [
        2140,
        3386
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2624": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2625": {
      "offset": [
        1566,
        1575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2627": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1566,
        1575
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2628": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5695,
        5702
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2630": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5695,
        5702
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2631": {
      "offset": [
        1566,
        1575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2633": {
      "branch": 59,
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1566,
        1575
      ],
      "op": "AND",
      "path": "7"
    },
    "2634": {
      "offset": [
        1558,
        1607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA95"
    },
    "2637": {
      "branch": 59,
      "offset": [
        1558,
        1607
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2638": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1558,
        1607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2640": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1558,
        1607
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2647": {
      "op": "SHL"
    },
    "2648": {
      "offset": [
        1558,
        1607
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2649": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1558,
        1607
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2652": {
      "offset": [
        1558,
        1607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2654": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1558,
        1607
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2655": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1558,
        1607
      ],
      "op": "ADD",
      "path": "7"
    },
    "2656": {
      "op": "MSTORE"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2661": {
      "op": "DUP3"
    },
    "2662": {
      "op": "ADD"
    },
    "2663": {
      "op": "MSTORE"
    },
    "2664": {
      "op": "PUSH32",
      "value": "0x56657374696E67206973206E6F74205374617274656420596574210000000000"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2699": {
      "op": "DUP3"
    },
    "2700": {
      "op": "ADD"
    },
    "2701": {
      "op": "MSTORE"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2704": {
      "op": "ADD"
    },
    "2705": {
      "offset": [
        1558,
        1607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "2708": {
      "op": "JUMP"
    },
    "2709": {
      "offset": [
        1558,
        1607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2716": {
      "op": "SHL"
    },
    "2717": {
      "op": "SUB"
    },
    "2718": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2719": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "AND",
      "path": "7"
    },
    "2720": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5748
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2722": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2723": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2724": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2725": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5765
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2727": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2729": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2730": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2731": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2732": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2734": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2735": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2736": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2737": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5751,
        5779
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2738": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2739": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2740": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2741": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2742": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "ADD",
      "path": "7"
    },
    "2743": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2744": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2745": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2746": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2747": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2748": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2749": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2750": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2752": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "ADD",
      "path": "7"
    },
    "2753": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2754": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2756": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "AND",
      "path": "7"
    },
    "2757": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2758": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2759": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2760": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2761": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "ADD",
      "path": "7"
    },
    "2762": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2763": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2764": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5718,
        5779
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2765": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 25,
      "value": "0xB18"
    },
    "2768": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2769": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2771": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2778": {
      "op": "SHL"
    },
    "2779": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2780": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2783": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2785": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2786": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "ADD",
      "path": "7"
    },
    "2787": {
      "op": "MSTORE"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2792": {
      "op": "DUP3"
    },
    "2793": {
      "op": "ADD"
    },
    "2794": {
      "op": "MSTORE"
    },
    "2795": {
      "op": "PUSH32",
      "value": "0x42656E656669636961727920646F6573206E6F74206578697374210000000000"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2830": {
      "op": "DUP3"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "op": "MSTORE"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2835": {
      "op": "ADD"
    },
    "2836": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "2839": {
      "op": "JUMP"
    },
    "2840": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5789,
        5852
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2841": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5900
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2843": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2845": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5933,
        5944
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2846": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5933,
        5954
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2848": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5933,
        5954
      ],
      "op": "ADD",
      "path": "7"
    },
    "2849": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5933,
        5954
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2850": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2851": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2852": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2853": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "LT",
      "path": "7"
    },
    "2854": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB31"
    },
    "2857": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2858": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB31"
    },
    "2861": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14B2"
    },
    "2864": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        5903,
        5964
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2865": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2866": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2868": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2869": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2870": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2871": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2873": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2874": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2875": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2876": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2878": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2879": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2880": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2882": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2883": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "ADD",
      "path": "7"
    },
    "2884": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2885": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2886": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2888": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2889": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2890": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "MUL",
      "path": "7"
    },
    "2891": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2892": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2893": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5903,
        5964
      ],
      "op": "ADD",
      "path": "7"
    },
    "2894": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2895": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2896": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2897": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2898": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2900": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2901": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "ADD",
      "path": "7"
    },
    "2902": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "op": "SUB"
    },
    "2911": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "AND",
      "path": "7"
    },
    "2912": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2913": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2914": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "ADD",
      "path": "7"
    },
    "2915": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2916": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2917": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2918": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2919": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2921": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2922": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "ADD",
      "path": "7"
    },
    "2923": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2924": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2925": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2926": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "ADD",
      "path": "7"
    },
    "2927": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2928": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2930": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "ADD",
      "path": "7"
    },
    "2931": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2932": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2934": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2935": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "ADD",
      "path": "7"
    },
    "2936": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2937": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5862,
        5964
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2938": {
      "op": "POP"
    },
    "2939": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5996,
        6012
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB81"
    },
    "2942": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7129,
        7144
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "2943": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7129,
        7144
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2944": {
      "fn": "AniwarVesting.getCurrentTime",
      "offset": [
        7056,
        7151
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2945": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5996,
        6012
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2946": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5974,
        6012
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2947": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5974,
        6012
      ],
      "op": "POP",
      "path": "7"
    },
    "2948": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6022,
        6042
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2950": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6073,
        6087
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "2983": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6060,
        6069
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2985": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6060,
        6069
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2986": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6046,
        6057
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2987": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6046,
        6069
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBB4"
    },
    "2990": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6046,
        6069
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2991": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6046,
        6069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2992": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6046,
        6069
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1511"
    },
    "2995": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        6046,
        6069
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2996": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6046,
        6069
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2997": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6045,
        6087
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBBE"
    },
    "3000": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6045,
        6087
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3001": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6045,
        6087
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3002": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6045,
        6087
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1528"
    },
    "3005": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        6045,
        6087
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3006": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6045,
        6087
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3007": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6022,
        6087
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3008": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6022,
        6087
      ],
      "op": "POP",
      "path": "7"
    },
    "3009": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6117,
        6130
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "3042": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6101,
        6113
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3043": {
      "branch": 60,
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6101,
        6130
      ],
      "op": "LT",
      "path": "7"
    },
    "3044": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6097,
        6185
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0A"
    },
    "3047": {
      "branch": 60,
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6097,
        6185
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3048": {
      "op": "POP"
    },
    "3049": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6161,
        6174
      ],
      "op": "PUSH32",
      "path": "7",
      "statement": 26,
      "value": "0x0"
    },
    "3082": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6097,
        6185
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3083": {
      "branch": 61,
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6198,
        6215
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3084": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6194,
        6258
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC13"
    },
    "3087": {
      "branch": 61,
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6194,
        6258
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3088": {
      "op": "POP"
    },
    "3089": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6246,
        6247
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0x1"
    },
    "3091": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6194,
        6258
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3092": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6375,
        6390
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 28
    },
    "3093": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6375,
        6418
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "3095": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6375,
        6418
      ],
      "op": "ADD",
      "path": "7"
    },
    "3096": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6375,
        6418
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3097": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6359,
        6371
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3098": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6326,
        6339
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "3131": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6288,
        6303
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3132": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6288,
        6323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3134": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6288,
        6323
      ],
      "op": "ADD",
      "path": "7"
    },
    "3135": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6288,
        6323
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3136": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6288,
        6339
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC49"
    },
    "3139": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6288,
        6339
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3140": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6288,
        6339
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3141": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6288,
        6339
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1528"
    },
    "3144": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        6288,
        6339
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3145": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6288,
        6339
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3146": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6287,
        6371
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC53"
    },
    "3149": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6287,
        6371
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3150": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6287,
        6371
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3151": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6287,
        6371
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x154A"
    },
    "3154": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        6287,
        6371
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3155": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6287,
        6371
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3156": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6286,
        6418
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC5D"
    },
    "3159": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6286,
        6418
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3160": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6286,
        6418
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3161": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6286,
        6418
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1511"
    },
    "3164": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "i",
      "offset": [
        6286,
        6418
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3165": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6286,
        6418
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3166": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6267,
        6418
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "3167": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6267,
        6418
      ],
      "op": "POP",
      "path": "7"
    },
    "3168": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6267,
        6418
      ],
      "op": "POP",
      "path": "7"
    },
    "3169": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6267,
        6418
      ],
      "op": "POP",
      "path": "7"
    },
    "3170": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6267,
        6418
      ],
      "op": "POP",
      "path": "7"
    },
    "3171": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        6267,
        6418
      ],
      "op": "POP",
      "path": "7"
    },
    "3172": {
      "offset": [
        1617,
        1618
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3173": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3174": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3175": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        5560,
        6425
      ],
      "op": "POP",
      "path": "7"
    },
    "3176": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "o",
      "offset": [
        5560,
        6425
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3177": {
      "offset": [
        1299,
        1340
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3178": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3180": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3181": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3182": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3183": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3184": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "LT",
      "path": "7"
    },
    "3185": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC79"
    },
    "3188": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3189": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3191": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3192": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3193": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3194": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3196": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3197": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3198": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3199": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3201": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3202": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3203": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3204": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3206": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3207": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3208": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "MUL",
      "path": "7"
    },
    "3209": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "ADD",
      "path": "7"
    },
    "3210": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3211": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3212": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3214": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3215": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "ADD",
      "path": "7"
    },
    "3216": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3217": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3219": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3220": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "ADD",
      "path": "7"
    },
    "3221": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3222": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3224": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3225": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3226": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "ADD",
      "path": "7"
    },
    "3227": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3228": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3229": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3230": {
      "op": "POP"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3237": {
      "op": "SHL"
    },
    "3238": {
      "op": "SUB"
    },
    "3239": {
      "offset": [
        1299,
        1340
      ],
      "op": "AND",
      "path": "7"
    },
    "3240": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3241": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3242": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "offset": [
        1299,
        1340
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3243": {
      "fn": "AniwarVesting.calculateWithdrawable",
      "jump": "o",
      "offset": [
        1299,
        1340
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3244": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3245": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3247": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "op": "SUB"
    },
    "3256": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3257": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3258": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3259": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD6"
    },
    "3262": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3263": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3265": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3274": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3275": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3277": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3278": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "3281": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3282": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1450"
    },
    "3285": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3286": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3287": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 29,
      "value": "0xCE0"
    },
    "3290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3292": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1126"
    },
    "3295": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3296": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3297": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3298": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3747,
        4435
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3299": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3301": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3308": {
      "op": "SHL"
    },
    "3309": {
      "op": "SUB"
    },
    "3310": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3311": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3312": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3313": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0C"
    },
    "3316": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3317": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3319": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3326": {
      "op": "SHL"
    },
    "3327": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3328": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3329": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3331": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3332": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "3335": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3336": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1450"
    },
    "3339": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3340": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3341": {
      "offset": [
        1692,
        1701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3343": {
      "fn": "Context._msgSender",
      "offset": [
        1692,
        1701
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3344": {
      "fn": "Context._msgSender",
      "offset": [
        1692,
        1701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3346": {
      "fn": "Context._msgSender",
      "offset": [
        1692,
        1701
      ],
      "op": "AND",
      "path": "7"
    },
    "3347": {
      "offset": [
        1691,
        1701
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3348": {
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD2F"
    },
    "3351": {
      "offset": [
        1683,
        1725
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3352": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3354": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3355": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "offset": [
        1683,
        1725
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3363": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3364": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3366": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "ADD",
      "path": "7"
    },
    "3367": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "3370": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3371": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1485"
    },
    "3374": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1683,
        1725
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3375": {
      "fn": "Context._msgSender",
      "offset": [
        1683,
        1725
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3376": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3897,
        3898
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 30,
      "value": "0x0"
    },
    "3378": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3887,
        3894
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3379": {
      "branch": 62,
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3887,
        3898
      ],
      "op": "GT",
      "path": "7"
    },
    "3380": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD75"
    },
    "3383": {
      "branch": 62,
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3384": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3386": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3387": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3395": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3398": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3400": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3401": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "ADD",
      "path": "7"
    },
    "3402": {
      "op": "MSTORE"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3407": {
      "op": "DUP3"
    },
    "3408": {
      "op": "ADD"
    },
    "3409": {
      "op": "MSTORE"
    },
    "3410": {
      "op": "PUSH19",
      "value": "0x416D6F756E74206D757374206265203E203021"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "3432": {
      "op": "SHL"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3435": {
      "op": "DUP3"
    },
    "3436": {
      "op": "ADD"
    },
    "3437": {
      "op": "MSTORE"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "3444": {
      "op": "JUMP"
    },
    "3445": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3879,
        3922
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3446": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 31,
      "value": "0x40"
    },
    "3448": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3449": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3456": {
      "op": "SHL"
    },
    "3457": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3458": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3459": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3989,
        3993
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "3460": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3462": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3463": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "ADD",
      "path": "7"
    },
    "3464": {
      "op": "MSTORE"
    },
    "3465": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3970
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3504": {
      "op": "SHL"
    },
    "3505": {
      "op": "SUB"
    },
    "3506": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3980
      ],
      "op": "AND",
      "path": "7"
    },
    "3507": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3980
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3508": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3980
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "3513": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3980
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3519": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3521": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3522": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3523": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3524": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "SUB",
      "path": "7"
    },
    "3525": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3526": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3527": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "GAS",
      "path": "7"
    },
    "3528": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "3529": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3530": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3531": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3532": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDD9"
    },
    "3535": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3536": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3537": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3539": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3540": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3541": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3542": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3544": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3545": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3546": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "POP",
      "path": "7"
    },
    "3547": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "POP",
      "path": "7"
    },
    "3548": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "POP",
      "path": "7"
    },
    "3549": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "POP",
      "path": "7"
    },
    "3550": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3552": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3553": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3554": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3556": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "NOT",
      "path": "7"
    },
    "3557": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3559": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3560": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "ADD",
      "path": "7"
    },
    "3561": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "AND",
      "path": "7"
    },
    "3562": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3563": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "ADD",
      "path": "7"
    },
    "3564": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3565": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3567": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3568": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "POP",
      "path": "7"
    },
    "3569": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3570": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "ADD",
      "path": "7"
    },
    "3571": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3572": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDFD"
    },
    "3575": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3576": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3577": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1437"
    },
    "3580": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "jump": "i",
      "offset": [
        3964,
        3995
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3581": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3964,
        3995
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3582": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3953,
        3960
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3583": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3953,
        3995
      ],
      "op": "GT",
      "path": "7"
    },
    "3584": {
      "branch": 63,
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3953,
        3995
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3585": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE4C"
    },
    "3588": {
      "branch": 63,
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3589": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3591": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3598": {
      "op": "SHL"
    },
    "3599": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3600": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3603": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3605": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3606": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "ADD",
      "path": "7"
    },
    "3607": {
      "op": "MSTORE"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3612": {
      "op": "DUP3"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "MSTORE"
    },
    "3615": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420657863656564732062616C616E636521000000000000000000"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3650": {
      "op": "DUP3"
    },
    "3651": {
      "op": "ADD"
    },
    "3652": {
      "op": "MSTORE"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3655": {
      "op": "ADD"
    },
    "3656": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "3659": {
      "op": "JUMP"
    },
    "3660": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        3932,
        4044
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3661": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4133,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 32,
      "value": "0x6"
    },
    "3663": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4133,
        4165
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3664": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4102,
        4130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "3666": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4102,
        4130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3667": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4102,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE5C"
    },
    "3670": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4102,
        4165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3671": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4102,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3672": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4102,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1511"
    },
    "3675": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "jump": "i",
      "offset": [
        4102,
        4165
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3676": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4102,
        4165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3677": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4075,
        4082
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3678": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4075,
        4165
      ],
      "op": "LT",
      "path": "7"
    },
    "3679": {
      "branch": 64,
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4075,
        4165
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3680": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEC1"
    },
    "3683": {
      "branch": 64,
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3684": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3686": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3693": {
      "op": "SHL"
    },
    "3694": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3695": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3698": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3700": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3701": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "ADD",
      "path": "7"
    },
    "3702": {
      "op": "MSTORE"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3707": {
      "op": "DUP3"
    },
    "3708": {
      "op": "ADD"
    },
    "3709": {
      "op": "MSTORE"
    },
    "3710": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D75737420626520626967676572207468616E207072657669"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3745": {
      "op": "DUP3"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "op": "MSTORE"
    },
    "3748": {
      "op": "PUSH13",
      "value": "0x6F75732061737369676E656421"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "3764": {
      "op": "SHL"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3767": {
      "op": "DUP3"
    },
    "3768": {
      "op": "ADD"
    },
    "3769": {
      "op": "MSTORE"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "3776": {
      "op": "JUMP"
    },
    "3777": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4054,
        4236
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3778": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4347,
        4379
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x6"
    },
    "3780": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4347,
        4379
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3781": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4316,
        4344
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "3783": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4316,
        4344
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3784": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xED1"
    },
    "3787": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4316,
        4379
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3788": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4316,
        4379
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3789": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1511"
    },
    "3792": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "jump": "i",
      "offset": [
        4316,
        4379
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3793": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4316,
        4379
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3794": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4293,
        4380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEDB"
    },
    "3797": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4293,
        4380
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3798": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4293,
        4300
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3799": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4293,
        4380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1511"
    },
    "3802": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "jump": "i",
      "offset": [
        4293,
        4380
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3803": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4293,
        4380
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3804": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4246,
        4278
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3806": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4246,
        4380
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3807": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4390,
        4418
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 34,
      "value": "0x5"
    },
    "3809": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "offset": [
        4390,
        4428
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3810": {
      "fn": "AniwarVesting.setInitTotalAmount",
      "jump": "o",
      "offset": [
        3747,
        4435
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3811": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6431,
        6937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3812": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3814": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3816": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3817": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "1"
    },
    "3818": {
      "branch": 71,
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3819": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF36"
    },
    "3822": {
      "branch": 71,
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3823": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3825": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3832": {
      "op": "SHL"
    },
    "3833": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3834": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3837": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3839": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3840": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "3841": {
      "op": "MSTORE"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3846": {
      "op": "DUP3"
    },
    "3847": {
      "op": "ADD"
    },
    "3848": {
      "op": "MSTORE"
    },
    "3849": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "ADD"
    },
    "3886": {
      "op": "MSTORE"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3889": {
      "op": "ADD"
    },
    "3890": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x319"
    },
    "3893": {
      "op": "JUMP"
    },
    "3894": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3895": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3897": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3899": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3900": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3902": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3909": {
      "op": "SHL"
    },
    "3910": {
      "op": "SUB"
    },
    "3911": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3912": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3913": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3914": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF65"
    },
    "3917": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3918": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3920": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3921": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3927": {
      "op": "SHL"
    },
    "3928": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3929": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3930": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3932": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3933": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "3936": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3937": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1450"
    },
    "3940": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3941": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3942": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6571,
        6580
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 35,
      "value": "0x2"
    },
    "3944": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6571,
        6580
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3945": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6571,
        6580
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3947": {
      "branch": 65,
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6571,
        6580
      ],
      "op": "AND",
      "path": "7"
    },
    "3948": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6570,
        6580
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3949": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6570,
        6580
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3950": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6570,
        6627
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF79"
    },
    "3953": {
      "branch": 65,
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6570,
        6627
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3954": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6570,
        6627
      ],
      "op": "POP",
      "path": "7"
    },
    "3955": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6595,
        6627
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3957": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6595,
        6627
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3958": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6584,
        6591
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3959": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6584,
        6627
      ],
      "op": "GT",
      "path": "7"
    },
    "3960": {
      "branch": 66,
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6584,
        6627
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3961": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6570,
        6627
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3962": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFC5"
    },
    "3965": {
      "branch": 66,
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3966": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3968": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3975": {
      "op": "SHL"
    },
    "3976": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3977": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3980": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3982": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3983": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "ADD",
      "path": "7"
    },
    "3984": {
      "op": "MSTORE"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3989": {
      "op": "DUP3"
    },
    "3990": {
      "op": "ADD"
    },
    "3991": {
      "op": "MSTORE"
    },
    "3992": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420657863656564732062616C616E636520616E6420496E697400"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4027": {
      "op": "DUP3"
    },
    "4028": {
      "op": "ADD"
    },
    "4029": {
      "op": "MSTORE"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4032": {
      "op": "ADD"
    },
    "4033": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x319"
    },
    "4036": {
      "op": "JUMP"
    },
    "4037": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6549,
        6684
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4038": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6756,
        6763
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 36
    },
    "4039": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6725,
        6753
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "4041": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6725,
        6753
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4042": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6725,
        6763
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFD3"
    },
    "4045": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6725,
        6763
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4046": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6725,
        6763
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4047": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6725,
        6763
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1511"
    },
    "4050": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "jump": "i",
      "offset": [
        6725,
        6763
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4051": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6725,
        6763
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4052": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6694,
        6722
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "4054": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6694,
        6763
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4055": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6820,
        6852
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 37,
      "value": "0x6"
    },
    "4057": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6820,
        6852
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4058": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6820,
        6874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFE4"
    },
    "4061": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6820,
        6874
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4062": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6867,
        6874
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4063": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6867,
        6874
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4064": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6820,
        6874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1511"
    },
    "4067": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "jump": "i",
      "offset": [
        6820,
        6874
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4068": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6820,
        6874
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4069": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6773,
        6805
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4071": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6773,
        6874
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4072": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6884,
        6930
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 38,
      "value": "0x102D"
    },
    "4075": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6912,
        6919
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFFC"
    },
    "4078": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4080": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4087": {
      "op": "SHL"
    },
    "4088": {
      "op": "SUB"
    },
    "4089": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4090": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4091": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4092": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6912,
        6919
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4099": {
      "op": "SHL"
    },
    "4100": {
      "op": "SUB"
    },
    "4101": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6884,
        6890
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "4134": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6884,
        6903
      ],
      "op": "AND",
      "path": "7"
    },
    "4135": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6884,
        6903
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4136": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6922,
        6929
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4137": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6884,
        6903
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10CF"
    },
    "4140": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "jump": "i",
      "offset": [
        6884,
        6930
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4141": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        6884,
        6930
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4142": {
      "op": "POP"
    },
    "4143": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4145": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4146": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4147": {
      "fn": "AniwarVesting.withdrawContractBalance",
      "jump": "o",
      "offset": [
        6431,
        6937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4148": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4149": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4151": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4158": {
      "op": "SHL"
    },
    "4159": {
      "op": "SUB"
    },
    "4160": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4161": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4162": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4163": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105E"
    },
    "4166": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4167": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4169": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4170": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4178": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4179": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4181": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4182": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "4185": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4186": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1450"
    },
    "4189": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4190": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4197": {
      "op": "SHL"
    },
    "4198": {
      "op": "SUB"
    },
    "4199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 39
    },
    "4200": {
      "branch": 70,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "4201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C3"
    },
    "4204": {
      "branch": 70,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4207": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4214": {
      "op": "SHL"
    },
    "4215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "4223": {
      "op": "MSTORE"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "ADD"
    },
    "4230": {
      "op": "MSTORE"
    },
    "4231": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4266": {
      "op": "DUP3"
    },
    "4267": {
      "op": "ADD"
    },
    "4268": {
      "op": "MSTORE"
    },
    "4269": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4278": {
      "op": "SHL"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4281": {
      "op": "DUP3"
    },
    "4282": {
      "op": "ADD"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4286": {
      "op": "ADD"
    },
    "4287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "4290": {
      "op": "JUMP"
    },
    "4291": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4292": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0x10CC"
    },
    "4295": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1126"
    },
    "4299": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4301": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "4302": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4303": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4304": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 41,
      "value": "0x40"
    },
    "4306": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4307": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4314": {
      "op": "SHL"
    },
    "4315": {
      "op": "SUB"
    },
    "4316": {
      "op": "DUP5"
    },
    "4317": {
      "op": "AND"
    },
    "4318": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4320": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4321": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "3"
    },
    "4322": {
      "op": "MSTORE"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4325": {
      "op": "DUP1"
    },
    "4326": {
      "op": "DUP3"
    },
    "4327": {
      "op": "ADD"
    },
    "4328": {
      "op": "DUP5"
    },
    "4329": {
      "op": "SWAP1"
    },
    "4330": {
      "op": "MSTORE"
    },
    "4331": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4332": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4333": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4334": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4335": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "3"
    },
    "4336": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4337": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4338": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "3"
    },
    "4339": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4340": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4343": {
      "op": "SWAP1"
    },
    "4344": {
      "op": "SWAP2"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4347": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4348": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4349": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4352": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "3"
    },
    "4353": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4354": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4361": {
      "op": "SHL"
    },
    "4362": {
      "op": "SUB"
    },
    "4363": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "3"
    },
    "4364": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4371": {
      "op": "SHL"
    },
    "4372": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "3"
    },
    "4373": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4374": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4375": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1121"
    },
    "4378": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4379": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4380": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4381": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1176"
    },
    "4384": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4385": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4386": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "3"
    },
    "4387": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "3"
    },
    "4388": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "3"
    },
    "4389": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        839
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4390": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4391": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4393": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4394": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4401": {
      "op": "SHL"
    },
    "4402": {
      "op": "SUB"
    },
    "4403": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 42
    },
    "4404": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4405": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4412": {
      "op": "SHL"
    },
    "4413": {
      "op": "SUB"
    },
    "4414": {
      "op": "NOT"
    },
    "4415": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4416": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "4417": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4418": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "4419": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4420": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4421": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x40"
    },
    "4423": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4424": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4425": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4426": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4427": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "4428": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4429": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4430": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4431": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4464": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4465": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4466": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4467": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "4468": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "4469": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4470": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4471": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4473": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CB"
    },
    "4476": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4477": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4480": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4481": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4483": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "3"
    },
    "4484": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4486": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4487": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4488": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4490": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4491": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4492": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4494": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "3"
    },
    "4495": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "4528": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4529": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4530": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "3"
    },
    "4531": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4538": {
      "op": "SHL"
    },
    "4539": {
      "op": "SUB"
    },
    "4540": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "3"
    },
    "4541": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1248"
    },
    "4544": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4545": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4546": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4547": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4548": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4553": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "3"
    },
    "4554": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4555": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4556": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4557": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4558": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4559": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4560": {
      "op": "POP"
    },
    "4561": {
      "branch": 72,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1121"
    },
    "4565": {
      "branch": 72,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4566": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 44
    },
    "4567": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4568": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4570": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "3"
    },
    "4571": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4572": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "3"
    },
    "4575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11E9"
    },
    "4579": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4580": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4581": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1569"
    },
    "4584": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4585": {
      "branch": 73,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1121"
    },
    "4589": {
      "branch": 73,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4590": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4592": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4593": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4599": {
      "op": "SHL"
    },
    "4600": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4601": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4604": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4606": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4607": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "3"
    },
    "4608": {
      "op": "MSTORE"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4613": {
      "op": "DUP3"
    },
    "4614": {
      "op": "ADD"
    },
    "4615": {
      "op": "MSTORE"
    },
    "4616": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4651": {
      "op": "DUP3"
    },
    "4652": {
      "op": "ADD"
    },
    "4653": {
      "op": "MSTORE"
    },
    "4654": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "4667": {
      "op": "SHL"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4670": {
      "op": "DUP3"
    },
    "4671": {
      "op": "ADD"
    },
    "4672": {
      "op": "MSTORE"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x319"
    },
    "4679": {
      "op": "JUMP"
    },
    "4680": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4681": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4683": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 45,
      "value": "0x1257"
    },
    "4686": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4687": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4688": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4690": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4691": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1261"
    },
    "4694": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4695": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4696": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4697": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "4"
    },
    "4698": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4699": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4700": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4701": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "4"
    },
    "4702": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "4"
    },
    "4703": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "4"
    },
    "4704": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4708": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 46
    },
    "4709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "4710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "4"
    },
    "4711": {
      "branch": 67,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4712": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C2"
    },
    "4715": {
      "branch": 67,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4716": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4725": {
      "op": "SHL"
    },
    "4726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "4"
    },
    "4734": {
      "op": "MSTORE"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4739": {
      "op": "DUP3"
    },
    "4740": {
      "op": "ADD"
    },
    "4741": {
      "op": "MSTORE"
    },
    "4742": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4777": {
      "op": "DUP3"
    },
    "4778": {
      "op": "ADD"
    },
    "4779": {
      "op": "MSTORE"
    },
    "4780": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4789": {
      "op": "SHL"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4792": {
      "op": "DUP3"
    },
    "4793": {
      "op": "ADD"
    },
    "4794": {
      "op": "MSTORE"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4797": {
      "op": "ADD"
    },
    "4798": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x319"
    },
    "4801": {
      "op": "JUMP"
    },
    "4802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4803": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4804": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "4805": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 47,
      "value": "0x1310"
    },
    "4808": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4809": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4811": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4818": {
      "op": "SHL"
    },
    "4819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4820": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4823": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4825": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4826": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "4"
    },
    "4827": {
      "op": "MSTORE"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4832": {
      "op": "DUP3"
    },
    "4833": {
      "op": "ADD"
    },
    "4834": {
      "op": "MSTORE"
    },
    "4835": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4870": {
      "op": "DUP3"
    },
    "4871": {
      "op": "ADD"
    },
    "4872": {
      "op": "MSTORE"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4875": {
      "op": "ADD"
    },
    "4876": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x319"
    },
    "4879": {
      "op": "JUMP"
    },
    "4880": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4884": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4891": {
      "op": "SHL"
    },
    "4892": {
      "op": "SUB"
    },
    "4893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "4"
    },
    "4894": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "4"
    },
    "4896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x132C"
    },
    "4902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15BB"
    },
    "4907": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4908": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4913": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4915": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4916": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "4"
    },
    "4917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "4"
    },
    "4920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "4"
    },
    "4921": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "4"
    },
    "4922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4924": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4928": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "4"
    },
    "4932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1369"
    },
    "4935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "4"
    },
    "4944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3F"
    },
    "4946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "4"
    },
    "4949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "4965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x136E"
    },
    "4968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 48,
      "value": "0x137E"
    },
    "4983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1389"
    },
    "4989": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "4992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "4993": {
      "op": "POP"
    },
    "4994": {
      "op": "POP"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "op": "POP"
    },
    "4997": {
      "op": "POP"
    },
    "4998": {
      "op": "POP"
    },
    "4999": {
      "op": "POP"
    },
    "5000": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5001": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5002": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "5004": {
      "branch": 68,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5005": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5006": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1398"
    },
    "5009": {
      "branch": 68,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5010": {
      "op": "POP"
    },
    "5011": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 49
    },
    "5012": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x125A"
    },
    "5015": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5016": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5017": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5018": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5019": {
      "branch": 69,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5020": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13A8"
    },
    "5023": {
      "branch": 69,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5024": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5025": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5026": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5027": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5028": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5030": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "4"
    },
    "5031": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5032": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5033": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 50
    },
    "5034": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5036": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5043": {
      "op": "SHL"
    },
    "5044": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5045": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5046": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5048": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "4"
    },
    "5049": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x319"
    },
    "5052": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5053": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5054": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15D7"
    },
    "5057": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5058": {
      "op": "JUMPDEST"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5063": {
      "op": "DUP3"
    },
    "5064": {
      "op": "DUP5"
    },
    "5065": {
      "op": "SUB"
    },
    "5066": {
      "op": "SLT"
    },
    "5067": {
      "op": "ISZERO"
    },
    "5068": {
      "op": "PUSH2",
      "value": "0x13D4"
    },
    "5071": {
      "op": "JUMPI"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5074": {
      "op": "DUP1"
    },
    "5075": {
      "op": "REVERT"
    },
    "5076": {
      "op": "JUMPDEST"
    },
    "5077": {
      "op": "POP"
    },
    "5078": {
      "op": "CALLDATALOAD"
    },
    "5079": {
      "op": "SWAP2"
    },
    "5080": {
      "op": "SWAP1"
    },
    "5081": {
      "op": "POP"
    },
    "5082": {
      "jump": "o",
      "op": "JUMP"
    },
    "5083": {
      "op": "JUMPDEST"
    },
    "5084": {
      "op": "DUP1"
    },
    "5085": {
      "op": "CALLDATALOAD"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5092": {
      "op": "SHL"
    },
    "5093": {
      "op": "SUB"
    },
    "5094": {
      "op": "DUP2"
    },
    "5095": {
      "op": "AND"
    },
    "5096": {
      "op": "DUP2"
    },
    "5097": {
      "op": "EQ"
    },
    "5098": {
      "op": "PUSH2",
      "value": "0xC64"
    },
    "5101": {
      "op": "JUMPI"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5104": {
      "op": "DUP1"
    },
    "5105": {
      "op": "REVERT"
    },
    "5106": {
      "op": "JUMPDEST"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5109": {
      "op": "DUP1"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5112": {
      "op": "DUP4"
    },
    "5113": {
      "op": "DUP6"
    },
    "5114": {
      "op": "SUB"
    },
    "5115": {
      "op": "SLT"
    },
    "5116": {
      "op": "ISZERO"
    },
    "5117": {
      "op": "PUSH2",
      "value": "0x1405"
    },
    "5120": {
      "op": "JUMPI"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5123": {
      "op": "DUP1"
    },
    "5124": {
      "op": "REVERT"
    },
    "5125": {
      "op": "JUMPDEST"
    },
    "5126": {
      "op": "PUSH2",
      "value": "0x140E"
    },
    "5129": {
      "op": "DUP4"
    },
    "5130": {
      "op": "PUSH2",
      "value": "0x13DB"
    },
    "5133": {
      "jump": "i",
      "op": "JUMP"
    },
    "5134": {
      "op": "JUMPDEST"
    },
    "5135": {
      "op": "SWAP5"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5138": {
      "op": "SWAP4"
    },
    "5139": {
      "op": "SWAP1"
    },
    "5140": {
      "op": "SWAP4"
    },
    "5141": {
      "op": "ADD"
    },
    "5142": {
      "op": "CALLDATALOAD"
    },
    "5143": {
      "op": "SWAP4"
    },
    "5144": {
      "op": "POP"
    },
    "5145": {
      "op": "POP"
    },
    "5146": {
      "op": "POP"
    },
    "5147": {
      "jump": "o",
      "op": "JUMP"
    },
    "5148": {
      "op": "JUMPDEST"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5153": {
      "op": "DUP3"
    },
    "5154": {
      "op": "DUP5"
    },
    "5155": {
      "op": "SUB"
    },
    "5156": {
      "op": "SLT"
    },
    "5157": {
      "op": "ISZERO"
    },
    "5158": {
      "op": "PUSH2",
      "value": "0x142E"
    },
    "5161": {
      "op": "JUMPI"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5164": {
      "op": "DUP1"
    },
    "5165": {
      "op": "REVERT"
    },
    "5166": {
      "op": "JUMPDEST"
    },
    "5167": {
      "op": "PUSH2",
      "value": "0x125A"
    },
    "5170": {
      "op": "DUP3"
    },
    "5171": {
      "op": "PUSH2",
      "value": "0x13DB"
    },
    "5174": {
      "jump": "i",
      "op": "JUMP"
    },
    "5175": {
      "op": "JUMPDEST"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5180": {
      "op": "DUP3"
    },
    "5181": {
      "op": "DUP5"
    },
    "5182": {
      "op": "SUB"
    },
    "5183": {
      "op": "SLT"
    },
    "5184": {
      "op": "ISZERO"
    },
    "5185": {
      "op": "PUSH2",
      "value": "0x1449"
    },
    "5188": {
      "op": "JUMPI"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5191": {
      "op": "DUP1"
    },
    "5192": {
      "op": "REVERT"
    },
    "5193": {
      "op": "JUMPDEST"
    },
    "5194": {
      "op": "POP"
    },
    "5195": {
      "op": "MLOAD"
    },
    "5196": {
      "op": "SWAP2"
    },
    "5197": {
      "op": "SWAP1"
    },
    "5198": {
      "op": "POP"
    },
    "5199": {
      "jump": "o",
      "op": "JUMP"
    },
    "5200": {
      "op": "JUMPDEST"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5203": {
      "op": "DUP1"
    },
    "5204": {
      "op": "DUP3"
    },
    "5205": {
      "op": "MSTORE"
    },
    "5206": {
      "op": "DUP2"
    },
    "5207": {
      "op": "DUP2"
    },
    "5208": {
      "op": "ADD"
    },
    "5209": {
      "op": "MSTORE"
    },
    "5210": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5245": {
      "op": "DUP3"
    },
    "5246": {
      "op": "ADD"
    },
    "5247": {
      "op": "MSTORE"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5250": {
      "op": "ADD"
    },
    "5251": {
      "op": "SWAP1"
    },
    "5252": {
      "jump": "o",
      "op": "JUMP"
    },
    "5253": {
      "op": "JUMPDEST"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5256": {
      "op": "DUP1"
    },
    "5257": {
      "op": "DUP3"
    },
    "5258": {
      "op": "MSTORE"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "5261": {
      "op": "SWAP1"
    },
    "5262": {
      "op": "DUP3"
    },
    "5263": {
      "op": "ADD"
    },
    "5264": {
      "op": "MSTORE"
    },
    "5265": {
      "op": "PUSH19",
      "value": "0x56657374696E67206973205374617274656421"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "5287": {
      "op": "SHL"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5290": {
      "op": "DUP3"
    },
    "5291": {
      "op": "ADD"
    },
    "5292": {
      "op": "MSTORE"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5295": {
      "op": "ADD"
    },
    "5296": {
      "op": "SWAP1"
    },
    "5297": {
      "jump": "o",
      "op": "JUMP"
    },
    "5298": {
      "op": "JUMPDEST"
    },
    "5299": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5306": {
      "op": "SHL"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5309": {
      "op": "MSTORE"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5314": {
      "op": "MSTORE"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5319": {
      "op": "REVERT"
    },
    "5320": {
      "op": "JUMPDEST"
    },
    "5321": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5328": {
      "op": "SHL"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5331": {
      "op": "MSTORE"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5336": {
      "op": "MSTORE"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5341": {
      "op": "REVERT"
    },
    "5342": {
      "op": "JUMPDEST"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5345": {
      "op": "DUP3"
    },
    "5346": {
      "op": "NOT"
    },
    "5347": {
      "op": "DUP3"
    },
    "5348": {
      "op": "GT"
    },
    "5349": {
      "op": "ISZERO"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x14F1"
    },
    "5353": {
      "op": "JUMPI"
    },
    "5354": {
      "op": "PUSH2",
      "value": "0x14F1"
    },
    "5357": {
      "op": "PUSH2",
      "value": "0x14C8"
    },
    "5360": {
      "jump": "i",
      "op": "JUMP"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "op": "POP"
    },
    "5363": {
      "op": "ADD"
    },
    "5364": {
      "op": "SWAP1"
    },
    "5365": {
      "jump": "o",
      "op": "JUMP"
    },
    "5366": {
      "op": "JUMPDEST"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5371": {
      "op": "NOT"
    },
    "5372": {
      "op": "DUP3"
    },
    "5373": {
      "op": "EQ"
    },
    "5374": {
      "op": "ISZERO"
    },
    "5375": {
      "op": "PUSH2",
      "value": "0x150A"
    },
    "5378": {
      "op": "JUMPI"
    },
    "5379": {
      "op": "PUSH2",
      "value": "0x150A"
    },
    "5382": {
      "op": "PUSH2",
      "value": "0x14C8"
    },
    "5385": {
      "jump": "i",
      "op": "JUMP"
    },
    "5386": {
      "op": "JUMPDEST"
    },
    "5387": {
      "op": "POP"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5390": {
      "op": "ADD"
    },
    "5391": {
      "op": "SWAP1"
    },
    "5392": {
      "jump": "o",
      "op": "JUMP"
    },
    "5393": {
      "op": "JUMPDEST"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5396": {
      "op": "DUP3"
    },
    "5397": {
      "op": "DUP3"
    },
    "5398": {
      "op": "LT"
    },
    "5399": {
      "op": "ISZERO"
    },
    "5400": {
      "op": "PUSH2",
      "value": "0x1523"
    },
    "5403": {
      "op": "JUMPI"
    },
    "5404": {
      "op": "PUSH2",
      "value": "0x1523"
    },
    "5407": {
      "op": "PUSH2",
      "value": "0x14C8"
    },
    "5410": {
      "jump": "i",
      "op": "JUMP"
    },
    "5411": {
      "op": "JUMPDEST"
    },
    "5412": {
      "op": "POP"
    },
    "5413": {
      "op": "SUB"
    },
    "5414": {
      "op": "SWAP1"
    },
    "5415": {
      "jump": "o",
      "op": "JUMP"
    },
    "5416": {
      "op": "JUMPDEST"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5419": {
      "op": "DUP3"
    },
    "5420": {
      "op": "PUSH2",
      "value": "0x1545"
    },
    "5423": {
      "op": "JUMPI"
    },
    "5424": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5431": {
      "op": "SHL"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5434": {
      "op": "MSTORE"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5439": {
      "op": "MSTORE"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5444": {
      "op": "REVERT"
    },
    "5445": {
      "op": "JUMPDEST"
    },
    "5446": {
      "op": "POP"
    },
    "5447": {
      "op": "DIV"
    },
    "5448": {
      "op": "SWAP1"
    },
    "5449": {
      "jump": "o",
      "op": "JUMP"
    },
    "5450": {
      "op": "JUMPDEST"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5453": {
      "op": "DUP2"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5456": {
      "op": "NOT"
    },
    "5457": {
      "op": "DIV"
    },
    "5458": {
      "op": "DUP4"
    },
    "5459": {
      "op": "GT"
    },
    "5460": {
      "op": "DUP3"
    },
    "5461": {
      "op": "ISZERO"
    },
    "5462": {
      "op": "ISZERO"
    },
    "5463": {
      "op": "AND"
    },
    "5464": {
      "op": "ISZERO"
    },
    "5465": {
      "op": "PUSH2",
      "value": "0x1564"
    },
    "5468": {
      "op": "JUMPI"
    },
    "5469": {
      "op": "PUSH2",
      "value": "0x1564"
    },
    "5472": {
      "op": "PUSH2",
      "value": "0x14C8"
    },
    "5475": {
      "jump": "i",
      "op": "JUMP"
    },
    "5476": {
      "op": "JUMPDEST"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "op": "MUL"
    },
    "5479": {
      "op": "SWAP1"
    },
    "5480": {
      "jump": "o",
      "op": "JUMP"
    },
    "5481": {
      "op": "JUMPDEST"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5486": {
      "op": "DUP3"
    },
    "5487": {
      "op": "DUP5"
    },
    "5488": {
      "op": "SUB"
    },
    "5489": {
      "op": "SLT"
    },
    "5490": {
      "op": "ISZERO"
    },
    "5491": {
      "op": "PUSH2",
      "value": "0x157B"
    },
    "5494": {
      "op": "JUMPI"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5497": {
      "op": "DUP1"
    },
    "5498": {
      "op": "REVERT"
    },
    "5499": {
      "op": "JUMPDEST"
    },
    "5500": {
      "op": "DUP2"
    },
    "5501": {
      "op": "MLOAD"
    },
    "5502": {
      "op": "DUP1"
    },
    "5503": {
      "op": "ISZERO"
    },
    "5504": {
      "op": "ISZERO"
    },
    "5505": {
      "op": "DUP2"
    },
    "5506": {
      "op": "EQ"
    },
    "5507": {
      "op": "PUSH2",
      "value": "0x125A"
    },
    "5510": {
      "op": "JUMPI"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5513": {
      "op": "DUP1"
    },
    "5514": {
      "op": "REVERT"
    },
    "5515": {
      "op": "JUMPDEST"
    },
    "5516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5518": {
      "op": "JUMPDEST"
    },
    "5519": {
      "op": "DUP4"
    },
    "5520": {
      "op": "DUP2"
    },
    "5521": {
      "op": "LT"
    },
    "5522": {
      "op": "ISZERO"
    },
    "5523": {
      "op": "PUSH2",
      "value": "0x15A6"
    },
    "5526": {
      "op": "JUMPI"
    },
    "5527": {
      "op": "DUP2"
    },
    "5528": {
      "op": "DUP2"
    },
    "5529": {
      "op": "ADD"
    },
    "5530": {
      "op": "MLOAD"
    },
    "5531": {
      "op": "DUP4"
    },
    "5532": {
      "op": "DUP3"
    },
    "5533": {
      "op": "ADD"
    },
    "5534": {
      "op": "MSTORE"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5537": {
      "op": "ADD"
    },
    "5538": {
      "op": "PUSH2",
      "value": "0x158E"
    },
    "5541": {
      "op": "JUMP"
    },
    "5542": {
      "op": "JUMPDEST"
    },
    "5543": {
      "op": "DUP4"
    },
    "5544": {
      "op": "DUP2"
    },
    "5545": {
      "op": "GT"
    },
    "5546": {
      "op": "ISZERO"
    },
    "5547": {
      "op": "PUSH2",
      "value": "0x15B5"
    },
    "5550": {
      "op": "JUMPI"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5553": {
      "op": "DUP5"
    },
    "5554": {
      "op": "DUP5"
    },
    "5555": {
      "op": "ADD"
    },
    "5556": {
      "op": "MSTORE"
    },
    "5557": {
      "op": "JUMPDEST"
    },
    "5558": {
      "op": "POP"
    },
    "5559": {
      "op": "POP"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "op": "POP"
    },
    "5562": {
      "jump": "o",
      "op": "JUMP"
    },
    "5563": {
      "op": "JUMPDEST"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5566": {
      "op": "DUP3"
    },
    "5567": {
      "op": "MLOAD"
    },
    "5568": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5571": {
      "op": "DUP2"
    },
    "5572": {
      "op": "DUP5"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5575": {
      "op": "DUP8"
    },
    "5576": {
      "op": "ADD"
    },
    "5577": {
      "op": "PUSH2",
      "value": "0x158B"
    },
    "5580": {
      "jump": "i",
      "op": "JUMP"
    },
    "5581": {
      "op": "JUMPDEST"
    },
    "5582": {
      "op": "SWAP2"
    },
    "5583": {
      "op": "SWAP1"
    },
    "5584": {
      "op": "SWAP2"
    },
    "5585": {
      "op": "ADD"
    },
    "5586": {
      "op": "SWAP3"
    },
    "5587": {
      "op": "SWAP2"
    },
    "5588": {
      "op": "POP"
    },
    "5589": {
      "op": "POP"
    },
    "5590": {
      "jump": "o",
      "op": "JUMP"
    },
    "5591": {
      "op": "JUMPDEST"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5594": {
      "op": "DUP2"
    },
    "5595": {
      "op": "MSTORE"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5598": {
      "op": "DUP3"
    },
    "5599": {
      "op": "MLOAD"
    },
    "5600": {
      "op": "DUP1"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5603": {
      "op": "DUP5"
    },
    "5604": {
      "op": "ADD"
    },
    "5605": {
      "op": "MSTORE"
    },
    "5606": {
      "op": "PUSH2",
      "value": "0x15F6"
    },
    "5609": {
      "op": "DUP2"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5612": {
      "op": "DUP6"
    },
    "5613": {
      "op": "ADD"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5616": {
      "op": "DUP8"
    },
    "5617": {
      "op": "ADD"
    },
    "5618": {
      "op": "PUSH2",
      "value": "0x158B"
    },
    "5621": {
      "jump": "i",
      "op": "JUMP"
    },
    "5622": {
      "op": "JUMPDEST"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5625": {
      "op": "ADD"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5628": {
      "op": "NOT"
    },
    "5629": {
      "op": "AND"
    },
    "5630": {
      "op": "SWAP2"
    },
    "5631": {
      "op": "SWAP1"
    },
    "5632": {
      "op": "SWAP2"
    },
    "5633": {
      "op": "ADD"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5636": {
      "op": "ADD"
    },
    "5637": {
      "op": "SWAP3"
    },
    "5638": {
      "op": "SWAP2"
    },
    "5639": {
      "op": "POP"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f37dac500566cad7238d6615c75e7d4425703de1",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title TokenVesting\n */\ncontract AniwarVesting is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    struct VestingSchedule {\n        // Vesting Schedule Id\n        uint256 id;\n        // beneficiary of tokens after they are released\n        address beneficiary;\n        // total amount of tokens to be released at the end of the vesting\n        uint256 totalAmountReleased;\n        // total amount of token has been withdrawn\n        uint256 totalAmountHasBeenWithdrawn;\n    }\n\n    struct Beneficiary {\n        uint256 vestingId;\n        // whether or not the vesting has been init\n        bool initialized;\n    }\n\n    bool public isStarted;\n    uint256 public startTime;\n    uint256 private immutable _splitDuration;\n    uint256 private immutable _splitCounter;\n\n    uint256 public vestingIdCounter;\n    uint256 private _vestingSchedulesTotalAmount;\n    uint256 private _vestingSchedulesTotalAmountLeft;\n\n    // address of the ERC20 token\n    IERC20 private immutable _token;\n\n    VestingSchedule[] public vestingSchedules;\n    address[] private _beneficiariesAddress;\n    mapping(address => Beneficiary) private _beneficiaries;\n\n    event Released(uint256 amount);\n    event Begin();\n\n    modifier onlyIfVestingScheduleStarted() {\n        require(isStarted, \"Vesting is not Started Yet!\");\n        _;\n    }\n    modifier onlyIfVestingScheduleNotStarted() {\n        require(!isStarted, \"Vesting is Started!\");\n        _;\n    }\n\n    constructor(\n        address token_,\n        uint256 splitDuration_,\n        uint256 splitCounter_\n    ) {\n        require(token_ != address(0x0), \"Token address wrong!\");\n        _token = IERC20(token_);\n        _splitDuration = splitDuration_;\n        _splitCounter = splitCounter_;\n    }\n\n    function getToken() public view returns (address) {\n        return address(_token);\n    }\n\n    function createVestingSchedule(address _beneficiary, uint256 _amount)\n        public\n        onlyOwner\n        onlyIfVestingScheduleNotStarted\n    {\n        require(\n            _amount <= _vestingSchedulesTotalAmountLeft,\n            \"TokenVesting: cannot create vesting schedule because not sufficient tokens\"\n        );\n        require(_amount > 0, \"TokenVesting: amount must be > 0\");\n        if (!_beneficiaries[_beneficiary].initialized) {\n            Beneficiary storage beneficiary = _beneficiaries[_beneficiary];\n            beneficiary.vestingId = vestingIdCounter;\n            beneficiary.initialized = true;\n            _beneficiariesAddress.push(_beneficiary);\n            vestingSchedules.push(\n                VestingSchedule(vestingIdCounter, _beneficiary, _amount, 0)\n            );\n            vestingIdCounter++;\n        } else {\n            VestingSchedule storage vestingSchedule = vestingSchedules[\n                _beneficiaries[_beneficiary].vestingId\n            ];\n            vestingSchedule.totalAmountReleased =\n                vestingSchedule.totalAmountReleased +\n                _amount;\n        }\n        _vestingSchedulesTotalAmountLeft =\n            _vestingSchedulesTotalAmountLeft -\n            _amount;\n    }\n\n    function startAllSchedule()\n        public\n        onlyOwner\n        onlyIfVestingScheduleNotStarted\n    {\n        require(\n            _token.balanceOf(address(this)) >= _vestingSchedulesTotalAmount,\n            \"Amount exceeds balance and Init\"\n        );\n        isStarted = true;\n        startTime = getCurrentTime();\n        emit Begin();\n    }\n\n    function setInitTotalAmount(uint256 _amount)\n        public\n        onlyOwner\n        onlyIfVestingScheduleNotStarted\n    {\n        require(_amount > 0, \"Amount must be > 0!\");\n        require(\n            _amount <= _token.balanceOf(address(this)),\n            \"Amount exceeds balance!\"\n        );\n        require(\n            _amount >=\n                _vestingSchedulesTotalAmount - _vestingSchedulesTotalAmountLeft,\n            \"Amount must be bigger than previous assigned!\"\n        );\n        _vestingSchedulesTotalAmountLeft =\n            _amount -\n            (_vestingSchedulesTotalAmount - _vestingSchedulesTotalAmountLeft);\n        _vestingSchedulesTotalAmount = _amount;\n    }\n\n    function release(uint256 _amount) public nonReentrant {\n        VestingSchedule storage vestingSchedule = vestingSchedules[\n            _beneficiaries[address(msg.sender)].vestingId\n        ];\n        bool isBeneficiary = msg.sender == vestingSchedule.beneficiary;\n        bool isOwner = msg.sender == owner();\n        require(\n            isBeneficiary || isOwner,\n            \"TokenVesting: only beneficiary and owner can release vested tokens\"\n        );\n        require(\n            _beneficiaries[address(msg.sender)].initialized,\n            \"Not in Vesting Schedule\"\n        );\n        require(_amount > 0, \"Amount must be > 0\");\n        require(\n            _amount <= calculateWithdrawable(address(msg.sender)),\n            \"Amount withdrawable insufficents!\"\n        );\n        vestingSchedule.totalAmountHasBeenWithdrawn =\n            vestingSchedule.totalAmountHasBeenWithdrawn +\n            _amount;\n        address payable beneficiaryPayable = payable(\n            vestingSchedule.beneficiary\n        );\n        _token.safeTransfer(beneficiaryPayable, _amount);\n        emit Released(_amount);\n    }\n\n    function calculateWithdrawable(address _beneficiary)\n        public\n        view\n        onlyIfVestingScheduleStarted\n        returns (uint256)\n    {\n        Beneficiary memory beneficiary = _beneficiaries[_beneficiary];\n        require(beneficiary.initialized, \"Beneficiary does not exist!\");\n        VestingSchedule memory vestingSchedule = vestingSchedules[\n            beneficiary.vestingId\n        ];\n        uint256 currentTime = getCurrentTime();\n        uint256 currentSplit = (currentTime - startTime) / _splitDuration;\n        if (currentSplit >= _splitCounter) {\n            currentSplit = _splitCounter;\n        }\n        if (currentSplit == 0) {\n            currentSplit = 1;\n        }\n        return\n            ((vestingSchedule.totalAmountReleased / _splitCounter) *\n                currentSplit) - vestingSchedule.totalAmountHasBeenWithdrawn;\n    }\n\n    function withdrawContractBalance(uint256 _amount)\n        public\n        nonReentrant\n        onlyOwner\n    {\n        require(\n            !isStarted || _amount <= _vestingSchedulesTotalAmountLeft,\n            \"Amount exceeds balance and Init\"\n        );\n        _vestingSchedulesTotalAmount = _vestingSchedulesTotalAmount - _amount;\n        _vestingSchedulesTotalAmountLeft =\n            _vestingSchedulesTotalAmountLeft -\n            _amount;\n        _token.safeTransfer(payable(owner()), _amount);\n    }\n\n    function getBalance() public view returns (uint256) {\n        return _token.balanceOf(address(this));\n    }\n\n    function getCurrentTime() public view returns (uint256) {\n        return block.timestamp;\n    }\n}\n",
  "sourceMap": "328:6825:7:-:0;;;1749:290;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:5;867:9:0;:23::i;:::-;1637:1:1;1742:22;;-1:-1:-1;;;;;1872:22:7;;1864:55;;;;-1:-1:-1;;;1864:55:7;;633:2:9;1864:55:7;;;615:21:9;672:2;652:18;;;645:30;711:22;691:18;;;684:50;751:18;;1864:55:7;;;;;;;;-1:-1:-1;;;;;1929:23:7;;;;;1962:31;;2003:29;;328:6825;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:412:9:-;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;213:16;;-1:-1:-1;;;;;258:31:9;;248:42;;238:70;;304:1;301;294:12;238:70;372:2;357:18;;351:25;416:2;401:18;;;395:25;327:5;;351:25;;-1:-1:-1;395:25:9;14:412;-1:-1:-1;;;14:412:9:o;431:344::-;328:6825:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/AniwarVesting.sol",
  "type": "contract"
}