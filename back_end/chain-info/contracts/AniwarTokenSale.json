{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "splitDuration_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "tokensAllowed_",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_initTokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnContractBalanceLeft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_allowedToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "buyToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "buyers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalAllowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountHasBeenWithdrawn",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "initialized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyerAddress",
          "type": "address"
        }
      ],
      "name": "calculateWithdrawableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "getSplitByTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimes",
      "outputs": [
        {
          "internalType": "uint256[12]",
          "name": "",
          "type": "uint256[12]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStarted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "splitCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "splitDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "startSaleSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startedTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokensAllowed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
    "2": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "3": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "4": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "5": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "6": "contracts/AniwarTokenSale.sol"
  },
  "ast": {
    "absolutePath": "contracts/AniwarTokenSale.sol",
    "exportedSymbols": {
      "Address": [
        2453
      ],
      "AniwarTokenSale": [
        585
      ],
      "Context": [
        2156
      ],
      "IERC20": [
        1910
      ],
      "Ownable": [
        1792
      ],
      "ReentrancyGuard": [
        1832
      ],
      "SafeERC20": [
        2134
      ]
    },
    "id": 586,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 586,
        "sourceUnit": 1911,
        "src": "57:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 586,
        "sourceUnit": 2135,
        "src": "114:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 586,
        "sourceUnit": 1833,
        "src": "180:62:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 586,
        "sourceUnit": 1793,
        "src": "243:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1792,
              "src": "355:7:6"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "355:7:6"
          },
          {
            "baseName": {
              "id": 8,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1832,
              "src": "364:15:6"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "364:15:6"
          }
        ],
        "canonicalName": "AniwarTokenSale",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 585,
        "linearizedBaseContracts": [
          585,
          1832,
          1792,
          2156
        ],
        "name": "AniwarTokenSale",
        "nameLocation": "336:15:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13,
            "libraryName": {
              "id": 10,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2134,
              "src": "392:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "386:27:6",
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1910,
                "src": "406:6:6"
              },
              "referencedDeclaration": 1910,
              "src": "406:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1910",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "443:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "418:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1910",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1910,
                "src": "418:6:6"
              },
              "referencedDeclaration": 1910,
              "src": "418:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1910",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "70d5ae05",
            "id": 19,
            "mutability": "constant",
            "name": "burnAddress",
            "nameLocation": "479:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "455:88:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "455:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "501:42:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x000000000000000000000000000000000000dEaD"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "AniwarTokenSale.Buyer",
            "id": 28,
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "totalAllowedAmount",
                "nameLocation": "581:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "573:26:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "573:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "totalAmount",
                "nameLocation": "617:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "609:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "609:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "amountHasBeenWithdrawn",
                "nameLocation": "719:22:6",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "711:30:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "711:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "initialized",
                "nameLocation": "779:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "774:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 26,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "774:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Buyer",
            "nameLocation": "557:5:6",
            "nodeType": "StructDefinition",
            "scope": 585,
            "src": "550:247:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "97a993aa",
            "id": 33,
            "mutability": "mutable",
            "name": "buyers",
            "nameLocation": "836:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "803:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buyer_$28_storage_$",
              "typeString": "mapping(address => struct AniwarTokenSale.Buyer)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "811:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "803:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buyer_$28_storage_$",
                "typeString": "mapping(address => struct AniwarTokenSale.Buyer)"
              },
              "valueType": {
                "id": 31,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30,
                  "name": "Buyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28,
                  "src": "822:5:6"
                },
                "referencedDeclaration": 28,
                "src": "822:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                  "typeString": "struct AniwarTokenSale.Buyer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cebc6ad5",
            "id": 35,
            "mutability": "mutable",
            "name": "startedTime",
            "nameLocation": "863:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "848:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "848:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9106d7ba",
            "id": 37,
            "mutability": "mutable",
            "name": "totalSold",
            "nameLocation": "895:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "880:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "880:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9752d61b",
            "id": 39,
            "mutability": "mutable",
            "name": "splitDuration",
            "nameLocation": "925:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "910:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "910:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a035b1fe",
            "id": 41,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "959:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "944:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "944:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "26825056",
            "id": 44,
            "mutability": "constant",
            "name": "splitCount",
            "nameLocation": "994:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "970:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "970:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3132",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1007:2:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_12_by_1",
                "typeString": "int_const 12"
              },
              "value": "12"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a7ccc0ed",
            "id": 46,
            "mutability": "mutable",
            "name": "initTokenAmount",
            "nameLocation": "1030:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "1015:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1015:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eb1e5825",
            "id": 49,
            "mutability": "mutable",
            "name": "tokensAllowed",
            "nameLocation": "1068:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "1051:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 47,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1051:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 48,
              "nodeType": "ArrayTypeName",
              "src": "1051:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "544736e6",
            "id": 51,
            "mutability": "mutable",
            "name": "isStarted",
            "nameLocation": "1124:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 585,
            "src": "1112:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 50,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1112:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 55,
            "name": "Released",
            "nameLocation": "1146:8:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1163:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1155:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1154:16:6"
            },
            "src": "1140:31:6"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "1214:83:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58,
                          "name": "isStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1232:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1245:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1232:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53616c6520686173206e6f7420537461727465642059657421",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1251:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e05cd0385960bf0ec92a8c2e6c2929f1209fd2ad0c75553553bf94e2f3fd33ec",
                          "typeString": "literal_string \"Sale has not Started Yet!\""
                        },
                        "value": "Sale has not Started Yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e05cd0385960bf0ec92a8c2e6c2929f1209fd2ad0c75553553bf94e2f3fd33ec",
                          "typeString": "literal_string \"Sale has not Started Yet!\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1224:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:55:6"
                },
                {
                  "id": 64,
                  "nodeType": "PlaceholderStatement",
                  "src": "1289:1:6"
                }
              ]
            },
            "id": 66,
            "name": "onlyIfSaleScheduleStarted",
            "nameLocation": "1186:25:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1211:2:6"
            },
            "src": "1177:120:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "1343:76:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 69,
                          "name": "isStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1361:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1374:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1361:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53616c6520686173205374617274656421",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1381:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0af5845b75e50c9f0ce7386599192494225619d598c7b1398402c749635b6081",
                          "typeString": "literal_string \"Sale has Started!\""
                        },
                        "value": "Sale has Started!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0af5845b75e50c9f0ce7386599192494225619d598c7b1398402c749635b6081",
                          "typeString": "literal_string \"Sale has Started!\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1353:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1353:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:48:6"
                },
                {
                  "id": 75,
                  "nodeType": "PlaceholderStatement",
                  "src": "1411:1:6"
                }
              ]
            },
            "id": 77,
            "name": "onlyIfSaleScheduleNotStarted",
            "nameLocation": "1312:28:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:2:6"
            },
            "src": "1303:116:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1470:279:6",
              "statements": [
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "isAllowed",
                      "nameLocation": "1485:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 115,
                      "src": "1480:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1480:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1497:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1480:22:6"
                },
                {
                  "body": {
                    "id": 108,
                    "nodeType": "Block",
                    "src": "1563:131:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 96,
                              "name": "tokensAllowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "1581:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 98,
                            "indexExpression": {
                              "id": 97,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "1595:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1581:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 99,
                            "name": "tokenAddress_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "1601:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1581:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 107,
                        "nodeType": "IfStatement",
                        "src": "1577:107:6",
                        "trueBody": {
                          "id": 106,
                          "nodeType": "Block",
                          "src": "1616:68:6",
                          "statements": [
                            {
                              "id": 101,
                              "nodeType": "PlaceholderStatement",
                              "src": "1634:1:6"
                            },
                            {
                              "expression": {
                                "id": 104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 102,
                                  "name": "isAllowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82,
                                  "src": "1653:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1665:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1653:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 105,
                              "nodeType": "ExpressionStatement",
                              "src": "1653:16:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "1532:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 90,
                        "name": "tokensAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1536:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1536:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1532:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 109,
                  "initializationExpression": {
                    "assignments": [
                      86
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1525:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "1517:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1517:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 88,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1529:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1517:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1558:3:6",
                      "subExpression": {
                        "id": 93,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1558:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 95,
                    "nodeType": "ExpressionStatement",
                    "src": "1558:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "1512:182:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111,
                        "name": "isAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1711:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420416c6c6f77656420546f6b656e",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1722:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e49b837acaa1dc62798e82aa2f6f9d366a46a8b8f220fc73b29489d695b9813",
                          "typeString": "literal_string \"Not Allowed Token\""
                        },
                        "value": "Not Allowed Token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e49b837acaa1dc62798e82aa2f6f9d366a46a8b8f220fc73b29489d695b9813",
                          "typeString": "literal_string \"Not Allowed Token\""
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1703:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:39:6"
                }
              ]
            },
            "id": 116,
            "name": "tokenAllowed",
            "nameLocation": "1434:12:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "tokenAddress_",
                  "nameLocation": "1455:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1447:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1446:23:6"
            },
            "src": "1425:324:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "2089:280:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 131,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "2107:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2125:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2117:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2117:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2117:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2107:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616464726573732077726f6e6721",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2131:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_346cb71b351efaa813155f363cefa0ea78b0fefb7abbf37c9369dae03a32f9c5",
                          "typeString": "literal_string \"Token address wrong!\""
                        },
                        "value": "Token address wrong!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_346cb71b351efaa813155f363cefa0ea78b0fefb7abbf37c9369dae03a32f9c5",
                          "typeString": "literal_string \"Token address wrong!\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2099:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:55:6"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2164:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 141,
                      "name": "price_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "2172:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2164:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2164:14:6"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "tokensAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "2188:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 145,
                      "name": "tokensAllowed_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "2204:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2188:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2188:30:6"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "initTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2228:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_initTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2246:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2228:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:34:6"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2272:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1910",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 154,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "2288:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 153,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "2281:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1910_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2281:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1910",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2272:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1910",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:23:6"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "isStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2305:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2317:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2305:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2305:17:6"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 162,
                      "name": "splitDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "2332:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 163,
                      "name": "splitDuration_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "2348:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2332:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:30:6"
                }
              ]
            },
            "id": 167,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "1945:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1937:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "splitDuration_",
                  "nameLocation": "1969:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1961:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "price_",
                  "nameLocation": "2001:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1993:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "tokensAllowed_",
                  "nameLocation": "2034:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "2017:31:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 123,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2017:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 124,
                    "nodeType": "ArrayTypeName",
                    "src": "2017:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_initTokenAmount",
                  "nameLocation": "2066:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "2058:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1927:161:6"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:0:6"
            },
            "scope": 585,
            "src": "1916:453:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "2491:62:6",
              "statements": [
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "isStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2501:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2513:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2501:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2501:16:6"
                },
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 180,
                      "name": "startedTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2527:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 181,
                      "name": "_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "2541:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2527:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:19:6"
                }
              ]
            },
            "functionSelector": "3088f6cc",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 171,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "2440:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2440:9:6"
              },
              {
                "id": 174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 173,
                  "name": "onlyIfSaleScheduleNotStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "2458:28:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2458:28:6"
              }
            ],
            "name": "startSaleSchedule",
            "nameLocation": "2384:17:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "2410:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2402:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2402:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2401:15:6"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2491:0:6"
            },
            "scope": 585,
            "src": "2375:178:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 221,
              "nodeType": "Block",
              "src": "2632:211:6",
              "statements": [
                {
                  "assignments": [
                    196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nameLocation": "2656:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 221,
                      "src": "2642:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                        "typeString": "struct AniwarTokenSale.Buyer"
                      },
                      "typeName": {
                        "id": 195,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 194,
                          "name": "Buyer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28,
                          "src": "2642:5:6"
                        },
                        "referencedDeclaration": 28,
                        "src": "2642:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "initialValue": {
                    "baseExpression": {
                      "id": 197,
                      "name": "buyers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2664:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buyer_$28_storage_$",
                        "typeString": "mapping(address => struct AniwarTokenSale.Buyer storage ref)"
                      }
                    },
                    "id": 199,
                    "indexExpression": {
                      "id": 198,
                      "name": "buyerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "2671:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2664:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Buyer_$28_storage",
                      "typeString": "struct AniwarTokenSale.Buyer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2642:42:6"
                },
                {
                  "condition": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2698:18:6",
                    "subExpression": {
                      "expression": {
                        "id": 201,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2699:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "2699:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 211,
                  "nodeType": "IfStatement",
                  "src": "2694:73:6",
                  "trueBody": {
                    "id": 210,
                    "nodeType": "Block",
                    "src": "2718:49:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 204,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "2732:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                                "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "2732:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2752:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2732:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "2732:24:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 212,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2776:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAllowedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2776:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 215,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "2803:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                            "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                          }
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalAllowedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "2803:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 217,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "2830:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2803:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2776:60:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:60:6"
                }
              ]
            },
            "functionSelector": "26aa7c58",
            "id": 222,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 192,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 191,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "2622:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2622:9:6"
              }
            ],
            "name": "addBuyer",
            "nameLocation": "2568:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "buyerAddress",
                  "nameLocation": "2585:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "2577:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2607:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "2599:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2599:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2576:38:6"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2632:0:6"
            },
            "scope": 585,
            "src": "2559:284:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "2987:879:6",
              "statements": [
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nameLocation": "3011:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "2997:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                        "typeString": "struct AniwarTokenSale.Buyer"
                      },
                      "typeName": {
                        "id": 235,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 234,
                          "name": "Buyer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28,
                          "src": "2997:5:6"
                        },
                        "referencedDeclaration": 28,
                        "src": "2997:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "initialValue": {
                    "baseExpression": {
                      "id": 237,
                      "name": "buyers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3019:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buyer_$28_storage_$",
                        "typeString": "mapping(address => struct AniwarTokenSale.Buyer storage ref)"
                      }
                    },
                    "id": 240,
                    "indexExpression": {
                      "expression": {
                        "id": 238,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3026:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3026:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3019:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Buyer_$28_storage",
                      "typeString": "struct AniwarTokenSale.Buyer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2997:40:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 243,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "3068:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                              "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalAllowedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "3068:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 245,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "3096:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3068:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c6f77656420616d6f756e7420696e737566666963656e7421",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3121:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc420f34840067d5972be13d16f3954c9c888f6bf79b00ed3576acf77c6ae521",
                          "typeString": "literal_string \"Allowed amount insufficent!\""
                        },
                        "value": "Allowed amount insufficent!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc420f34840067d5972be13d16f3954c9c888f6bf79b00ed3576acf77c6ae521",
                          "typeString": "literal_string \"Allowed amount insufficent!\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3047:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3047:113:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "3047:113:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 251,
                            "name": "initTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "3191:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 252,
                            "name": "totalSold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "3209:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3191:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 254,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "3222:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3191:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206c65667420696e737566666963656e7421",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3247:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32132f99367fe4066d18a34521f1a361d7504b9c060590039c53f946f6c707bf",
                          "typeString": "literal_string \"Amount left insufficent!\""
                        },
                        "value": "Amount left insufficent!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32132f99367fe4066d18a34521f1a361d7504b9c060590039c53f946f6c707bf",
                          "typeString": "literal_string \"Amount left insufficent!\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3170:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3170:113:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3170:113:6"
                },
                {
                  "assignments": [
                    260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "allowedTokenAmount",
                      "nameLocation": "3301:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "3293:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3293:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 264,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 261,
                      "name": "tokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "3322:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 262,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "3336:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3322:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3293:48:6"
                },
                {
                  "assignments": [
                    267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 267,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "3358:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "3351:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1910",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 266,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 265,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1910,
                          "src": "3351:6:6"
                        },
                        "referencedDeclaration": 1910,
                        "src": "3351:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 271,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 269,
                        "name": "_allowedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3373:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 268,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1910,
                      "src": "3366:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1910_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3366:21:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1910",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3351:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 275,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3434:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3434:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 279,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3454:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AniwarTokenSale_$585",
                                    "typeString": "contract AniwarTokenSale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AniwarTokenSale_$585",
                                    "typeString": "contract AniwarTokenSale"
                                  }
                                ],
                                "id": 278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3446:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 277,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3446:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3446:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 273,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "3418:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1910",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1869,
                            "src": "3418:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3418:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 282,
                          "name": "allowedTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "3464:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3418:64:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c6f77616e636520616d6f756e7420696e737566666963656e7421",
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3496:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7fe3ca2c169c568d36e8366e6c990017a3a95f7826305b597453d5367978cf0",
                          "typeString": "literal_string \"Allowance amount insufficent!\""
                        },
                        "value": "Allowance amount insufficent!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7fe3ca2c169c568d36e8366e6c990017a3a95f7826305b597453d5367978cf0",
                          "typeString": "literal_string \"Allowance amount insufficent!\""
                        }
                      ],
                      "id": 272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3397:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3397:140:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "3397:140:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 290,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3566:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3566:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 294,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3586:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AniwarTokenSale_$585",
                              "typeString": "contract AniwarTokenSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AniwarTokenSale_$585",
                              "typeString": "contract AniwarTokenSale"
                            }
                          ],
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3578:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 292,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3578:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3578:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 296,
                        "name": "allowedTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "3593:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 287,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "3547:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1891,
                      "src": "3547:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3547:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "3547:65:6"
                },
                {
                  "expression": {
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 299,
                      "name": "totalSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "3622:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 300,
                        "name": "totalSold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "3634:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 301,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "3646:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3660:7:6",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "3646:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3634:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3622:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "3622:45:6"
                },
                {
                  "expression": {
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 307,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "3677:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "3677:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 310,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "3697:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                            "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "3697:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 312,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "3717:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3731:7:6",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "3717:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3697:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3677:61:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "3677:61:6"
                },
                {
                  "expression": {
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 318,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "3748:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAllowedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3748:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 321,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "3787:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                            "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalAllowedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "3787:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 323,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "3826:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3852:7:6",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "3826:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3787:72:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3748:111:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "3748:111:6"
                }
              ]
            },
            "functionSelector": "68f8fc10",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 229,
                    "name": "_allowedToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 224,
                    "src": "2947:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 228,
                  "name": "tokenAllowed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "2934:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2934:27:6"
              },
              {
                "id": 232,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 231,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1831,
                  "src": "2970:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2970:12:6"
              }
            ],
            "name": "buyToken",
            "nameLocation": "2858:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "_allowedToken",
                  "nameLocation": "2875:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "2867:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2867:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "2898:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "2890:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2890:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2866:44:6"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2987:0:6"
            },
            "scope": 585,
            "src": "2849:1017:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "3937:456:6",
              "statements": [
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nameLocation": "3961:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 393,
                      "src": "3947:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                        "typeString": "struct AniwarTokenSale.Buyer"
                      },
                      "typeName": {
                        "id": 338,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 337,
                          "name": "Buyer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28,
                          "src": "3947:5:6"
                        },
                        "referencedDeclaration": 28,
                        "src": "3947:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "baseExpression": {
                      "id": 340,
                      "name": "buyers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3969:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buyer_$28_storage_$",
                        "typeString": "mapping(address => struct AniwarTokenSale.Buyer storage ref)"
                      }
                    },
                    "id": 343,
                    "indexExpression": {
                      "expression": {
                        "id": 341,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3976:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3976:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3969:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Buyer_$28_storage",
                      "typeString": "struct AniwarTokenSale.Buyer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3947:40:6"
                },
                {
                  "assignments": [
                    346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 346,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "4005:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 393,
                      "src": "3997:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 345,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3997:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4043:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4043:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 347,
                      "name": "calculateWithdrawableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "4015:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4015:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3997:57:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 353,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "4072:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4082:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4072:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420696e737566666963656e7473",
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4085:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0de660265634c25502ed61590e5dccee7bb1cca3607d93128a6e93af49af34ad",
                          "typeString": "literal_string \"Amount insufficents\""
                        },
                        "value": "Amount insufficents"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0de660265634c25502ed61590e5dccee7bb1cca3607d93128a6e93af49af34ad",
                          "typeString": "literal_string \"Amount insufficents\""
                        }
                      ],
                      "id": 352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4064:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4064:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "4064:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 360,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "4125:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                            "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "4125:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5775743f",
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4144:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bf6b10dd771e9dce4f443d3dc0e78968909550a371ac7927a32697521d111d6",
                          "typeString": "literal_string \"Wut?\""
                        },
                        "value": "Wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bf6b10dd771e9dce4f443d3dc0e78968909550a371ac7927a32697521d111d6",
                          "typeString": "literal_string \"Wut?\""
                        }
                      ],
                      "id": 359,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4117:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4117:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "4117:34:6"
                },
                {
                  "assignments": [
                    366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 366,
                      "mutability": "mutable",
                      "name": "beneficiaryPayable",
                      "nameLocation": "4177:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 393,
                      "src": "4161:34:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 365,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4161:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 372,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4206:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4206:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4198:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4198:8:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4198:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4161:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 376,
                        "name": "beneficiaryPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "4247:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 377,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "4267:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 373,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4227:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1941,
                      "src": "4227:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1910_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1910_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4227:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "4227:48:6"
                },
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 380,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "4285:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountHasBeenWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "4285:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 383,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "4316:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                            "typeString": "struct AniwarTokenSale.Buyer storage pointer"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountHasBeenWithdrawn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25,
                        "src": "4316:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 385,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "4347:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4316:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4285:69:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "4285:69:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 390,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "4378:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 389,
                      "name": "Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4369:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4369:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "EmitStatement",
                  "src": "4364:22:6"
                }
              ]
            },
            "functionSelector": "86d1a69f",
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 333,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 332,
                  "name": "onlyIfSaleScheduleStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "3898:25:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3898:25:6"
              },
              {
                "id": 335,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 334,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1831,
                  "src": "3924:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3924:12:6"
              }
            ],
            "name": "release",
            "nameLocation": "3881:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3888:2:6"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3937:0:6"
            },
            "scope": 585,
            "src": "3872:521:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "4517:289:6",
              "statements": [
                {
                  "assignments": [
                    403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "_buyer",
                      "nameLocation": "4540:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "4527:19:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Buyer_$28_memory_ptr",
                        "typeString": "struct AniwarTokenSale.Buyer"
                      },
                      "typeName": {
                        "id": 402,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 401,
                          "name": "Buyer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28,
                          "src": "4527:5:6"
                        },
                        "referencedDeclaration": 28,
                        "src": "4527:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_storage_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 407,
                  "initialValue": {
                    "baseExpression": {
                      "id": 404,
                      "name": "buyers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "4549:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Buyer_$28_storage_$",
                        "typeString": "mapping(address => struct AniwarTokenSale.Buyer storage ref)"
                      }
                    },
                    "id": 406,
                    "indexExpression": {
                      "id": 405,
                      "name": "_buyerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "4556:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4549:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Buyer_$28_storage",
                      "typeString": "struct AniwarTokenSale.Buyer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4527:43:6"
                },
                {
                  "assignments": [
                    409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "currentSplit",
                      "nameLocation": "4588:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "4580:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 408,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4580:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 411,
                          "name": "getCurrentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "4618:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4618:16:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 410,
                      "name": "getSplitByTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "4603:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4603:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4580:55:6"
                },
                {
                  "assignments": [
                    416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "totalWithdrawable",
                      "nameLocation": "4653:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "4645:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 415,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4645:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 424,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 417,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "4674:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Buyer_$28_memory_ptr",
                                "typeString": "struct AniwarTokenSale.Buyer memory"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "4674:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 419,
                            "name": "currentSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 409,
                            "src": "4695:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4674:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 421,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4673:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 422,
                      "name": "splitCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "4723:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4673:60:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4645:88:6"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 425,
                      "name": "totalWithdrawable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "4750:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 426,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "4770:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Buyer_$28_memory_ptr",
                          "typeString": "struct AniwarTokenSale.Buyer memory"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountHasBeenWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "4770:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4750:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 400,
                  "id": 429,
                  "nodeType": "Return",
                  "src": "4743:56:6"
                }
              ]
            },
            "functionSelector": "2db8c331",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateWithdrawableAmount",
            "nameLocation": "4408:27:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "_buyerAddress",
                  "nameLocation": "4444:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "4436:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4436:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4435:23:6"
            },
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "4504:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4504:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4503:9:6"
            },
            "scope": 585,
            "src": "4399:407:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "4877:309:6",
              "statements": [
                {
                  "body": {
                    "id": 479,
                    "nodeType": "Block",
                    "src": "4938:242:6",
                    "statements": [
                      {
                        "assignments": [
                          450
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 450,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "4960:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 479,
                            "src": "4952:15:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 449,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4952:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 463,
                        "initialValue": {
                          "arguments": [
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "id": 459,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5031:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AniwarTokenSale_$585",
                                        "typeString": "contract AniwarTokenSale"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_AniwarTokenSale_$585",
                                        "typeString": "contract AniwarTokenSale"
                                      }
                                    ],
                                    "id": 458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5023:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 457,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5023:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5023:13:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 461,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5022:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 452,
                                    "name": "tokensAllowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49,
                                    "src": "4977:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 454,
                                  "indexExpression": {
                                    "id": 453,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 439,
                                    "src": "4991:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4977:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 451,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1910,
                                "src": "4970:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1910_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4970:24:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1910",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1849,
                            "src": "4970:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4970:81:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4952:99:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 464,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "5069:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5079:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5069:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 478,
                        "nodeType": "IfStatement",
                        "src": "5065:105:6",
                        "trueBody": {
                          "id": 477,
                          "nodeType": "Block",
                          "src": "5082:88:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 473,
                                    "name": "burnAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19,
                                    "src": "5134:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 474,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "5147:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 468,
                                          "name": "tokensAllowed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 49,
                                          "src": "5107:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 470,
                                        "indexExpression": {
                                          "id": 469,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 439,
                                          "src": "5121:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5107:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 467,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1910,
                                      "src": "5100:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1910_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5100:24:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1910",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1859,
                                  "src": "5100:33:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5100:55:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 476,
                              "nodeType": "ExpressionStatement",
                              "src": "5100:55:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 442,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "4907:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 443,
                        "name": "tokensAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4911:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4911:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4907:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 480,
                  "initializationExpression": {
                    "assignments": [
                      439
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 439,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4900:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4892:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4892:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 441,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4904:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4892:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4933:3:6",
                      "subExpression": {
                        "id": 446,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "4933:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 448,
                    "nodeType": "ExpressionStatement",
                    "src": "4933:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "4887:293:6"
                }
              ]
            },
            "functionSelector": "4f601030",
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 434,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 433,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1831,
                  "src": "4854:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4854:12:6"
              },
              {
                "id": 436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 435,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1735,
                  "src": "4867:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4867:9:6"
              }
            ],
            "name": "burnContractBalanceLeft",
            "nameLocation": "4821:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4844:2:6"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4877:0:6"
            },
            "scope": 585,
            "src": "4812:374:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 520,
              "nodeType": "Block",
              "src": "5261:254:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 489,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "5275:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 490,
                        "name": "startedTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "5283:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5275:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "5298:10:6",
                      "subExpression": {
                        "id": 492,
                        "name": "isStarted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "5299:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5275:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 498,
                  "nodeType": "IfStatement",
                  "src": "5271:72:6",
                  "trueBody": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "5310:33:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5331:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 488,
                        "id": 496,
                        "nodeType": "Return",
                        "src": "5324:8:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 499,
                              "name": "_time",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 484,
                              "src": "5357:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 500,
                              "name": "startedTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "5365:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5357:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 502,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5356:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 503,
                        "name": "splitDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "5380:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5356:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 505,
                      "name": "splitCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5397:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5356:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "nodeType": "IfStatement",
                  "src": "5352:99:6",
                  "trueBody": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "5409:42:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 507,
                          "name": "splitCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "5430:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 488,
                        "id": 508,
                        "nodeType": "Return",
                        "src": "5423:17:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5467:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 512,
                              "name": "_time",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 484,
                              "src": "5472:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 513,
                              "name": "startedTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "5480:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5472:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 515,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5471:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 516,
                        "name": "splitDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "5495:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5471:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5467:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 488,
                  "id": 519,
                  "nodeType": "Return",
                  "src": "5460:48:6"
                }
              ]
            },
            "functionSelector": "a0d4dfbd",
            "id": 521,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSplitByTime",
            "nameLocation": "5201:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "5224:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "5216:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5216:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5215:15:6"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "5252:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5252:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5251:9:6"
            },
            "scope": 585,
            "src": "5192:323:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "5573:55:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 530,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5615:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AniwarTokenSale_$585",
                              "typeString": "contract AniwarTokenSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AniwarTokenSale_$585",
                              "typeString": "contract AniwarTokenSale"
                            }
                          ],
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5607:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 528,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5607:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5607:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 526,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "5590:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1910",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1849,
                      "src": "5590:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5590:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 525,
                  "id": 533,
                  "nodeType": "Return",
                  "src": "5583:38:6"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "5530:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5540:2:6"
            },
            "returnParameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "5564:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5564:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5563:9:6"
            },
            "scope": 585,
            "src": "5521:107:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 543,
              "nodeType": "Block",
              "src": "5690:39:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 540,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "5707:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "5707:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 539,
                  "id": 542,
                  "nodeType": "Return",
                  "src": "5700:22:6"
                }
              ]
            },
            "functionSelector": "29cb924d",
            "id": 544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "5643:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5657:2:6"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "5681:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5681:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5680:9:6"
            },
            "scope": 585,
            "src": "5634:95:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "5804:190:6",
              "statements": [
                {
                  "assignments": [
                    556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 556,
                      "mutability": "mutable",
                      "name": "times",
                      "nameLocation": "5841:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 583,
                      "src": "5814:32:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$12_memory_ptr",
                        "typeString": "uint256[12]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5814:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 555,
                        "length": {
                          "id": 553,
                          "name": "splitCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "5822:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "5814:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$12_storage_ptr",
                          "typeString": "uint256[12]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 557,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5814:32:6"
                },
                {
                  "body": {
                    "id": 579,
                    "nodeType": "Block",
                    "src": "5897:69:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 568,
                              "name": "times",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 556,
                              "src": "5911:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$12_memory_ptr",
                                "typeString": "uint256[12] memory"
                              }
                            },
                            "id": 570,
                            "indexExpression": {
                              "id": 569,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "5917:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5911:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 571,
                              "name": "startedTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "5922:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 572,
                                    "name": "splitDuration",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39,
                                    "src": "5937:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 573,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 559,
                                    "src": "5953:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5937:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 575,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5936:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5922:33:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5911:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 578,
                        "nodeType": "ExpressionStatement",
                        "src": "5911:44:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 562,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "5876:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 563,
                      "name": "splitCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5880:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5876:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 580,
                  "initializationExpression": {
                    "assignments": [
                      559
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 559,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5869:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "5861:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 558,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5861:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 561,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5873:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5861:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5892:3:6",
                      "subExpression": {
                        "id": 565,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "5892:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 567,
                    "nodeType": "ExpressionStatement",
                    "src": "5892:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "5856:110:6"
                },
                {
                  "expression": {
                    "id": 581,
                    "name": "times",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 556,
                    "src": "5982:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$12_memory_ptr",
                      "typeString": "uint256[12] memory"
                    }
                  },
                  "functionReturnParameters": 550,
                  "id": 582,
                  "nodeType": "Return",
                  "src": "5975:12:6"
                }
              ]
            },
            "functionSelector": "e9ab77e5",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimes",
            "nameLocation": "5744:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5752:2:6"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "5776:26:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$12_memory_ptr",
                    "typeString": "uint256[12]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 546,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5776:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 548,
                    "length": {
                      "id": 547,
                      "name": "splitCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5784:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5776:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$12_storage_ptr",
                      "typeString": "uint256[12]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5775:28:6"
            },
            "scope": 585,
            "src": "5735:259:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 586,
        "src": "327:5669:6",
        "usedErrors": []
      }
    ],
    "src": "32:5965:6"
  },
  "bytecode": "60a06040523480156200001157600080fd5b5060405162001666380380620016668339810160408190526200003491620001e3565b6200003f33620000df565b600180556001600160a01b0385166200009e5760405162461bcd60e51b815260206004820152601460248201527f546f6b656e20616464726573732077726f6e6721000000000000000000000000604482015260640160405180910390fd5b60068390558151620000b89060089060208501906200012f565b5060075550506001600160a01b039091166080526009805460ff19169055600555620002ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000187579160200282015b828111156200018757825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000150565b506200019592915062000199565b5090565b5b808211156200019557600081556001016200019a565b80516001600160a01b0381168114620001c857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a08688031215620001fc57600080fd5b6200020786620001b0565b602087810151604089015160608a01519398509096509450906001600160401b03808211156200023657600080fd5b818901915089601f8301126200024b57600080fd5b815181811115620002605762000260620001cd565b8060051b604051601f19603f83011681018181108582111715620002885762000288620001cd565b60405291825284820192508381018501918c831115620002a757600080fd5b938501935b82851015620002d057620002c085620001b0565b84529385019392850192620002ac565b809750505050505050608086015190509295509295909350565b6080516113596200030d6000396000818161031f0152610b7201526113596000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806386d1a69f116100c3578063a0d4dfbd1161007c578063a0d4dfbd146102a7578063a7ccc0ed146102ba578063cebc6ad5146102c3578063e9ab77e5146102cc578063eb1e5825146102e1578063f2fde38b146102f457600080fd5b806386d1a69f146102175780638da5cb5b1461021f5780639106d7ba146102305780639752d61b1461023957806397a993aa14610242578063a035b1fe1461029e57600080fd5b80633088f6cc116101155780633088f6cc146101a35780634f601030146101b6578063544736e6146101be57806368f8fc10146101db57806370d5ae05146101ee578063715018a61461020f57600080fd5b806312065fe014610152578063268250561461016d57806326aa7c581461017557806329cb924d1461018a5780632db8c33114610190575b600080fd5b61015a610307565b6040519081526020015b60405180910390f35b61015a600c81565b6101886101833660046110ba565b610397565b005b4261015a565b61015a61019e3660046110e4565b610411565b6101886101b13660046110ff565b6104a1565b610188610524565b6009546101cb9060ff1681565b6040519015158152602001610164565b6101886101e93660046110ba565b6106c4565b6101f761dead81565b6040516001600160a01b039091168152602001610164565b610188610a0d565b610188610a43565b6000546001600160a01b03166101f7565b61015a60045481565b61015a60055481565b61027c6102503660046110e4565b600260208190526000918252604090912080546001820154928201546003909201549092919060ff1684565b6040805194855260208501939093529183015215156060820152608001610164565b61015a60065481565b61015a6102b53660046110ff565b610bea565b61015a60075481565b61015a60035481565b6102d4610c61565b6040516101649190611118565b6101f76102ef3660046110ff565b610cc7565b6101886103023660046110e4565b610cf1565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561036e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610392919061114a565b905090565b6000546001600160a01b031633146103ca5760405162461bcd60e51b81526004016103c190611163565b60405180910390fd5b6001600160a01b0382166000908152600260205260409020600381015460ff166103fe5760038101805460ff191660011790555b805461040b9083906111ae565b90555050565b6001600160a01b0381166000908152600260208181526040808420815160808101835281548152600182015493810193909352928301549082015260039091015460ff16151560608201528161046642610bea565b90506000600c82846020015161047c91906111c6565b61048691906111e5565b90508260400151816104989190611207565b95945050505050565b6000546001600160a01b031633146104cb5760405162461bcd60e51b81526004016103c190611163565b60095460ff16156105125760405162461bcd60e51b815260206004820152601160248201527053616c652068617320537461727465642160781b60448201526064016103c1565b6009805460ff19166001179055600355565b600260015414156105475760405162461bcd60e51b81526004016103c19061121e565b60026001556000546001600160a01b031633146105765760405162461bcd60e51b81526004016103c190611163565b60005b6008548110156106bd5760006008828154811061059857610598611255565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d919061114a565b905080156106aa576008828154811061062857610628611255565b60009182526020909120015460405163a9059cbb60e01b815261dead6004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a8919061126b565b505b50806106b58161128d565b915050610579565b5060018055565b816000805b6008548110156109c557826001600160a01b0316600882815481106106f0576106f0611255565b6000918252602090912001546001600160a01b031614156109b3576002600154141561072e5760405162461bcd60e51b81526004016103c19061121e565b600260018190553360009081526020919091526040902080548511156107965760405162461bcd60e51b815260206004820152601b60248201527f416c6c6f77656420616d6f756e7420696e737566666963656e7421000000000060448201526064016103c1565b846004546007546107a79190611207565b10156107f55760405162461bcd60e51b815260206004820152601860248201527f416d6f756e74206c65667420696e737566666963656e7421000000000000000060448201526064016103c1565b60006006548661080591906111c6565b604051636eb1769f60e11b8152336004820152306024820152909150879082906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa158015610856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087a919061114a565b10156108c85760405162461bcd60e51b815260206004820152601d60248201527f416c6c6f77616e636520616d6f756e7420696e737566666963656e742100000060448201526064016103c1565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af115801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f919061126b565b5061095287670de0b6b3a76400006111c6565b60045461095f91906111ae565b60045561097487670de0b6b3a76400006111c6565b836001015461098391906111ae565b600184015561099a87670de0b6b3a76400006111c6565b83546109a69190611207565b9092555050600180805591505b806109bd8161128d565b9150506106c9565b5080610a075760405162461bcd60e51b81526020600482015260116024820152702737ba1020b63637bbb2b2102a37b5b2b760791b60448201526064016103c1565b50505050565b6000546001600160a01b03163314610a375760405162461bcd60e51b81526004016103c190611163565b610a416000610d8c565b565b60095460ff161515600114610a9a5760405162461bcd60e51b815260206004820152601960248201527f53616c6520686173206e6f74205374617274656420596574210000000000000060448201526064016103c1565b60026001541415610abd5760405162461bcd60e51b81526004016103c19061121e565b60026001819055336000818152602092909252604082209190610adf90610411565b905060008111610b275760405162461bcd60e51b8152602060048201526013602482015272416d6f756e7420696e737566666963656e747360681b60448201526064016103c1565b600382015460ff16610b645760405162461bcd60e51b81526004016103c1906020808252600490820152635775743f60e01b604082015260600190565b33610b996001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168284610ddc565b818360020154610ba991906111ae565b60028401556040518281527ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c5659060200160405180910390a150506001805550565b6000600354821080610bff575060095460ff16155b15610c0c57506000919050565b600c60055460035484610c1f9190611207565b610c2991906111e5565b10610c365750600c919050565b600554600354610c469084611207565b610c5091906111e5565b610c5b9060016111ae565b92915050565b610c6961107f565b610c7161107f565b60005b600c811015610cc15780600554610c8b91906111c6565b600354610c9891906111ae565b8282600c8110610caa57610caa611255565b602002015280610cb98161128d565b915050610c74565b50919050565b60088181548110610cd757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610d1b5760405162461bcd60e51b81526004016103c190611163565b6001600160a01b038116610d805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c1565b610d8981610d8c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610e2e908490610e33565b505050565b6000610e88826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f059092919063ffffffff16565b805190915015610e2e5780806020019051810190610ea6919061126b565b610e2e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103c1565b6060610f148484600085610f1e565b90505b9392505050565b606082471015610f7f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103c1565b843b610fcd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c1565b600080866001600160a01b03168587604051610fe991906112d4565b60006040518083038185875af1925050503d8060008114611026576040519150601f19603f3d011682016040523d82523d6000602084013e61102b565b606091505b509150915061103b828286611046565b979650505050505050565b60608315611055575081610f17565b8251156110655782518084602001fd5b8160405162461bcd60e51b81526004016103c191906112f0565b604051806101800160405280600c906020820280368337509192915050565b80356001600160a01b03811681146110b557600080fd5b919050565b600080604083850312156110cd57600080fd5b6110d68361109e565b946020939093013593505050565b6000602082840312156110f657600080fd5b610f178261109e565b60006020828403121561111157600080fd5b5035919050565b6101808101818360005b600c811015611141578151835260209283019290910190600101611122565b50505092915050565b60006020828403121561115c57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156111c1576111c1611198565b500190565b60008160001904831182151516156111e0576111e0611198565b500290565b60008261120257634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561121957611219611198565b500390565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561127d57600080fd5b81518015158114610f1757600080fd5b60006000198214156112a1576112a1611198565b5060010190565b60005b838110156112c35781810151838201526020016112ab565b83811115610a075750506000910152565b600082516112e68184602087016112a8565b9190910192915050565b602081526000825180602084015261130f8160408501602087016112a8565b601f01601f1916919091016040019291505056fea26469706673582212200e3e4934b26603e7bc3337058cc98f396cb62cf8b0d230af59a319ecbfbe133464736f6c634300080a0033",
  "bytecodeSha1": "db659ff8a8df131e6046d3bf014341eb836eb386",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "AniwarTokenSale",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "54": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {
        "AniwarTokenSale.release": {
          "55": [
            2259,
            2278,
            true
          ]
        }
      },
      "2": {},
      "3": {
        "SafeERC20._callOptionalReturn": {
          "56": [
            3668,
            3689,
            false
          ],
          "57": [
            3752,
            3782,
            true
          ]
        }
      },
      "4": {
        "Address.functionCallWithValue": {
          "51": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "52": [
            7335,
            7342,
            false
          ],
          "53": [
            7476,
            7497,
            false
          ]
        }
      },
      "5": {},
      "6": {
        "AniwarTokenSale.addBuyer": {
          "41": [
            2699,
            2716,
            false
          ]
        },
        "AniwarTokenSale.burnContractBalanceLeft": {
          "42": [
            5069,
            5080,
            false
          ]
        },
        "AniwarTokenSale.buyToken": {
          "43": [
            3068,
            3107,
            true
          ],
          "44": [
            3191,
            3233,
            true
          ],
          "45": [
            3418,
            3482,
            true
          ]
        },
        "AniwarTokenSale.getSplitByTime": {
          "48": [
            5275,
            5294,
            true
          ],
          "49": [
            5299,
            5308,
            false
          ],
          "50": [
            5356,
            5407,
            false
          ]
        },
        "AniwarTokenSale.release": {
          "46": [
            4072,
            4083,
            true
          ],
          "47": [
            4125,
            4142,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "31": [
            2131,
            2148
          ],
          "32": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "1": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "18": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "29": [
            1926,
            1999
          ],
          "30": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "SafeERC20._callOptionalReturn": {
          "34": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "33": [
            746,
            832
          ]
        }
      },
      "4": {
        "Address.functionCall": {
          "35": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "36": [
            4737,
            4818
          ],
          "37": [
            4828,
            4888
          ],
          "38": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "39": [
            7358,
            7375
          ],
          "40": [
            7802,
            7822
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "3": [
            659,
            676
          ]
        }
      },
      "6": {
        "AniwarTokenSale.addBuyer": {
          "4": [
            2732,
            2756
          ],
          "5": [
            2776,
            2836
          ]
        },
        "AniwarTokenSale.burnContractBalanceLeft": {
          "9": [
            5100,
            5155
          ],
          "10": [
            4933,
            4936
          ]
        },
        "AniwarTokenSale.buyToken": {
          "11": [
            3047,
            3160
          ],
          "12": [
            3170,
            3283
          ],
          "13": [
            3397,
            3537
          ],
          "14": [
            3547,
            3612
          ],
          "15": [
            3622,
            3667
          ],
          "16": [
            3677,
            3738
          ],
          "17": [
            3748,
            3859
          ]
        },
        "AniwarTokenSale.calculateWithdrawableAmount": {
          "6": [
            4743,
            4799
          ]
        },
        "AniwarTokenSale.getBalance": {
          "2": [
            5583,
            5621
          ]
        },
        "AniwarTokenSale.getCurrentTime": {
          "0": [
            5700,
            5722
          ]
        },
        "AniwarTokenSale.getSplitByTime": {
          "24": [
            5324,
            5332
          ],
          "25": [
            5460,
            5508
          ]
        },
        "AniwarTokenSale.getTimes": {
          "26": [
            5911,
            5955
          ],
          "27": [
            5892,
            5895
          ],
          "28": [
            5975,
            5987
          ]
        },
        "AniwarTokenSale.release": {
          "19": [
            4064,
            4107
          ],
          "20": [
            4117,
            4151
          ],
          "21": [
            4227,
            4275
          ],
          "22": [
            4285,
            4354
          ],
          "23": [
            4364,
            4386
          ]
        },
        "AniwarTokenSale.startSaleSchedule": {
          "7": [
            2501,
            2517
          ],
          "8": [
            2527,
            2546
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "327:5669:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5521:107;;;:::i;:::-;;;160:25:9;;;148:2;133:18;5521:107:6;;;;;;;;970:39;;1007:2;970:39;;2559:284;;;;;;:::i;:::-;;:::i;:::-;;5634:95;5707:15;5634:95;;4399:407;;;;;;:::i;:::-;;:::i;2375:178::-;;;;;;:::i;:::-;;:::i;4812:374::-;;;:::i;1112:21::-;;;;;;;;;;;;1174:14:9;;1167:22;1149:41;;1137:2;1122:18;1112:21:6;1009:187:9;2849:1017:6;;;;;;:::i;:::-;;:::i;455:88::-;;501:42;455:88;;;;;-1:-1:-1;;;;;1365:32:9;;;1347:51;;1335:2;1320:18;455:88:6;1201:203:9;1605:92:0;;;:::i;3872:521:6:-;;;:::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;880:24:6;;;;;;910:28;;;;;;803:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1634:25:9;;;1690:2;1675:18;;1668:34;;;;1718:18;;;1711:34;1788:14;1781:22;1776:2;1761:18;;1754:50;1621:3;1606:19;803:39:6;1409:401:9;944:20:6;;;;;;5192:323;;;;;;:::i;:::-;;:::i;1015:30::-;;;;;;848:26;;;;;;5735:259;;;:::i;:::-;;;;;;;:::i;1051:30::-;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;5521:107:6:-;5590:31;;-1:-1:-1;;;5590:31:6;;5615:4;5590:31;;;1347:51:9;5564:7:6;;5590:6;-1:-1:-1;;;;;5590:16:6;;;;1320:18:9;;5590:31:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5583:38;;5521:107;:::o;2559:284::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2664:20:6;::::1;2642:19;2664:20:::0;;;:6:::1;:20;::::0;;;;2699:17:::1;::::0;::::1;::::0;::::1;;2694:73;;2732:17;::::0;::::1;:24:::0;;-1:-1:-1;;2732:24:6::1;2752:4;2732:24;::::0;;2694:73:::1;2803:24:::0;;:33:::1;::::0;2830:6;;2803:33:::1;:::i;:::-;2776:60:::0;;-1:-1:-1;;2559:284:6:o;4399:407::-;-1:-1:-1;;;;;4549:21:6;;4504:7;4549:21;;;:6;:21;;;;;;;;4527:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4504:7;4603:32;5707:15;5192:323;:::i;4603:32::-;4580:55;;4645:25;1007:2;4695:12;4674:6;:18;;;:33;;;;:::i;:::-;4673:60;;;;:::i;:::-;4645:88;;4770:6;:29;;;4750:17;:49;;;;:::i;:::-;4743:56;4399:407;-1:-1:-1;;;;;4399:407:6:o;2375:178::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1361:9:6::1;::::0;::::1;;:18;1353:48;;;::::0;-1:-1:-1;;;1353:48:6;;3859:2:9;1353:48:6::1;::::0;::::1;3841:21:9::0;3898:2;3878:18;;;3871:30;-1:-1:-1;;;3917:18:9;;;3910:47;3974:18;;1353:48:6::1;3657:341:9::0;1353:48:6::1;2501:9:::2;:16:::0;;-1:-1:-1;;2501:16:6::2;2513:4;2501:16;::::0;;2527:11:::2;:19:::0;2375:178::o;4812:374::-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0::1;1177:68;;;;-1:-1:-1::0;;;1177:68:0::1;;;;;;;:::i;:::-;4892:9:6::2;4887:293;4911:13;:20:::0;4907:24;::::2;4887:293;;;4952:15;4977:13;4991:1;4977:16;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;4970:81:::2;::::0;-1:-1:-1;;;4970:81:6;;5031:4:::2;4970:81;::::0;::::2;1347:51:9::0;-1:-1:-1;;;;;4977:16:6;;::::2;::::0;4970:34:::2;::::0;1320:18:9;;4970:81:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4952:99:::0;-1:-1:-1;5069:11:6;;5065:105:::2;;5107:13;5121:1;5107:16;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;5100:55:::2;::::0;-1:-1:-1;;;5100:55:6;;501:42:::2;5100:55;::::0;::::2;4669:51:9::0;4736:18;;;4729:34;;;-1:-1:-1;;;;;5107:16:6;;::::2;::::0;5100:33:::2;::::0;4642:18:9;;5100:55:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5065:105;-1:-1:-1::0;4933:3:6;::::2;::::0;::::2;:::i;:::-;;;;4887:293;;;-1:-1:-1::0;1637:1:1;2562:22;;4812:374:6:o;2849:1017::-;2947:13;1480:14;1517:9;1512:182;1536:13;:20;1532:24;;1512:182;;;1601:13;-1:-1:-1;;;;;1581:33:6;:13;1595:1;1581:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1581:16:6;:33;1577:107;;;1680:1:1::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:1::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;;;3026:10:6::2;2997:19;3019:18:::0;;;::::2;::::0;;;;;;;3068:24;;:39;-1:-1:-1;3068:39:6::2;3047:113;;;::::0;-1:-1:-1;;;3047:113:6;;5398:2:9;3047:113:6::2;::::0;::::2;5380:21:9::0;5437:2;5417:18;;;5410:30;5476:29;5456:18;;;5449:57;5523:18;;3047:113:6::2;5196:351:9::0;3047:113:6::2;3222:11;3209:9;;3191:15;;:27;;;;:::i;:::-;:42;;3170:113;;;::::0;-1:-1:-1;;;3170:113:6;;5754:2:9;3170:113:6::2;::::0;::::2;5736:21:9::0;5793:2;5773:18;;;5766:30;5832:26;5812:18;;;5805:54;5876:18;;3170:113:6::2;5552:348:9::0;3170:113:6::2;3293:26;3336:5;;3322:11;:19;;;;:::i;:::-;3418:42;::::0;-1:-1:-1;;;3418:42:6;;3434:10:::2;3418:42;::::0;::::2;6117:34:9::0;3454:4:6::2;6167:18:9::0;;;6160:43;3293:48:6;;-1:-1:-1;3373:13:6;;3293:48;;-1:-1:-1;;;;;3418:15:6;::::2;::::0;::::2;::::0;6052:18:9;;3418:42:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;3397:140;;;::::0;-1:-1:-1;;;3397:140:6;;6416:2:9;3397:140:6::2;::::0;::::2;6398:21:9::0;6455:2;6435:18;;;6428:30;6494:31;6474:18;;;6467:59;6543:18;;3397:140:6::2;6214:353:9::0;3397:140:6::2;3547:65;::::0;-1:-1:-1;;;3547:65:6;;3566:10:::2;3547:65;::::0;::::2;6812:34:9::0;3586:4:6::2;6862:18:9::0;;;6855:43;6914:18;;;6907:34;;;-1:-1:-1;;;;;3547:18:6;::::2;::::0;::::2;::::0;6747::9;;3547:65:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3646:21:6::2;:11:::0;3660:7:::2;3646:21;:::i;:::-;3634:9;;:33;;;;:::i;:::-;3622:9;:45:::0;3717:21:::2;:11:::0;3731:7:::2;3717:21;:::i;:::-;3697:5;:17;;;:41;;;;:::i;:::-;3677:17;::::0;::::2;:61:::0;3826:33:::2;:11:::0;3852:7:::2;3826:33;:::i;:::-;3787:24:::0;;:72:::2;::::0;;::::2;:::i;:::-;3748:111:::0;;;-1:-1:-1;;1637:1:1::1;2562:22:::0;;;1637:1;-1:-1:-1;1577:107:6;1558:3;;;;:::i;:::-;;;;1512:182;;;;1711:9;1703:39;;;;-1:-1:-1;;;1703:39:6;;7154:2:9;1703:39:6;;;7136:21:9;7193:2;7173:18;;;7166:30;-1:-1:-1;;;7212:18:9;;;7205:47;7269:18;;1703:39:6;6952:341:9;1703:39:6;1470:279;2849:1017;;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3872:521:6:-;1232:9;;;;:17;;:9;:17;1224:55;;;;-1:-1:-1;;;1224:55:6;;7500:2:9;1224:55:6;;;7482:21:9;7539:2;7519:18;;;7512:30;7578:27;7558:18;;;7551:55;7623:18;;1224:55:6;7298:349:9;1224:55:6;1680:1:1::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:1::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;;;3976:10:6::2;3947:19;3969:18:::0;;;::::2;::::0;;;;;;;;3947:19;4015:39:::2;::::0;:27:::2;:39::i;:::-;3997:57;;4082:1;4072:7;:11;4064:43;;;::::0;-1:-1:-1;;;4064:43:6;;7854:2:9;4064:43:6::2;::::0;::::2;7836:21:9::0;7893:2;7873:18;;;7866:30;-1:-1:-1;;;7912:18:9;;;7905:49;7971:18;;4064:43:6::2;7652:343:9::0;4064:43:6::2;4125:17;::::0;::::2;::::0;::::2;;4117:34;;;;-1:-1:-1::0;;;4117:34:6::2;;;;;;8202:2:9::0;8184:21;;;8241:1;8221:18;;;8214:29;-1:-1:-1;;;8274:2:9;8259:18;;8252:34;8318:2;8303:18;;8000:327;4117:34:6::2;4206:10;4227:48;-1:-1:-1::0;;;;;4227:6:6::2;:19;4206:10:::0;4267:7;4227:19:::2;:48::i;:::-;4347:7;4316:5;:28;;;:38;;;;:::i;:::-;4285:28;::::0;::::2;:69:::0;4369:17:::2;::::0;160:25:9;;;4369:17:6::2;::::0;148:2:9;133:18;4369:17:6::2;;;;;;;-1:-1:-1::0;;1637:1:1::1;2562:22:::0;;-1:-1:-1;3872:521:6:o;5192:323::-;5252:7;5283:11;;5275:5;:19;:33;;;-1:-1:-1;5299:9:6;;;;5298:10;5275:33;5271:72;;;-1:-1:-1;5331:1:6;;5192:323;-1:-1:-1;5192:323:6:o;5271:72::-;1007:2;5380:13;;5365:11;;5357:5;:19;;;;:::i;:::-;5356:37;;;;:::i;:::-;:51;5352:99;;-1:-1:-1;1007:2:6;;5192:323;-1:-1:-1;5192:323:6:o;5352:99::-;5495:13;;5480:11;;5472:19;;:5;:19;:::i;:::-;5471:37;;;;:::i;:::-;5467:41;;:1;:41;:::i;:::-;5460:48;5192:323;-1:-1:-1;;5192:323:6:o;5735:259::-;5776:26;;:::i;:::-;5814:32;;:::i;:::-;5861:9;5856:110;1007:2;5876:1;:14;5856:110;;;5953:1;5937:13;;:17;;;;:::i;:::-;5922:11;;:33;;;;:::i;:::-;5911:5;5917:1;5911:8;;;;;;;:::i;:::-;;;;:44;5892:3;;;;:::i;:::-;;;;5856:110;;;-1:-1:-1;5982:5:6;5735:259;-1:-1:-1;5735:259:6:o;1051:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1051:30:6;;-1:-1:-1;1051:30:6;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;8534:2:9;1926:73:0::1;::::0;::::1;8516:21:9::0;8573:2;8553:18;;;8546:30;8612:34;8592:18;;;8585:62;-1:-1:-1;;;8663:18:9;;;8656:36;8709:19;;1926:73:0::1;8332:402:9::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2041:169::-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;634:205:3:-;773:58;;;-1:-1:-1;;;;;4687:32:9;;773:58:3;;;4669:51:9;4736:18;;;;4729:34;;;773:58:3;;;;;;;;;;4642:18:9;;;;773:58:3;;;;;;;;-1:-1:-1;;;;;773:58:3;-1:-1:-1;;;773:58:3;;;746:86;;766:5;;746:19;:86::i;:::-;634:205;;;:::o;3140:706::-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:3;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:3;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:3;;8941:2:9;3744:85:3;;;8923:21:9;8980:2;8960:18;;;8953:30;9019:34;8999:18;;;8992:62;-1:-1:-1;;;9070:18:9;;;9063:40;9120:19;;3744:85:3;8739:406:9;3461:223:4;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:4;;9352:2:9;4737:81:4;;;9334:21:9;9391:2;9371:18;;;9364:30;9430:34;9410:18;;;9403:62;-1:-1:-1;;;9481:18:9;;;9474:36;9527:19;;4737:81:4;9150:402:9;4737:81:4;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:4;;9759:2:9;4828:60:4;;;9741:21:9;9798:2;9778:18;;;9771:30;9837:31;9817:18;;;9810:59;9886:18;;4828:60:4;9557:353:9;4828:60:4;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:4;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:4:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:4;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:4;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:173:9:-;264:20;;-1:-1:-1;;;;;313:31:9;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:254::-;442:6;450;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;542:29;561:9;542:29;:::i;:::-;532:39;618:2;603:18;;;;590:32;;-1:-1:-1;;;374:254:9:o;633:186::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;784:29;803:9;784:29;:::i;824:180::-;883:6;936:2;924:9;915:7;911:23;907:32;904:52;;;952:1;949;942:12;904:52;-1:-1:-1;975:23:9;;824:180;-1:-1:-1;824:180:9:o;1815:497::-;1997:3;1982:19;;1986:9;2078:6;1955:4;2112:194;2126:4;2123:1;2120:11;2112:194;;;2185:13;;2173:26;;2222:4;2246:12;;;;2281:15;;;;2146:1;2139:9;2112:194;;;2116:3;;;1815:497;;;;:::o;2317:184::-;2387:6;2440:2;2428:9;2419:7;2415:23;2411:32;2408:52;;;2456:1;2453;2446:12;2408:52;-1:-1:-1;2479:16:9;;2317:184;-1:-1:-1;2317:184:9:o;2506:356::-;2708:2;2690:21;;;2727:18;;;2720:30;2786:34;2781:2;2766:18;;2759:62;2853:2;2838:18;;2506:356::o;2867:127::-;2928:10;2923:3;2919:20;2916:1;2909:31;2959:4;2956:1;2949:15;2983:4;2980:1;2973:15;2999:128;3039:3;3070:1;3066:6;3063:1;3060:13;3057:39;;;3076:18;;:::i;:::-;-1:-1:-1;3112:9:9;;2999:128::o;3132:168::-;3172:7;3238:1;3234;3230:6;3226:14;3223:1;3220:21;3215:1;3208:9;3201:17;3197:45;3194:71;;;3245:18;;:::i;:::-;-1:-1:-1;3285:9:9;;3132:168::o;3305:217::-;3345:1;3371;3361:132;;3415:10;3410:3;3406:20;3403:1;3396:31;3450:4;3447:1;3440:15;3478:4;3475:1;3468:15;3361:132;-1:-1:-1;3507:9:9;;3305:217::o;3527:125::-;3567:4;3595:1;3592;3589:8;3586:34;;;3600:18;;:::i;:::-;-1:-1:-1;3637:9:9;;3527:125::o;4003:355::-;4205:2;4187:21;;;4244:2;4224:18;;;4217:30;4283:33;4278:2;4263:18;;4256:61;4349:2;4334:18;;4003:355::o;4363:127::-;4424:10;4419:3;4415:20;4412:1;4405:31;4455:4;4452:1;4445:15;4479:4;4476:1;4469:15;4774:277;4841:6;4894:2;4882:9;4873:7;4869:23;4865:32;4862:52;;;4910:1;4907;4900:12;4862:52;4942:9;4936:16;4995:5;4988:13;4981:21;4974:5;4971:32;4961:60;;5017:1;5014;5007:12;5056:135;5095:3;-1:-1:-1;;5116:17:9;;5113:43;;;5136:18;;:::i;:::-;-1:-1:-1;5183:1:9;5172:13;;5056:135::o;9915:258::-;9987:1;9997:113;10011:6;10008:1;10005:13;9997:113;;;10087:11;;;10081:18;10068:11;;;10061:39;10033:2;10026:10;9997:113;;;10128:6;10125:1;10122:13;10119:48;;;-1:-1:-1;;10163:1:9;10145:16;;10138:27;9915:258::o;10178:274::-;10307:3;10345:6;10339:13;10361:53;10407:6;10402:3;10395:4;10387:6;10383:17;10361:53;:::i;:::-;10430:16;;;;;10178:274;-1:-1:-1;;10178:274:9:o;10457:383::-;10606:2;10595:9;10588:21;10569:4;10638:6;10632:13;10681:6;10676:2;10665:9;10661:18;10654:34;10697:66;10756:6;10751:2;10740:9;10736:18;10731:2;10723:6;10719:15;10697:66;:::i;:::-;10824:2;10803:15;-1:-1:-1;;10799:29:9;10784:45;;;;10831:2;10780:54;;10457:383;-1:-1:-1;;10457:383:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    327,
    5996
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA0D4DFBD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA0D4DFBD EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA7CCC0ED EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xCEBC6AD5 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xE9AB77E5 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xEB1E5825 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x9106D7BA EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x9752D61B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x97A993AA EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3088F6CC GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x3088F6CC EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x4F601030 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x544736E6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x68F8FC10 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x70D5AE05 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x26825056 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x26AA7C58 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x2DB8C331 EQ PUSH2 0x190 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0xC DUP2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST STOP JUMPDEST TIMESTAMP PUSH2 0x15A JUMP JUMPDEST PUSH2 0x15A PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1CB SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x164 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x164 JUMP JUMPDEST PUSH2 0x188 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x188 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x164 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST PUSH2 0x15A PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x114A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x3FE JUMPI PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST DUP1 SLOAD PUSH2 0x40B SWAP1 DUP4 SWAP1 PUSH2 0x11AE JUMP JUMPDEST SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH2 0x466 TIMESTAMP PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC DUP3 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 ADD MLOAD DUP2 PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x53616C6520686173205374617274656421 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x598 JUMPI PUSH2 0x598 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x114A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x6AA JUMPI PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x628 JUMPI PUSH2 0x628 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xDEAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x684 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0x6B5 DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x579 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x9C5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6F0 JUMPI PUSH2 0x6F0 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 GT ISZERO PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77656420616D6F756E7420696E737566666963656E74210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C1 JUMP JUMPDEST DUP5 PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST LT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206C65667420696E737566666963656E74210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP7 PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x856 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x114A JUMP JUMPDEST LT ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E636520616D6F756E7420696E737566666963656E7421000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x91B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST POP PUSH2 0x952 DUP8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x974 DUP8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11C6 JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x983 SWAP2 SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x99A DUP8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11C6 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST SWAP1 SWAP3 SSTORE POP POP PUSH1 0x1 DUP1 DUP1 SSTORE SWAP2 POP JUMPDEST DUP1 PUSH2 0x9BD DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6C9 JUMP JUMPDEST POP DUP1 PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA1020B63637BBB2B2102A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0xA41 PUSH1 0x0 PUSH2 0xD8C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616C6520686173206E6F742053746172746564205965742100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 SWAP1 PUSH2 0xADF SWAP1 PUSH2 0x411 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x416D6F756E7420696E737566666963656E7473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x5775743F PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST CALLER PUSH2 0xB99 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP5 PUSH2 0xDDC JUMP JUMPDEST DUP2 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xBA9 SWAP2 SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xFB81F9B30D73D830C3544B34D827C08142579EE75710B490BAB0B3995468C565 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 LT DUP1 PUSH2 0xBFF JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xC0C JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST LT PUSH2 0xC36 JUMPI POP PUSH1 0xC SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH2 0xC46 SWAP1 DUP5 PUSH2 0x1207 JUMP JUMPDEST PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0xC5B SWAP1 PUSH1 0x1 PUSH2 0x11AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC69 PUSH2 0x107F JUMP JUMPDEST PUSH2 0xC71 PUSH2 0x107F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xC DUP2 LT ISZERO PUSH2 0xCC1 JUMPI DUP1 PUSH1 0x5 SLOAD PUSH2 0xC8B SWAP2 SWAP1 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x11AE JUMP JUMPDEST DUP3 DUP3 PUSH1 0xC DUP2 LT PUSH2 0xCAA JUMPI PUSH2 0xCAA PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE DUP1 PUSH2 0xCB9 DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC74 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0xD89 DUP2 PUSH2 0xD8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xE2E SWAP1 DUP5 SWAP1 PUSH2 0xE33 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF05 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xE2E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEA6 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF14 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xF1E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C1 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xFE9 SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1026 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x102B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x103B DUP3 DUP3 DUP7 PUSH2 0x1046 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1055 JUMPI POP DUP2 PUSH2 0xF17 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1065 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D6 DUP4 PUSH2 0x109E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF17 DUP3 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0xC DUP2 LT ISZERO PUSH2 0x1141 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1122 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11C1 JUMPI PUSH2 0x11C1 PUSH2 0x1198 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11E0 PUSH2 0x1198 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1202 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1219 JUMPI PUSH2 0x1219 PUSH2 0x1198 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x1198 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12C3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12AB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA07 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x12E6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x130F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE RETURNDATACOPY 0x49 CALLVALUE 0xB2 PUSH7 0x3E7BC3337058C 0xC9 DUP16 CODECOPY PUSH13 0xB62CF8B0D230AF59A319ECBFBE SGT CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D"
    },
    "25": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x86D1A69F"
    },
    "38": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA0D4DFBD"
    },
    "49": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA0D4DFBD"
    },
    "60": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A7"
    },
    "64": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA7CCC0ED"
    },
    "71": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BA"
    },
    "75": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCEBC6AD5"
    },
    "82": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C3"
    },
    "86": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE9AB77E5"
    },
    "93": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CC"
    },
    "97": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEB1E5825"
    },
    "104": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E1"
    },
    "108": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "116": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F4"
    },
    "119": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "120": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "REVERT",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x86D1A69F"
    },
    "131": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x217"
    },
    "135": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21F"
    },
    "146": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9106D7BA"
    },
    "153": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x230"
    },
    "157": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9752D61B"
    },
    "164": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x239"
    },
    "168": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x97A993AA"
    },
    "175": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "176": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x242"
    },
    "179": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "180": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA035B1FE"
    },
    "186": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "187": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29E"
    },
    "190": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "191": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "194": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "REVERT",
      "path": "6"
    },
    "195": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3088F6CC"
    },
    "202": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "GT",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3088F6CC"
    },
    "213": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "214": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A3"
    },
    "217": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "218": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4F601030"
    },
    "224": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "225": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B6"
    },
    "228": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "229": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x544736E6"
    },
    "235": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "236": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE"
    },
    "239": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "240": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "241": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x68F8FC10"
    },
    "246": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "247": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DB"
    },
    "250": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "251": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70D5AE05"
    },
    "257": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "258": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EE"
    },
    "261": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "262": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "263": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "268": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "269": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20F"
    },
    "272": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "273": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "276": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "REVERT",
      "path": "6"
    },
    "277": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "278": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "279": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x12065FE0"
    },
    "284": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "285": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x152"
    },
    "288": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "289": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "290": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x26825056"
    },
    "295": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "296": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16D"
    },
    "299": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "300": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "301": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x26AA7C58"
    },
    "306": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "307": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x175"
    },
    "310": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "311": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "312": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x29CB924D"
    },
    "317": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "318": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18A"
    },
    "321": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "322": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "323": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2DB8C331"
    },
    "328": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "EQ",
      "path": "6"
    },
    "329": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x190"
    },
    "332": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "333": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "334": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "336": {
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "337": {
      "first_revert": true,
      "fn": null,
      "offset": [
        327,
        5996
      ],
      "op": "REVERT",
      "path": "6"
    },
    "338": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "339": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "342": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "345": {
      "fn": "AniwarTokenSale.getBalance",
      "jump": "i",
      "offset": [
        5521,
        5628
      ],
      "op": "JUMP",
      "path": "6"
    },
    "346": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "347": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "349": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "350": {
      "op": "SWAP1"
    },
    "351": {
      "op": "DUP2"
    },
    "352": {
      "op": "MSTORE"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "355": {
      "op": "ADD"
    },
    "356": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "357": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "359": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "360": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "DUP1",
      "path": "6"
    },
    "361": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "362": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "SUB",
      "path": "6"
    },
    "363": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "364": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "RETURN",
      "path": "6"
    },
    "365": {
      "offset": [
        970,
        1009
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "366": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        970,
        1009
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "369": {
      "offset": [
        1007,
        1009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "371": {
      "offset": [
        970,
        1009
      ],
      "op": "DUP2",
      "path": "6"
    },
    "372": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        970,
        1009
      ],
      "op": "JUMP",
      "path": "6"
    },
    "373": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "374": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x188"
    },
    "377": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x183"
    },
    "380": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "381": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "383": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10BA"
    },
    "386": {
      "fn": "AniwarTokenSale.addBuyer",
      "jump": "i",
      "offset": [
        2559,
        2843
      ],
      "op": "JUMP",
      "path": "6"
    },
    "387": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "388": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "391": {
      "fn": "AniwarTokenSale.addBuyer",
      "jump": "i",
      "offset": [
        2559,
        2843
      ],
      "op": "JUMP",
      "path": "6"
    },
    "392": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "393": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "STOP",
      "path": "6"
    },
    "394": {
      "fn": "AniwarTokenSale.getCurrentTime",
      "offset": [
        5634,
        5729
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "395": {
      "fn": "AniwarTokenSale.getCurrentTime",
      "offset": [
        5707,
        5722
      ],
      "op": "TIMESTAMP",
      "path": "6",
      "statement": 0
    },
    "396": {
      "fn": "AniwarTokenSale.getCurrentTime",
      "offset": [
        5634,
        5729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "399": {
      "fn": "AniwarTokenSale.getCurrentTime",
      "offset": [
        5634,
        5729
      ],
      "op": "JUMP",
      "path": "6"
    },
    "400": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "401": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "404": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19E"
    },
    "407": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "408": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "410": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10E4"
    },
    "413": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        4399,
        4806
      ],
      "op": "JUMP",
      "path": "6"
    },
    "414": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "415": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x411"
    },
    "418": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        4399,
        4806
      ],
      "op": "JUMP",
      "path": "6"
    },
    "419": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2375,
        2553
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "420": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2375,
        2553
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x188"
    },
    "423": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2375,
        2553
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B1"
    },
    "426": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2375,
        2553
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "427": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2375,
        2553
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "429": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2375,
        2553
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10FF"
    },
    "432": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "jump": "i",
      "offset": [
        2375,
        2553
      ],
      "op": "JUMP",
      "path": "6"
    },
    "433": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2375,
        2553
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "434": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2375,
        2553
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A1"
    },
    "437": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "jump": "i",
      "offset": [
        2375,
        2553
      ],
      "op": "JUMP",
      "path": "6"
    },
    "438": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4812,
        5186
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "439": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4812,
        5186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x188"
    },
    "442": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4812,
        5186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x524"
    },
    "445": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "jump": "i",
      "offset": [
        4812,
        5186
      ],
      "op": "JUMP",
      "path": "6"
    },
    "446": {
      "offset": [
        1112,
        1133
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "447": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "449": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "450": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CB"
    },
    "453": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "454": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "456": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "AND",
      "path": "6"
    },
    "457": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "DUP2",
      "path": "6"
    },
    "458": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "JUMP",
      "path": "6"
    },
    "459": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "460": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "462": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        1112,
        1133
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "463": {
      "op": "SWAP1"
    },
    "464": {
      "op": "ISZERO"
    },
    "465": {
      "op": "ISZERO"
    },
    "466": {
      "op": "DUP2"
    },
    "467": {
      "op": "MSTORE"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "470": {
      "op": "ADD"
    },
    "471": {
      "offset": [
        1112,
        1133
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164"
    },
    "474": {
      "op": "JUMP"
    },
    "475": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "476": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x188"
    },
    "479": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E9"
    },
    "482": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "483": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "485": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10BA"
    },
    "488": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        2849,
        3866
      ],
      "op": "JUMP",
      "path": "6"
    },
    "489": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "490": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C4"
    },
    "493": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        2849,
        3866
      ],
      "op": "JUMP",
      "path": "6"
    },
    "494": {
      "offset": [
        455,
        543
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "495": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        455,
        543
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F7"
    },
    "498": {
      "offset": [
        501,
        543
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDEAD"
    },
    "501": {
      "offset": [
        455,
        543
      ],
      "op": "DUP2",
      "path": "6"
    },
    "502": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        455,
        543
      ],
      "op": "JUMP",
      "path": "6"
    },
    "503": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        455,
        543
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "504": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        455,
        543
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "506": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        455,
        543
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "op": "SWAP1"
    },
    "516": {
      "op": "SWAP2"
    },
    "517": {
      "op": "AND"
    },
    "518": {
      "op": "DUP2"
    },
    "519": {
      "op": "MSTORE"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "522": {
      "op": "ADD"
    },
    "523": {
      "offset": [
        455,
        543
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164"
    },
    "526": {
      "op": "JUMP"
    },
    "527": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "528": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188"
    },
    "531": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0D"
    },
    "534": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "535": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3872,
        4393
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "536": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3872,
        4393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x188"
    },
    "539": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3872,
        4393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA43"
    },
    "542": {
      "fn": "AniwarTokenSale.release",
      "jump": "i",
      "offset": [
        3872,
        4393
      ],
      "op": "JUMP",
      "path": "6"
    },
    "543": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "544": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "546": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "op": "SUB"
    },
    "555": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "556": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7"
    },
    "559": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "560": {
      "offset": [
        880,
        904
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "561": {
      "fn": "Ownable.owner",
      "offset": [
        880,
        904
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "564": {
      "fn": "Ownable.owner",
      "offset": [
        880,
        904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "566": {
      "fn": "Ownable.owner",
      "offset": [
        880,
        904
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "567": {
      "fn": "Ownable.owner",
      "offset": [
        880,
        904
      ],
      "op": "DUP2",
      "path": "6"
    },
    "568": {
      "fn": "Ownable.owner",
      "offset": [
        880,
        904
      ],
      "op": "JUMP",
      "path": "6"
    },
    "569": {
      "offset": [
        910,
        938
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "570": {
      "fn": "Ownable.owner",
      "offset": [
        910,
        938
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "573": {
      "fn": "Ownable.owner",
      "offset": [
        910,
        938
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "575": {
      "fn": "Ownable.owner",
      "offset": [
        910,
        938
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "576": {
      "fn": "Ownable.owner",
      "offset": [
        910,
        938
      ],
      "op": "DUP2",
      "path": "6"
    },
    "577": {
      "fn": "Ownable.owner",
      "offset": [
        910,
        938
      ],
      "op": "JUMP",
      "path": "6"
    },
    "578": {
      "offset": [
        803,
        842
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "579": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27C"
    },
    "582": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x250"
    },
    "585": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "586": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "588": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10E4"
    },
    "591": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        803,
        842
      ],
      "op": "JUMP",
      "path": "6"
    },
    "592": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "593": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "595": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "597": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "DUP2",
      "path": "6"
    },
    "598": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "599": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "600": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "602": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "603": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "DUP3",
      "path": "6"
    },
    "604": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "605": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "607": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "608": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "609": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "610": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "DUP1",
      "path": "6"
    },
    "611": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "612": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "614": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "DUP3",
      "path": "6"
    },
    "615": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "ADD",
      "path": "6"
    },
    "616": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "617": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "618": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "DUP3",
      "path": "6"
    },
    "619": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "ADD",
      "path": "6"
    },
    "620": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "621": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "623": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "624": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "625": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "ADD",
      "path": "6"
    },
    "626": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "627": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "628": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "629": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "630": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "631": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "633": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "AND",
      "path": "6"
    },
    "634": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "DUP5",
      "path": "6"
    },
    "635": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "JUMP",
      "path": "6"
    },
    "636": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "637": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "639": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "DUP1",
      "path": "6"
    },
    "640": {
      "fn": "Ownable.owner",
      "offset": [
        803,
        842
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "641": {
      "op": "SWAP5"
    },
    "642": {
      "op": "DUP6"
    },
    "643": {
      "op": "MSTORE"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "646": {
      "op": "DUP6"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "op": "SWAP4"
    },
    "649": {
      "op": "SWAP1"
    },
    "650": {
      "op": "SWAP4"
    },
    "651": {
      "op": "MSTORE"
    },
    "652": {
      "op": "SWAP2"
    },
    "653": {
      "op": "DUP4"
    },
    "654": {
      "op": "ADD"
    },
    "655": {
      "op": "MSTORE"
    },
    "656": {
      "op": "ISZERO"
    },
    "657": {
      "op": "ISZERO"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "660": {
      "op": "DUP3"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "op": "MSTORE"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "offset": [
        803,
        842
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164"
    },
    "669": {
      "op": "JUMP"
    },
    "670": {
      "offset": [
        944,
        964
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "671": {
      "fn": "Ownable.owner",
      "offset": [
        944,
        964
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "674": {
      "fn": "Ownable.owner",
      "offset": [
        944,
        964
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "676": {
      "fn": "Ownable.owner",
      "offset": [
        944,
        964
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "677": {
      "fn": "Ownable.owner",
      "offset": [
        944,
        964
      ],
      "op": "DUP2",
      "path": "6"
    },
    "678": {
      "fn": "Ownable.owner",
      "offset": [
        944,
        964
      ],
      "op": "JUMP",
      "path": "6"
    },
    "679": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "680": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "683": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B5"
    },
    "686": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "687": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "689": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10FF"
    },
    "692": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "i",
      "offset": [
        5192,
        5515
      ],
      "op": "JUMP",
      "path": "6"
    },
    "693": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "694": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBEA"
    },
    "697": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "i",
      "offset": [
        5192,
        5515
      ],
      "op": "JUMP",
      "path": "6"
    },
    "698": {
      "offset": [
        1015,
        1045
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "699": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        1015,
        1045
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "702": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        1015,
        1045
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "704": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        1015,
        1045
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "705": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        1015,
        1045
      ],
      "op": "DUP2",
      "path": "6"
    },
    "706": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        1015,
        1045
      ],
      "op": "JUMP",
      "path": "6"
    },
    "707": {
      "offset": [
        848,
        874
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "708": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        848,
        874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "711": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        848,
        874
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "713": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        848,
        874
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "714": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        848,
        874
      ],
      "op": "DUP2",
      "path": "6"
    },
    "715": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        848,
        874
      ],
      "op": "JUMP",
      "path": "6"
    },
    "716": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "717": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D4"
    },
    "720": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "723": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        5735,
        5994
      ],
      "op": "JUMP",
      "path": "6"
    },
    "724": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "725": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "727": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "728": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164"
    },
    "731": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "732": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "733": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1118"
    },
    "736": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        5735,
        5994
      ],
      "op": "JUMP",
      "path": "6"
    },
    "737": {
      "offset": [
        1051,
        1081
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "738": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F7"
    },
    "741": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EF"
    },
    "744": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "745": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "747": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10FF"
    },
    "750": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        1051,
        1081
      ],
      "op": "JUMP",
      "path": "6"
    },
    "751": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "752": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCC7"
    },
    "755": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        1051,
        1081
      ],
      "op": "JUMP",
      "path": "6"
    },
    "756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188"
    },
    "760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x302"
    },
    "763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E4"
    },
    "769": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF1"
    },
    "774": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "775": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "776": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x40"
    },
    "778": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "779": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "784": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "786": {
      "op": "SHL"
    },
    "787": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP2",
      "path": "6"
    },
    "788": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "789": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5615,
        5619
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "790": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "792": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP3",
      "path": "6"
    },
    "793": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "ADD",
      "path": "6"
    },
    "794": {
      "op": "MSTORE"
    },
    "795": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5564,
        5571
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "797": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5564,
        5571
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "798": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5596
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "837": {
      "op": "SHL"
    },
    "838": {
      "op": "SUB"
    },
    "839": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5606
      ],
      "op": "AND",
      "path": "6"
    },
    "840": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5606
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "841": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5606
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "846": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5606
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "849": {
      "op": "ADD"
    },
    "850": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "852": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "854": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "855": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP1",
      "path": "6"
    },
    "856": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP4",
      "path": "6"
    },
    "857": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "SUB",
      "path": "6"
    },
    "858": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP2",
      "path": "6"
    },
    "859": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP7",
      "path": "6"
    },
    "860": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "GAS",
      "path": "6"
    },
    "861": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "862": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "863": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP1",
      "path": "6"
    },
    "864": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "865": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36E"
    },
    "868": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "869": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "870": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "872": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP1",
      "path": "6"
    },
    "873": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "874": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "875": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "877": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "REVERT",
      "path": "6"
    },
    "878": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "879": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "POP",
      "path": "6"
    },
    "880": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "POP",
      "path": "6"
    },
    "881": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "POP",
      "path": "6"
    },
    "882": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "POP",
      "path": "6"
    },
    "883": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "885": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "886": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "887": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "889": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "NOT",
      "path": "6"
    },
    "890": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "892": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP3",
      "path": "6"
    },
    "893": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "ADD",
      "path": "6"
    },
    "894": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "AND",
      "path": "6"
    },
    "895": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP3",
      "path": "6"
    },
    "896": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "ADD",
      "path": "6"
    },
    "897": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP1",
      "path": "6"
    },
    "898": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "900": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "901": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "POP",
      "path": "6"
    },
    "902": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "DUP2",
      "path": "6"
    },
    "903": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "ADD",
      "path": "6"
    },
    "904": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "905": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x392"
    },
    "908": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "909": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "910": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114A"
    },
    "913": {
      "fn": "AniwarTokenSale.getBalance",
      "jump": "i",
      "offset": [
        5590,
        5621
      ],
      "op": "JUMP",
      "path": "6"
    },
    "914": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5590,
        5621
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "915": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5583,
        5621
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "916": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5583,
        5621
      ],
      "op": "POP",
      "path": "6"
    },
    "917": {
      "fn": "AniwarTokenSale.getBalance",
      "offset": [
        5521,
        5628
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "918": {
      "fn": "AniwarTokenSale.getBalance",
      "jump": "o",
      "offset": [
        5521,
        5628
      ],
      "op": "JUMP",
      "path": "6"
    },
    "919": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2559,
        2843
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "920": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "922": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "932": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 3
    },
    "933": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "934": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA"
    },
    "937": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "938": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "940": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "947": {
      "op": "SHL"
    },
    "948": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "949": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "950": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "952": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "953": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C1"
    },
    "956": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "957": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1163"
    },
    "960": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "961": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "962": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "964": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "965": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "966": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "967": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "968": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "969": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "970": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "op": "SUB"
    },
    "979": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "DUP3",
      "path": "6"
    },
    "980": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "AND",
      "path": "6"
    },
    "981": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2642,
        2661
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "983": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "984": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "DUP2",
      "path": "6"
    },
    "985": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "986": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2670
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "988": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "990": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "991": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "993": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "994": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2664,
        2684
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "995": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2699,
        2716
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "997": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2699,
        2716
      ],
      "op": "DUP2",
      "path": "6"
    },
    "998": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2699,
        2716
      ],
      "op": "ADD",
      "path": "6"
    },
    "999": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2699,
        2716
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1000": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2699,
        2716
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1002": {
      "branch": 41,
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2699,
        2716
      ],
      "op": "AND",
      "path": "6"
    },
    "1003": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2694,
        2767
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3FE"
    },
    "1006": {
      "branch": 41,
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2694,
        2767
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1007": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2732,
        2749
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x3"
    },
    "1009": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2732,
        2749
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1010": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2732,
        2749
      ],
      "op": "ADD",
      "path": "6"
    },
    "1011": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2732,
        2756
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1012": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2732,
        2756
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1015": {
      "op": "NOT"
    },
    "1016": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2732,
        2756
      ],
      "op": "AND",
      "path": "6"
    },
    "1017": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2752,
        2756
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1019": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2732,
        2756
      ],
      "op": "OR",
      "path": "6"
    },
    "1020": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2732,
        2756
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1021": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2732,
        2756
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1022": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2694,
        2767
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1023": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2803,
        2827
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 5
    },
    "1024": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2803,
        2827
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1025": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2803,
        2836
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x40B"
    },
    "1028": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2803,
        2836
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1029": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2830,
        2836
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1030": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2830,
        2836
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1031": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2803,
        2836
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11AE"
    },
    "1034": {
      "fn": "AniwarTokenSale.addBuyer",
      "jump": "i",
      "offset": [
        2803,
        2836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1035": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2803,
        2836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1036": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2776,
        2836
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1037": {
      "fn": "AniwarTokenSale.addBuyer",
      "offset": [
        2776,
        2836
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "op": "POP"
    },
    "1040": {
      "fn": "AniwarTokenSale.addBuyer",
      "jump": "o",
      "offset": [
        2559,
        2843
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1041": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "SUB"
    },
    "1050": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1051": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "AND",
      "path": "6"
    },
    "1052": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4504,
        4511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1054": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1055": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1056": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1057": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4555
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1059": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1061": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1062": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1063": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1064": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1066": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1067": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1068": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4549,
        4570
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1069": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1070": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1071": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "1073": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1074": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "ADD",
      "path": "6"
    },
    "1075": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1076": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1077": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1078": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1079": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1080": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1081": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1083": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1084": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "ADD",
      "path": "6"
    },
    "1085": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1086": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1087": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1088": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "ADD",
      "path": "6"
    },
    "1089": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1090": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1091": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1092": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1093": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1094": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1095": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "ADD",
      "path": "6"
    },
    "1096": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1097": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1098": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1099": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "ADD",
      "path": "6"
    },
    "1100": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1101": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1103": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1104": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1105": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "ADD",
      "path": "6"
    },
    "1106": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1107": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1109": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "AND",
      "path": "6"
    },
    "1110": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1111": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1112": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1114": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1115": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "ADD",
      "path": "6"
    },
    "1116": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4527,
        4570
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1117": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4504,
        4511
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1118": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4603,
        4635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x466"
    },
    "1121": {
      "fn": "AniwarTokenSale.getCurrentTime",
      "offset": [
        5707,
        5722
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1122": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBEA"
    },
    "1125": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "i",
      "offset": [
        5192,
        5515
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1126": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4603,
        4635
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1127": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4580,
        4635
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1128": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4580,
        4635
      ],
      "op": "POP",
      "path": "6"
    },
    "1129": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4645,
        4670
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1131": {
      "offset": [
        1007,
        1009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "1133": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4695,
        4707
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1134": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4674,
        4680
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1135": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4674,
        4692
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1137": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4674,
        4692
      ],
      "op": "ADD",
      "path": "6"
    },
    "1138": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4674,
        4692
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1139": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4674,
        4707
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47C"
    },
    "1142": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4674,
        4707
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1143": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4674,
        4707
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1144": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4674,
        4707
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C6"
    },
    "1147": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        4674,
        4707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1148": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4674,
        4707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1149": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4673,
        4733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x486"
    },
    "1152": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4673,
        4733
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1153": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4673,
        4733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1154": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4673,
        4733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11E5"
    },
    "1157": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        4673,
        4733
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1158": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4673,
        4733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1159": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4645,
        4733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1160": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4645,
        4733
      ],
      "op": "POP",
      "path": "6"
    },
    "1161": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4770,
        4776
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 6
    },
    "1162": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4770,
        4799
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1164": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4770,
        4799
      ],
      "op": "ADD",
      "path": "6"
    },
    "1165": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4770,
        4799
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1166": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4750,
        4767
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1167": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4750,
        4799
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x498"
    },
    "1170": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4750,
        4799
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1171": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4750,
        4799
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1172": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4750,
        4799
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1207"
    },
    "1175": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "jump": "i",
      "offset": [
        4750,
        4799
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1176": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4750,
        4799
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1177": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4743,
        4799
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "1178": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "offset": [
        4399,
        4806
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "op": "POP"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "fn": "AniwarTokenSale.calculateWithdrawableAmount",
      "jump": "o",
      "offset": [
        4399,
        4806
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1185": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2375,
        2553
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1186": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1188": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1195": {
      "op": "SHL"
    },
    "1196": {
      "op": "SUB"
    },
    "1197": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1198": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1199": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1200": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CB"
    },
    "1203": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1204": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1206": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1207": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1215": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1218": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1219": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C1"
    },
    "1222": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1223": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1163"
    },
    "1226": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1227": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1228": {
      "offset": [
        1361,
        1370
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "1230": {
      "fn": "Context._msgSender",
      "offset": [
        1361,
        1370
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1231": {
      "fn": "Context._msgSender",
      "offset": [
        1361,
        1370
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1233": {
      "fn": "Context._msgSender",
      "offset": [
        1361,
        1370
      ],
      "op": "AND",
      "path": "6"
    },
    "1234": {
      "offset": [
        1361,
        1379
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1235": {
      "offset": [
        1353,
        1401
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x512"
    },
    "1238": {
      "offset": [
        1353,
        1401
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1239": {
      "fn": "Context._msgSender",
      "offset": [
        1353,
        1401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1241": {
      "fn": "Context._msgSender",
      "offset": [
        1353,
        1401
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1248": {
      "op": "SHL"
    },
    "1249": {
      "offset": [
        1353,
        1401
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1250": {
      "fn": "Context._msgSender",
      "offset": [
        1353,
        1401
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1253": {
      "offset": [
        1353,
        1401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1255": {
      "fn": "Context._msgSender",
      "offset": [
        1353,
        1401
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1256": {
      "fn": "Context._msgSender",
      "offset": [
        1353,
        1401
      ],
      "op": "ADD",
      "path": "6"
    },
    "1257": {
      "op": "MSTORE"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1262": {
      "op": "DUP3"
    },
    "1263": {
      "op": "ADD"
    },
    "1264": {
      "op": "MSTORE"
    },
    "1265": {
      "op": "PUSH17",
      "value": "0x53616C6520686173205374617274656421"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1288": {
      "op": "DUP3"
    },
    "1289": {
      "op": "ADD"
    },
    "1290": {
      "op": "MSTORE"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "offset": [
        1353,
        1401
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C1"
    },
    "1297": {
      "op": "JUMP"
    },
    "1298": {
      "offset": [
        1353,
        1401
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1299": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2501,
        2510
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x9"
    },
    "1301": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2501,
        2517
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1302": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2501,
        2517
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1305": {
      "op": "NOT"
    },
    "1306": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2501,
        2517
      ],
      "op": "AND",
      "path": "6"
    },
    "1307": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2513,
        2517
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1309": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2501,
        2517
      ],
      "op": "OR",
      "path": "6"
    },
    "1310": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2501,
        2517
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1311": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2501,
        2517
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1312": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2527,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x3"
    },
    "1314": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "offset": [
        2527,
        2546
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1315": {
      "fn": "AniwarTokenSale.startSaleSchedule",
      "jump": "o",
      "offset": [
        2375,
        2553
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1316": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4812,
        5186
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1317": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1319": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1321": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1322": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "1"
    },
    "1323": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1324": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x547"
    },
    "1327": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1328": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1330": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1337": {
      "op": "SHL"
    },
    "1338": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1339": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1340": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1342": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "1343": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C1"
    },
    "1346": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1347": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x121E"
    },
    "1350": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1351": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1352": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1354": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1356": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1357": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1359": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "op": "SUB"
    },
    "1368": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1369": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1370": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1371": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x576"
    },
    "1374": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1375": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1377": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1386": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1387": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1389": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1390": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C1"
    },
    "1393": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1394": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1163"
    },
    "1397": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1398": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1399": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4892,
        4901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1401": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4887,
        5180
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1402": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4911,
        4924
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1404": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4911,
        4931
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1405": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4907,
        4931
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1406": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4907,
        4931
      ],
      "op": "LT",
      "path": "6"
    },
    "1407": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4887,
        5180
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1408": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4887,
        5180
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6BD"
    },
    "1411": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4887,
        5180
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1412": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4952,
        4967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1414": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4990
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1416": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4991,
        4992
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1417": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1418": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1419": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1420": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "LT",
      "path": "6"
    },
    "1421": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x598"
    },
    "1424": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1425": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x598"
    },
    "1428": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1255"
    },
    "1431": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "jump": "i",
      "offset": [
        4977,
        4993
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1432": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1433": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1435": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1436": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1437": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1438": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1440": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1441": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1442": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1443": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "ADD",
      "path": "6"
    },
    "1444": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1445": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1447": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1448": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1457": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1458": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5031,
        5035
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1459": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1461": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1462": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "ADD",
      "path": "6"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1470": {
      "op": "SHL"
    },
    "1471": {
      "op": "SUB"
    },
    "1472": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1473": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1474": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "AND",
      "path": "6"
    },
    "1475": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4977,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1476": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5004
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "1481": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5004
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1484": {
      "op": "ADD"
    },
    "1485": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1487": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1489": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1490": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1491": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1492": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "SUB",
      "path": "6"
    },
    "1493": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1494": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1495": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "GAS",
      "path": "6"
    },
    "1496": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1497": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1498": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1499": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1500": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5E9"
    },
    "1503": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1504": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1505": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1507": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1508": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1509": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1510": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1512": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1513": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1514": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "POP",
      "path": "6"
    },
    "1515": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "POP",
      "path": "6"
    },
    "1516": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "POP",
      "path": "6"
    },
    "1517": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "POP",
      "path": "6"
    },
    "1518": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1520": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1521": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1522": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1524": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "NOT",
      "path": "6"
    },
    "1525": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1527": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1528": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "ADD",
      "path": "6"
    },
    "1529": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "AND",
      "path": "6"
    },
    "1530": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1531": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "ADD",
      "path": "6"
    },
    "1532": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1533": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1535": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1536": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "POP",
      "path": "6"
    },
    "1537": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1538": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "ADD",
      "path": "6"
    },
    "1539": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1540": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x60D"
    },
    "1543": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1544": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1545": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114A"
    },
    "1548": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "jump": "i",
      "offset": [
        4970,
        5051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1549": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4970,
        5051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1550": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4952,
        5051
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5069,
        5080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1553": {
      "branch": 42,
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5069,
        5080
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1554": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5065,
        5170
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6AA"
    },
    "1557": {
      "branch": 42,
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5065,
        5170
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1558": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5120
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x8"
    },
    "1560": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5121,
        5122
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1561": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1562": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1563": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1564": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "LT",
      "path": "6"
    },
    "1565": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x628"
    },
    "1568": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1569": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x628"
    },
    "1572": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1255"
    },
    "1575": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "jump": "i",
      "offset": [
        5107,
        5123
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1576": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1577": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1579": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1580": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1581": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1582": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1584": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1585": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1586": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1587": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "ADD",
      "path": "6"
    },
    "1588": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1589": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1591": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1592": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1601": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1602": {
      "offset": [
        501,
        543
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDEAD"
    },
    "1605": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1607": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1608": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "ADD",
      "path": "6"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1612": {
      "op": "DUP2"
    },
    "1613": {
      "op": "ADD"
    },
    "1614": {
      "op": "DUP4"
    },
    "1615": {
      "op": "SWAP1"
    },
    "1616": {
      "op": "MSTORE"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "op": "SUB"
    },
    "1625": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1626": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1627": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "AND",
      "path": "6"
    },
    "1628": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5107,
        5123
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1629": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5133
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "1634": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5133
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1640": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1642": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1643": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1644": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1645": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "SUB",
      "path": "6"
    },
    "1646": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1647": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1649": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1650": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "GAS",
      "path": "6"
    },
    "1651": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "CALL",
      "path": "6"
    },
    "1652": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1653": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1654": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1655": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x684"
    },
    "1658": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1659": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1660": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1662": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1663": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1664": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1665": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1667": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1668": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1669": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "POP",
      "path": "6"
    },
    "1670": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "POP",
      "path": "6"
    },
    "1671": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "POP",
      "path": "6"
    },
    "1672": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "POP",
      "path": "6"
    },
    "1673": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1675": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1676": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1677": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1679": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "NOT",
      "path": "6"
    },
    "1680": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1682": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1683": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "ADD",
      "path": "6"
    },
    "1684": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "AND",
      "path": "6"
    },
    "1685": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1686": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "ADD",
      "path": "6"
    },
    "1687": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1688": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1690": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1691": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "POP",
      "path": "6"
    },
    "1692": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1693": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "ADD",
      "path": "6"
    },
    "1694": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1695": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A8"
    },
    "1698": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1699": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1700": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x126B"
    },
    "1703": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "jump": "i",
      "offset": [
        5100,
        5155
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1704": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1705": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5100,
        5155
      ],
      "op": "POP",
      "path": "6"
    },
    "1706": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        5065,
        5170
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4933,
        4936
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 10
    },
    "1709": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4933,
        4936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6B5"
    },
    "1712": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4933,
        4936
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1713": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4933,
        4936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x128D"
    },
    "1716": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "jump": "i",
      "offset": [
        4933,
        4936
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1717": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4933,
        4936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1718": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4933,
        4936
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1719": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4933,
        4936
      ],
      "op": "POP",
      "path": "6"
    },
    "1720": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4933,
        4936
      ],
      "op": "POP",
      "path": "6"
    },
    "1721": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4887,
        5180
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x579"
    },
    "1724": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4887,
        5180
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1725": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        4887,
        5180
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1726": {
      "op": "POP"
    },
    "1727": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1729": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1730": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1731": {
      "fn": "AniwarTokenSale.burnContractBalanceLeft",
      "jump": "o",
      "offset": [
        4812,
        5186
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1732": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1733": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2947,
        2960
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1734": {
      "offset": [
        1480,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1736": {
      "offset": [
        1517,
        1526
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1737": {
      "offset": [
        1512,
        1694
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1738": {
      "offset": [
        1536,
        1549
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1740": {
      "offset": [
        1536,
        1556
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1741": {
      "offset": [
        1532,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1742": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1532,
        1556
      ],
      "op": "LT",
      "path": "6"
    },
    "1743": {
      "offset": [
        1512,
        1694
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1744": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1512,
        1694
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C5"
    },
    "1747": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1512,
        1694
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1748": {
      "offset": [
        1601,
        1614
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "offset": [
        1581,
        1614
      ],
      "op": "AND",
      "path": "6"
    },
    "1758": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1760": {
      "offset": [
        1595,
        1596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1761": {
      "offset": [
        1581,
        1597
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1762": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1763": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1764": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "LT",
      "path": "6"
    },
    "1765": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F0"
    },
    "1768": {
      "offset": [
        1581,
        1597
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1769": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F0"
    },
    "1772": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1255"
    },
    "1775": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        1581,
        1597
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1776": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1777": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1779": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1780": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1781": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1782": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1784": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1785": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1786": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1787": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "ADD",
      "path": "6"
    },
    "1788": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1581,
        1597
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "op": "SUB"
    },
    "1797": {
      "offset": [
        1581,
        1597
      ],
      "op": "AND",
      "path": "6"
    },
    "1798": {
      "offset": [
        1581,
        1614
      ],
      "op": "EQ",
      "path": "6"
    },
    "1799": {
      "offset": [
        1577,
        1684
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1800": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1577,
        1684
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9B3"
    },
    "1803": {
      "offset": [
        1577,
        1684
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1804": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1806": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1808": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1809": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "1"
    },
    "1810": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1811": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72E"
    },
    "1814": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1815": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1817": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1818": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1824": {
      "op": "SHL"
    },
    "1825": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1826": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1827": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1829": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "1830": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C1"
    },
    "1833": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1834": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x121E"
    },
    "1837": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1838": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1839": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1841": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1843": {
      "offset": [
        2389,
        2407
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1844": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2389,
        2407
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1845": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1846": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3026,
        3036
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1847": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2997,
        3016
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1849": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1850": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1851": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1852": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1854": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1855": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1856": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1857": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1858": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1860": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1861": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3019,
        3037
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1862": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3068,
        3092
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 11
    },
    "1863": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3068,
        3092
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1864": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3068,
        3107
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1865": {
      "op": "GT"
    },
    "1866": {
      "branch": 43,
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3068,
        3107
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1867": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x796"
    },
    "1870": {
      "branch": 43,
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1871": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1873": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1880": {
      "op": "SHL"
    },
    "1881": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1882": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1885": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1887": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1888": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "ADD",
      "path": "6"
    },
    "1889": {
      "op": "MSTORE"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1894": {
      "op": "DUP3"
    },
    "1895": {
      "op": "ADD"
    },
    "1896": {
      "op": "MSTORE"
    },
    "1897": {
      "op": "PUSH32",
      "value": "0x416C6C6F77656420616D6F756E7420696E737566666963656E74210000000000"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1932": {
      "op": "DUP3"
    },
    "1933": {
      "op": "ADD"
    },
    "1934": {
      "op": "MSTORE"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C1"
    },
    "1941": {
      "op": "JUMP"
    },
    "1942": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3047,
        3160
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1943": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3222,
        3233
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 12
    },
    "1944": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3209,
        3218
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1946": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3209,
        3218
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1947": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3191,
        3206
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "1949": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3191,
        3206
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1950": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3191,
        3218
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7A7"
    },
    "1953": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3191,
        3218
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1954": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3191,
        3218
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1955": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3191,
        3218
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1207"
    },
    "1958": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3191,
        3218
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1959": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3191,
        3218
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1960": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3191,
        3233
      ],
      "op": "LT",
      "path": "6"
    },
    "1961": {
      "branch": 44,
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3191,
        3233
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1962": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F5"
    },
    "1965": {
      "branch": 44,
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1966": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1968": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1975": {
      "op": "SHL"
    },
    "1976": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1977": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1980": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1982": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1983": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "ADD",
      "path": "6"
    },
    "1984": {
      "op": "MSTORE"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1989": {
      "op": "DUP3"
    },
    "1990": {
      "op": "ADD"
    },
    "1991": {
      "op": "MSTORE"
    },
    "1992": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206C65667420696E737566666963656E74210000000000000000"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2027": {
      "op": "DUP3"
    },
    "2028": {
      "op": "ADD"
    },
    "2029": {
      "op": "MSTORE"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2032": {
      "op": "ADD"
    },
    "2033": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C1"
    },
    "2036": {
      "op": "JUMP"
    },
    "2037": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3170,
        3283
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2038": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3293,
        3319
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2040": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3336,
        3341
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "2042": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3336,
        3341
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2043": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3322,
        3333
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2044": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3322,
        3341
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x805"
    },
    "2047": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3322,
        3341
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2048": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3322,
        3341
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2049": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3322,
        3341
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C6"
    },
    "2052": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3322,
        3341
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2053": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3322,
        3341
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2054": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x40"
    },
    "2056": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2057": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2066": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2067": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3434,
        3444
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2068": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2070": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2071": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "ADD",
      "path": "6"
    },
    "2072": {
      "op": "MSTORE"
    },
    "2073": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3454,
        3458
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2076": {
      "op": "DUP3"
    },
    "2077": {
      "op": "ADD"
    },
    "2078": {
      "op": "MSTORE"
    },
    "2079": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3293,
        3341
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2080": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3293,
        3341
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2081": {
      "op": "POP"
    },
    "2082": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3373,
        3386
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2083": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3373,
        3386
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2084": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3293,
        3341
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2085": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3293,
        3341
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2092": {
      "op": "SHL"
    },
    "2093": {
      "op": "SUB"
    },
    "2094": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3433
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2095": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3433
      ],
      "op": "AND",
      "path": "6"
    },
    "2096": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3433
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2097": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3433
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "2102": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3433
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2105": {
      "op": "ADD"
    },
    "2106": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2108": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2110": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2111": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2112": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2113": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "SUB",
      "path": "6"
    },
    "2114": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2115": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2116": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "GAS",
      "path": "6"
    },
    "2117": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2118": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2119": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2120": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2121": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x856"
    },
    "2124": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2125": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2126": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2128": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2129": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2130": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2131": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2133": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2134": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2135": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "POP",
      "path": "6"
    },
    "2136": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "POP",
      "path": "6"
    },
    "2137": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "POP",
      "path": "6"
    },
    "2138": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "POP",
      "path": "6"
    },
    "2139": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2141": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2142": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2143": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2145": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "NOT",
      "path": "6"
    },
    "2146": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2148": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2149": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "ADD",
      "path": "6"
    },
    "2150": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "AND",
      "path": "6"
    },
    "2151": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2152": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "ADD",
      "path": "6"
    },
    "2153": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2154": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2156": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2157": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "POP",
      "path": "6"
    },
    "2158": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2159": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "ADD",
      "path": "6"
    },
    "2160": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2161": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87A"
    },
    "2164": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2165": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2166": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114A"
    },
    "2169": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3418,
        3460
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2170": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3460
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2171": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3482
      ],
      "op": "LT",
      "path": "6"
    },
    "2172": {
      "branch": 45,
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3418,
        3482
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2173": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C8"
    },
    "2176": {
      "branch": 45,
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2177": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2179": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2180": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2188": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2191": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2193": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2194": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "ADD",
      "path": "6"
    },
    "2195": {
      "op": "MSTORE"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2200": {
      "op": "DUP3"
    },
    "2201": {
      "op": "ADD"
    },
    "2202": {
      "op": "MSTORE"
    },
    "2203": {
      "op": "PUSH32",
      "value": "0x416C6C6F77616E636520616D6F756E7420696E737566666963656E7421000000"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2238": {
      "op": "DUP3"
    },
    "2239": {
      "op": "ADD"
    },
    "2240": {
      "op": "MSTORE"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2243": {
      "op": "ADD"
    },
    "2244": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C1"
    },
    "2247": {
      "op": "JUMP"
    },
    "2248": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3397,
        3537
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2249": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 14,
      "value": "0x40"
    },
    "2251": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2252": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2259": {
      "op": "SHL"
    },
    "2260": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2261": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2262": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3566,
        3576
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2263": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2265": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2266": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "ADD",
      "path": "6"
    },
    "2267": {
      "op": "MSTORE"
    },
    "2268": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3586,
        3590
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2271": {
      "op": "DUP3"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "op": "MSTORE"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2276": {
      "op": "DUP2"
    },
    "2277": {
      "op": "ADD"
    },
    "2278": {
      "op": "DUP4"
    },
    "2279": {
      "op": "SWAP1"
    },
    "2280": {
      "op": "MSTORE"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2287": {
      "op": "SHL"
    },
    "2288": {
      "op": "SUB"
    },
    "2289": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3565
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2290": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3565
      ],
      "op": "AND",
      "path": "6"
    },
    "2291": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3565
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2292": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3565
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "2297": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3565
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2303": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2305": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2306": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2307": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2308": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "SUB",
      "path": "6"
    },
    "2309": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2310": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2312": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2313": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "GAS",
      "path": "6"
    },
    "2314": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "CALL",
      "path": "6"
    },
    "2315": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2316": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2317": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2318": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91B"
    },
    "2321": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2322": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2323": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2325": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2326": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2327": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2328": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2330": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2331": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2332": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "POP",
      "path": "6"
    },
    "2333": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "POP",
      "path": "6"
    },
    "2334": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "POP",
      "path": "6"
    },
    "2335": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "POP",
      "path": "6"
    },
    "2336": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2338": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2339": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2340": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2342": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "NOT",
      "path": "6"
    },
    "2343": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2345": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2346": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "ADD",
      "path": "6"
    },
    "2347": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "AND",
      "path": "6"
    },
    "2348": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2349": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "ADD",
      "path": "6"
    },
    "2350": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2351": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2353": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2354": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "POP",
      "path": "6"
    },
    "2355": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2356": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "ADD",
      "path": "6"
    },
    "2357": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2358": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93F"
    },
    "2361": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2362": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2363": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x126B"
    },
    "2366": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3547,
        3612
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2367": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3547,
        3612
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2368": {
      "op": "POP"
    },
    "2369": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3646,
        3667
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 15,
      "value": "0x952"
    },
    "2372": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3646,
        3657
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2373": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3660,
        3667
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "2382": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3646,
        3667
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C6"
    },
    "2385": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3646,
        3667
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2386": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3646,
        3667
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2387": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3634,
        3643
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2389": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3634,
        3643
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2390": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3634,
        3667
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x95F"
    },
    "2393": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3634,
        3667
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2394": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3634,
        3667
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2395": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3634,
        3667
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11AE"
    },
    "2398": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3634,
        3667
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2399": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3634,
        3667
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2400": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3622,
        3631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2402": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3622,
        3667
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2403": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3717,
        3738
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 16,
      "value": "0x974"
    },
    "2406": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3717,
        3728
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2407": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3731,
        3738
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "2416": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3717,
        3738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C6"
    },
    "2419": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3717,
        3738
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2420": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3717,
        3738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2421": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3697,
        3702
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2422": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2424": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "6"
    },
    "2425": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2426": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3697,
        3738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x983"
    },
    "2429": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3697,
        3738
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2430": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3697,
        3738
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2431": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3697,
        3738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11AE"
    },
    "2434": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3697,
        3738
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2435": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3697,
        3738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2436": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3677,
        3694
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2438": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3677,
        3694
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2439": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3677,
        3694
      ],
      "op": "ADD",
      "path": "6"
    },
    "2440": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3677,
        3738
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2441": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3826,
        3859
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 17,
      "value": "0x99A"
    },
    "2444": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3826,
        3837
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2445": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3852,
        3859
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "2454": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3826,
        3859
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C6"
    },
    "2457": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3826,
        3859
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2458": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3826,
        3859
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2459": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3787,
        3811
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2460": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3787,
        3811
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2461": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3787,
        3859
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A6"
    },
    "2464": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3787,
        3859
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2465": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3787,
        3859
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2466": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3787,
        3859
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1207"
    },
    "2469": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        3787,
        3859
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2470": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3787,
        3859
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2471": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3748,
        3859
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2472": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3748,
        3859
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2473": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        3748,
        3859
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "op": "POP"
    },
    "2476": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2478": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2479": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2480": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2481": {
      "offset": [
        1637,
        1638
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "offset": [
        1577,
        1684
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2484": {
      "offset": [
        1558,
        1561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2485": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1558,
        1561
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9BD"
    },
    "2488": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1558,
        1561
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2489": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1558,
        1561
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x128D"
    },
    "2492": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "i",
      "offset": [
        1558,
        1561
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2493": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1558,
        1561
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2494": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1558,
        1561
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2495": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1558,
        1561
      ],
      "op": "POP",
      "path": "6"
    },
    "2496": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1558,
        1561
      ],
      "op": "POP",
      "path": "6"
    },
    "2497": {
      "offset": [
        1512,
        1694
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C9"
    },
    "2500": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1512,
        1694
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2501": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1512,
        1694
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2502": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1512,
        1694
      ],
      "op": "POP",
      "path": "6"
    },
    "2503": {
      "offset": [
        1711,
        1720
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2504": {
      "offset": [
        1703,
        1742
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA07"
    },
    "2507": {
      "offset": [
        1703,
        1742
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2508": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1703,
        1742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2510": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1703,
        1742
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2511": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2517": {
      "op": "SHL"
    },
    "2518": {
      "offset": [
        1703,
        1742
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2519": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1703,
        1742
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2522": {
      "offset": [
        1703,
        1742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2524": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1703,
        1742
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2525": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        1703,
        1742
      ],
      "op": "ADD",
      "path": "6"
    },
    "2526": {
      "op": "MSTORE"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH17",
      "value": "0x2737BA1020B63637BBB2B2102A37B5B2B7"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "ADD"
    },
    "2559": {
      "op": "MSTORE"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2562": {
      "op": "ADD"
    },
    "2563": {
      "offset": [
        1703,
        1742
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C1"
    },
    "2566": {
      "op": "JUMP"
    },
    "2567": {
      "offset": [
        1703,
        1742
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2568": {
      "offset": [
        1470,
        1749
      ],
      "op": "POP",
      "path": "6"
    },
    "2569": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "POP",
      "path": "6"
    },
    "2570": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "POP",
      "path": "6"
    },
    "2571": {
      "fn": "AniwarTokenSale.buyToken",
      "offset": [
        2849,
        3866
      ],
      "op": "POP",
      "path": "6"
    },
    "2572": {
      "fn": "AniwarTokenSale.buyToken",
      "jump": "o",
      "offset": [
        2849,
        3866
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2573": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2574": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2576": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2583": {
      "op": "SHL"
    },
    "2584": {
      "op": "SUB"
    },
    "2585": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2586": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2587": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2588": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA37"
    },
    "2591": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2592": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2594": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2601": {
      "op": "SHL"
    },
    "2602": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2603": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2604": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2606": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2607": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C1"
    },
    "2610": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2611": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1163"
    },
    "2614": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2615": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2616": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0xA41"
    },
    "2619": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2621": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8C"
    },
    "2624": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2625": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2626": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2627": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3872,
        4393
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2628": {
      "offset": [
        1232,
        1241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "2630": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        1232,
        1241
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2631": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        1232,
        1241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2633": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        1232,
        1241
      ],
      "op": "AND",
      "path": "6"
    },
    "2634": {
      "offset": [
        1232,
        1249
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2635": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        1232,
        1249
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2636": {
      "offset": [
        1232,
        1241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2638": {
      "offset": [
        1232,
        1249
      ],
      "op": "EQ",
      "path": "6"
    },
    "2639": {
      "offset": [
        1224,
        1279
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9A"
    },
    "2642": {
      "offset": [
        1224,
        1279
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2643": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        1224,
        1279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2645": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        1224,
        1279
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2652": {
      "op": "SHL"
    },
    "2653": {
      "offset": [
        1224,
        1279
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2654": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        1224,
        1279
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2657": {
      "offset": [
        1224,
        1279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2659": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        1224,
        1279
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2660": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        1224,
        1279
      ],
      "op": "ADD",
      "path": "6"
    },
    "2661": {
      "op": "MSTORE"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2666": {
      "op": "DUP3"
    },
    "2667": {
      "op": "ADD"
    },
    "2668": {
      "op": "MSTORE"
    },
    "2669": {
      "op": "PUSH32",
      "value": "0x53616C6520686173206E6F742053746172746564205965742100000000000000"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2704": {
      "op": "DUP3"
    },
    "2705": {
      "op": "ADD"
    },
    "2706": {
      "op": "MSTORE"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2709": {
      "op": "ADD"
    },
    "2710": {
      "offset": [
        1224,
        1279
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C1"
    },
    "2713": {
      "op": "JUMP"
    },
    "2714": {
      "offset": [
        1224,
        1279
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2715": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2717": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2719": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2720": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "1"
    },
    "2721": {
      "branch": 55,
      "fn": "AniwarTokenSale.release",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2722": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABD"
    },
    "2725": {
      "branch": 55,
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2726": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2728": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2735": {
      "op": "SHL"
    },
    "2736": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2737": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2738": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2740": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "2741": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C1"
    },
    "2744": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2745": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x121E"
    },
    "2748": {
      "fn": "AniwarTokenSale.release",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2749": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2750": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2752": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2754": {
      "offset": [
        2389,
        2407
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2755": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2389,
        2407
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2756": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2757": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3976,
        3986
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2758": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3947,
        3966
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2760": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2761": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2762": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2763": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2765": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2766": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2767": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2768": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2769": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2771": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2772": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2773": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3969,
        3987
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2774": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3947,
        3966
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2775": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4015,
        4054
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xADF"
    },
    "2778": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4015,
        4054
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2779": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4015,
        4042
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x411"
    },
    "2782": {
      "fn": "AniwarTokenSale.release",
      "jump": "i",
      "offset": [
        4015,
        4054
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2783": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4015,
        4054
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2784": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3997,
        4054
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2785": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        3997,
        4054
      ],
      "op": "POP",
      "path": "6"
    },
    "2786": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4082,
        4083
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 19,
      "value": "0x0"
    },
    "2788": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4072,
        4079
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2789": {
      "branch": 46,
      "fn": "AniwarTokenSale.release",
      "offset": [
        4072,
        4083
      ],
      "op": "GT",
      "path": "6"
    },
    "2790": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB27"
    },
    "2793": {
      "branch": 46,
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2794": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2796": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2797": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2803": {
      "op": "SHL"
    },
    "2804": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2805": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2808": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2810": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2811": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "ADD",
      "path": "6"
    },
    "2812": {
      "op": "MSTORE"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2817": {
      "op": "DUP3"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "op": "MSTORE"
    },
    "2820": {
      "op": "PUSH19",
      "value": "0x416D6F756E7420696E737566666963656E7473"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2842": {
      "op": "SHL"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2845": {
      "op": "DUP3"
    },
    "2846": {
      "op": "ADD"
    },
    "2847": {
      "op": "MSTORE"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2850": {
      "op": "ADD"
    },
    "2851": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C1"
    },
    "2854": {
      "op": "JUMP"
    },
    "2855": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4064,
        4107
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2856": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4125,
        4142
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 20,
      "value": "0x3"
    },
    "2858": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4125,
        4142
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2859": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4125,
        4142
      ],
      "op": "ADD",
      "path": "6"
    },
    "2860": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4125,
        4142
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2861": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4125,
        4142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2863": {
      "branch": 47,
      "fn": "AniwarTokenSale.release",
      "offset": [
        4125,
        4142
      ],
      "op": "AND",
      "path": "6"
    },
    "2864": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB64"
    },
    "2867": {
      "branch": 47,
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2868": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2870": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2879": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2880": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2882": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "ADD",
      "path": "6"
    },
    "2883": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C1"
    },
    "2886": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2889": {
      "op": "DUP1"
    },
    "2890": {
      "op": "DUP3"
    },
    "2891": {
      "op": "MSTORE"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2894": {
      "op": "SWAP1"
    },
    "2895": {
      "op": "DUP3"
    },
    "2896": {
      "op": "ADD"
    },
    "2897": {
      "op": "MSTORE"
    },
    "2898": {
      "op": "PUSH4",
      "value": "0x5775743F"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2905": {
      "op": "SHL"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2908": {
      "op": "DUP3"
    },
    "2909": {
      "op": "ADD"
    },
    "2910": {
      "op": "MSTORE"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2913": {
      "op": "ADD"
    },
    "2914": {
      "op": "SWAP1"
    },
    "2915": {
      "op": "JUMP"
    },
    "2916": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4117,
        4151
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2917": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4206,
        4216
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2918": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4227,
        4275
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 21,
      "value": "0xB99"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2927": {
      "op": "SHL"
    },
    "2928": {
      "op": "SUB"
    },
    "2929": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4227,
        4233
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "2962": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4227,
        4246
      ],
      "op": "AND",
      "path": "6"
    },
    "2963": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4206,
        4216
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2964": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4267,
        4274
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2965": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4227,
        4246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDDC"
    },
    "2968": {
      "fn": "AniwarTokenSale.release",
      "jump": "i",
      "offset": [
        4227,
        4275
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2969": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4227,
        4275
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2970": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4347,
        4354
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 22
    },
    "2971": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4316,
        4321
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2972": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4316,
        4344
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2974": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4316,
        4344
      ],
      "op": "ADD",
      "path": "6"
    },
    "2975": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4316,
        4344
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2976": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4316,
        4354
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA9"
    },
    "2979": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4316,
        4354
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2980": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4316,
        4354
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2981": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4316,
        4354
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11AE"
    },
    "2984": {
      "fn": "AniwarTokenSale.release",
      "jump": "i",
      "offset": [
        4316,
        4354
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2985": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4316,
        4354
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2986": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4285,
        4313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2988": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4285,
        4313
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2989": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4285,
        4313
      ],
      "op": "ADD",
      "path": "6"
    },
    "2990": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4285,
        4354
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2991": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 23,
      "value": "0x40"
    },
    "2993": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2994": {
      "op": "DUP3"
    },
    "2995": {
      "op": "DUP2"
    },
    "2996": {
      "op": "MSTORE"
    },
    "2997": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xFB81F9B30D73D830C3544B34D827C08142579EE75710B490BAB0B3995468C565"
    },
    "3030": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3033": {
      "op": "ADD"
    },
    "3034": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3036": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3037": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3038": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3039": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "SUB",
      "path": "6"
    },
    "3040": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3041": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        4369,
        4386
      ],
      "op": "LOG1",
      "path": "6"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "op": "POP"
    },
    "3044": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3046": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3047": {
      "fn": "AniwarTokenSale.release",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3048": {
      "op": "POP"
    },
    "3049": {
      "fn": "AniwarTokenSale.release",
      "jump": "o",
      "offset": [
        3872,
        4393
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3050": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3051": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5252,
        5259
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3053": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5283,
        5294
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3055": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5283,
        5294
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3056": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5275,
        5280
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3057": {
      "branch": 48,
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5275,
        5294
      ],
      "op": "LT",
      "path": "6"
    },
    "3058": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5275,
        5308
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3059": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5275,
        5308
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBFF"
    },
    "3062": {
      "branch": 48,
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5275,
        5308
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3063": {
      "op": "POP"
    },
    "3064": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5299,
        5308
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "3066": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5299,
        5308
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3067": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5299,
        5308
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3069": {
      "branch": 49,
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5299,
        5308
      ],
      "op": "AND",
      "path": "6"
    },
    "3070": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5298,
        5308
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3071": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5275,
        5308
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3072": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5271,
        5343
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3073": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5271,
        5343
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC0C"
    },
    "3076": {
      "branch": 49,
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5271,
        5343
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3077": {
      "op": "POP"
    },
    "3078": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5331,
        5332
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 24,
      "value": "0x0"
    },
    "3080": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5331,
        5332
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3081": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3082": {
      "op": "POP"
    },
    "3083": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "o",
      "offset": [
        5192,
        5515
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3084": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5271,
        5343
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3085": {
      "offset": [
        1007,
        1009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "3087": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5380,
        5393
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "3089": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5380,
        5393
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3090": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5365,
        5376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3092": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5365,
        5376
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3093": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5357,
        5362
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3094": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5357,
        5376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC1F"
    },
    "3097": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5357,
        5376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3098": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5357,
        5376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3099": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5357,
        5376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1207"
    },
    "3102": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "i",
      "offset": [
        5357,
        5376
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3103": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5357,
        5376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3104": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC29"
    },
    "3107": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5356,
        5393
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3108": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5356,
        5393
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3109": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11E5"
    },
    "3112": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "i",
      "offset": [
        5356,
        5393
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3113": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5356,
        5393
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3114": {
      "branch": 50,
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5356,
        5407
      ],
      "op": "LT",
      "path": "6"
    },
    "3115": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5352,
        5451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC36"
    },
    "3118": {
      "branch": 50,
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5352,
        5451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3119": {
      "op": "POP"
    },
    "3120": {
      "offset": [
        1007,
        1009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "3122": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        1007,
        1009
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3123": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3124": {
      "op": "POP"
    },
    "3125": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "o",
      "offset": [
        5192,
        5515
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3126": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5352,
        5451
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3127": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5495,
        5508
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 25,
      "value": "0x5"
    },
    "3129": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5495,
        5508
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3130": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5480,
        5491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3132": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5480,
        5491
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3133": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5472,
        5491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC46"
    },
    "3136": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5472,
        5491
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3137": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5472,
        5477
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3138": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5472,
        5491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1207"
    },
    "3141": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "i",
      "offset": [
        5472,
        5491
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3142": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5472,
        5491
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3143": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5471,
        5508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC50"
    },
    "3146": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5471,
        5508
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3147": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5471,
        5508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3148": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5471,
        5508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11E5"
    },
    "3151": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "i",
      "offset": [
        5471,
        5508
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3152": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5471,
        5508
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3153": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5467,
        5508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC5B"
    },
    "3156": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5467,
        5508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3157": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5467,
        5468
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3159": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5467,
        5508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11AE"
    },
    "3162": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "i",
      "offset": [
        5467,
        5508
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3163": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5467,
        5508
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3164": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5460,
        5508
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3165": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "offset": [
        5192,
        5515
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3166": {
      "op": "POP"
    },
    "3167": {
      "op": "POP"
    },
    "3168": {
      "fn": "AniwarTokenSale.getSplitByTime",
      "jump": "o",
      "offset": [
        5192,
        5515
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3169": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3170": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5776,
        5802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC69"
    },
    "3173": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5776,
        5802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x107F"
    },
    "3176": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        5776,
        5802
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3177": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5776,
        5802
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3178": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5814,
        5846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC71"
    },
    "3181": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5814,
        5846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x107F"
    },
    "3184": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        5814,
        5846
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3185": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5814,
        5846
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3186": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5861,
        5870
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3188": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5856,
        5966
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3189": {
      "offset": [
        1007,
        1009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "3191": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5876,
        5877
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3192": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5876,
        5890
      ],
      "op": "LT",
      "path": "6"
    },
    "3193": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5856,
        5966
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3194": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5856,
        5966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCC1"
    },
    "3197": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5856,
        5966
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3198": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5953,
        5954
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 26
    },
    "3199": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5937,
        5950
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "3201": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5937,
        5950
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3202": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5937,
        5954
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC8B"
    },
    "3205": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5937,
        5954
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3206": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5937,
        5954
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3207": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5937,
        5954
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C6"
    },
    "3210": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        5937,
        5954
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3211": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5937,
        5954
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3212": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5922,
        5933
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3214": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5922,
        5933
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3215": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5922,
        5955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC98"
    },
    "3218": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5922,
        5955
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3219": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5922,
        5955
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3220": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5922,
        5955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11AE"
    },
    "3223": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        5922,
        5955
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3224": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5922,
        5955
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3225": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5916
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3226": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5917,
        5918
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3227": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "3229": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3230": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "LT",
      "path": "6"
    },
    "3231": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCAA"
    },
    "3234": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3235": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCAA"
    },
    "3238": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1255"
    },
    "3241": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        5911,
        5919
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3242": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3243": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3245": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "MUL",
      "path": "6"
    },
    "3246": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5919
      ],
      "op": "ADD",
      "path": "6"
    },
    "3247": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5911,
        5955
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3248": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5892,
        5895
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 27
    },
    "3249": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5892,
        5895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB9"
    },
    "3252": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5892,
        5895
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3253": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5892,
        5895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x128D"
    },
    "3256": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "i",
      "offset": [
        5892,
        5895
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3257": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5892,
        5895
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3258": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5892,
        5895
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3259": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5892,
        5895
      ],
      "op": "POP",
      "path": "6"
    },
    "3260": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5892,
        5895
      ],
      "op": "POP",
      "path": "6"
    },
    "3261": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5856,
        5966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC74"
    },
    "3264": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5856,
        5966
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3265": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5856,
        5966
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3266": {
      "op": "POP"
    },
    "3267": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5982,
        5987
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 28
    },
    "3268": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        5735,
        5994
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3269": {
      "op": "POP"
    },
    "3270": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "o",
      "offset": [
        5735,
        5994
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3271": {
      "offset": [
        1051,
        1081
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3272": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3274": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3275": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3276": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3277": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3278": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "LT",
      "path": "6"
    },
    "3279": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCD7"
    },
    "3282": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3283": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3285": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3286": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3287": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3288": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3290": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3291": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3292": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3293": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3295": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3296": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3297": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3298": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "ADD",
      "path": "6"
    },
    "3299": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "offset": [
        1051,
        1081
      ],
      "op": "AND",
      "path": "6"
    },
    "3309": {
      "fn": "AniwarTokenSale.getTimes",
      "offset": [
        1051,
        1081
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3310": {
      "op": "POP"
    },
    "3311": {
      "offset": [
        1051,
        1081
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3312": {
      "fn": "AniwarTokenSale.getTimes",
      "jump": "o",
      "offset": [
        1051,
        1081
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3313": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3314": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3316": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3323": {
      "op": "SHL"
    },
    "3324": {
      "op": "SUB"
    },
    "3325": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3326": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3327": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3328": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1B"
    },
    "3331": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3332": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3334": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3341": {
      "op": "SHL"
    },
    "3342": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3343": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3344": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3346": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3347": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C1"
    },
    "3350": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3351": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1163"
    },
    "3354": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3355": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3362": {
      "op": "SHL"
    },
    "3363": {
      "op": "SUB"
    },
    "3364": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 29
    },
    "3365": {
      "branch": 54,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "3366": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD80"
    },
    "3369": {
      "branch": 54,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3370": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3372": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3381": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "3388": {
      "op": "MSTORE"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3393": {
      "op": "DUP3"
    },
    "3394": {
      "op": "ADD"
    },
    "3395": {
      "op": "MSTORE"
    },
    "3396": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3431": {
      "op": "DUP3"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "op": "MSTORE"
    },
    "3434": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3443": {
      "op": "SHL"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3446": {
      "op": "DUP3"
    },
    "3447": {
      "op": "ADD"
    },
    "3448": {
      "op": "MSTORE"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C1"
    },
    "3455": {
      "op": "JUMP"
    },
    "3456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xD89"
    },
    "3460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8C"
    },
    "3464": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3465": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3466": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "3467": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3468": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3469": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3471": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3472": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3479": {
      "op": "SHL"
    },
    "3480": {
      "op": "SUB"
    },
    "3481": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 31
    },
    "3482": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3483": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3490": {
      "op": "SHL"
    },
    "3491": {
      "op": "SUB"
    },
    "3492": {
      "op": "NOT"
    },
    "3493": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3494": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3495": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3496": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "3497": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3498": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3499": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x40"
    },
    "3501": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3502": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3503": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3504": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3505": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "3506": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3507": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3508": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3509": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3542": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3543": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3544": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3545": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3546": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3547": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3548": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3549": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 33,
      "value": "0x40"
    },
    "3551": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3552": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3559": {
      "op": "SHL"
    },
    "3560": {
      "op": "SUB"
    },
    "3561": {
      "op": "DUP5"
    },
    "3562": {
      "op": "AND"
    },
    "3563": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3565": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3566": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "3"
    },
    "3567": {
      "op": "MSTORE"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3570": {
      "op": "DUP1"
    },
    "3571": {
      "op": "DUP3"
    },
    "3572": {
      "op": "ADD"
    },
    "3573": {
      "op": "DUP5"
    },
    "3574": {
      "op": "SWAP1"
    },
    "3575": {
      "op": "MSTORE"
    },
    "3576": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3577": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3578": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3579": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3580": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "3"
    },
    "3581": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3582": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3583": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "3"
    },
    "3584": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3585": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3588": {
      "op": "SWAP1"
    },
    "3589": {
      "op": "SWAP2"
    },
    "3590": {
      "op": "ADD"
    },
    "3591": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3592": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3593": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3594": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3596": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3597": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "3"
    },
    "3598": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3599": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3606": {
      "op": "SHL"
    },
    "3607": {
      "op": "SUB"
    },
    "3608": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "3"
    },
    "3609": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3616": {
      "op": "SHL"
    },
    "3617": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "3"
    },
    "3618": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3619": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3620": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2E"
    },
    "3623": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3624": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3625": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3626": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE33"
    },
    "3629": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3630": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3631": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "3"
    },
    "3632": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "3"
    },
    "3633": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "POP",
      "path": "3"
    },
    "3634": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        839
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3635": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3636": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3638": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE88"
    },
    "3641": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3642": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3644": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3645": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3646": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3648": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "3"
    },
    "3649": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3651": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3652": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3653": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3655": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3656": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3657": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3659": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "3"
    },
    "3660": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3693": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3694": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3695": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "3"
    },
    "3696": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3703": {
      "op": "SHL"
    },
    "3704": {
      "op": "SUB"
    },
    "3705": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "3"
    },
    "3706": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF05"
    },
    "3709": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3710": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3711": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3712": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3713": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3718": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "3"
    },
    "3719": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3720": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3721": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3722": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3723": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3724": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3725": {
      "op": "POP"
    },
    "3726": {
      "branch": 56,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3727": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2E"
    },
    "3730": {
      "branch": 56,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3731": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 34
    },
    "3732": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3733": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3735": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "3"
    },
    "3736": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3737": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3738": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3739": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "3"
    },
    "3740": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3741": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA6"
    },
    "3744": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3745": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3746": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x126B"
    },
    "3749": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3750": {
      "branch": 57,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3751": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2E"
    },
    "3754": {
      "branch": 57,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3755": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3757": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3758": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3764": {
      "op": "SHL"
    },
    "3765": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3766": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3769": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3771": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3772": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "3"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3778": {
      "op": "DUP3"
    },
    "3779": {
      "op": "ADD"
    },
    "3780": {
      "op": "MSTORE"
    },
    "3781": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3816": {
      "op": "DUP3"
    },
    "3817": {
      "op": "ADD"
    },
    "3818": {
      "op": "MSTORE"
    },
    "3819": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3832": {
      "op": "SHL"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3835": {
      "op": "DUP3"
    },
    "3836": {
      "op": "ADD"
    },
    "3837": {
      "op": "MSTORE"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "3844": {
      "op": "JUMP"
    },
    "3845": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3846": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3848": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 35,
      "value": "0xF14"
    },
    "3851": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3852": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3853": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3855": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3856": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF1E"
    },
    "3859": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3860": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3861": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3862": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "4"
    },
    "3863": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3864": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3865": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3866": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "4"
    },
    "3867": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "4"
    },
    "3868": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "4"
    },
    "3869": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3870": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3871": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 36
    },
    "3874": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "3875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "4"
    },
    "3876": {
      "branch": 51,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3877": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF7F"
    },
    "3880": {
      "branch": 51,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3897": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "4"
    },
    "3899": {
      "op": "MSTORE"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3904": {
      "op": "DUP3"
    },
    "3905": {
      "op": "ADD"
    },
    "3906": {
      "op": "MSTORE"
    },
    "3907": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3942": {
      "op": "DUP3"
    },
    "3943": {
      "op": "ADD"
    },
    "3944": {
      "op": "MSTORE"
    },
    "3945": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3954": {
      "op": "SHL"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3957": {
      "op": "DUP3"
    },
    "3958": {
      "op": "ADD"
    },
    "3959": {
      "op": "MSTORE"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C1"
    },
    "3966": {
      "op": "JUMP"
    },
    "3967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3968": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3969": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "3970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 37,
      "value": "0xFCD"
    },
    "3973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3983": {
      "op": "SHL"
    },
    "3984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "4"
    },
    "3992": {
      "op": "MSTORE"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3997": {
      "op": "DUP3"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "MSTORE"
    },
    "4000": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4035": {
      "op": "DUP3"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "op": "MSTORE"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4040": {
      "op": "ADD"
    },
    "4041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C1"
    },
    "4044": {
      "op": "JUMP"
    },
    "4045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4049": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4056": {
      "op": "SHL"
    },
    "4057": {
      "op": "SUB"
    },
    "4058": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "4"
    },
    "4059": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4060": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "4"
    },
    "4061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4064": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFE9"
    },
    "4067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12D4"
    },
    "4072": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4074": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4078": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4079": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4080": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4081": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "4"
    },
    "4082": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4083": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4084": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "4"
    },
    "4085": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "4"
    },
    "4086": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "4"
    },
    "4087": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4088": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4089": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4090": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4091": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4092": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4095": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4096": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "4"
    },
    "4097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1026"
    },
    "4100": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4101": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4105": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4108": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "4"
    },
    "4109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3F"
    },
    "4111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4112": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "4"
    },
    "4114": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4116": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4119": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4128": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "4"
    },
    "4129": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "4130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x102B"
    },
    "4133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4135": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4137": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4140": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4142": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "4"
    },
    "4145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 38,
      "value": "0x103B"
    },
    "4148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4150": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1046"
    },
    "4154": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "4157": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "4158": {
      "op": "POP"
    },
    "4159": {
      "op": "POP"
    },
    "4160": {
      "op": "POP"
    },
    "4161": {
      "op": "POP"
    },
    "4162": {
      "op": "POP"
    },
    "4163": {
      "op": "POP"
    },
    "4164": {
      "op": "POP"
    },
    "4165": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4166": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4167": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4169": {
      "branch": 52,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4170": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4171": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1055"
    },
    "4174": {
      "branch": 52,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4175": {
      "op": "POP"
    },
    "4176": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 39
    },
    "4177": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF17"
    },
    "4180": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4181": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4182": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4183": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4184": {
      "branch": 53,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4185": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1065"
    },
    "4188": {
      "branch": 53,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4189": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4190": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4191": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4192": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4193": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4195": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "4"
    },
    "4196": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4197": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4198": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 40
    },
    "4199": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4201": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4202": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4208": {
      "op": "SHL"
    },
    "4209": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4210": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4211": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4213": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "4"
    },
    "4214": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C1"
    },
    "4217": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4218": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4219": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12F0"
    },
    "4222": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4223": {
      "op": "JUMPDEST"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4226": {
      "op": "MLOAD"
    },
    "4227": {
      "op": "DUP1"
    },
    "4228": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4234": {
      "op": "MSTORE"
    },
    "4235": {
      "op": "DUP1"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "4238": {
      "op": "SWAP1"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4241": {
      "op": "DUP3"
    },
    "4242": {
      "op": "MUL"
    },
    "4243": {
      "op": "DUP1"
    },
    "4244": {
      "op": "CALLDATASIZE"
    },
    "4245": {
      "op": "DUP4"
    },
    "4246": {
      "op": "CALLDATACOPY"
    },
    "4247": {
      "op": "POP"
    },
    "4248": {
      "op": "SWAP2"
    },
    "4249": {
      "op": "SWAP3"
    },
    "4250": {
      "op": "SWAP2"
    },
    "4251": {
      "op": "POP"
    },
    "4252": {
      "op": "POP"
    },
    "4253": {
      "jump": "o",
      "op": "JUMP"
    },
    "4254": {
      "op": "JUMPDEST"
    },
    "4255": {
      "op": "DUP1"
    },
    "4256": {
      "op": "CALLDATALOAD"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4263": {
      "op": "SHL"
    },
    "4264": {
      "op": "SUB"
    },
    "4265": {
      "op": "DUP2"
    },
    "4266": {
      "op": "AND"
    },
    "4267": {
      "op": "DUP2"
    },
    "4268": {
      "op": "EQ"
    },
    "4269": {
      "op": "PUSH2",
      "value": "0x10B5"
    },
    "4272": {
      "op": "JUMPI"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4275": {
      "op": "DUP1"
    },
    "4276": {
      "op": "REVERT"
    },
    "4277": {
      "op": "JUMPDEST"
    },
    "4278": {
      "op": "SWAP2"
    },
    "4279": {
      "op": "SWAP1"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "jump": "o",
      "op": "JUMP"
    },
    "4282": {
      "op": "JUMPDEST"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4285": {
      "op": "DUP1"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4288": {
      "op": "DUP4"
    },
    "4289": {
      "op": "DUP6"
    },
    "4290": {
      "op": "SUB"
    },
    "4291": {
      "op": "SLT"
    },
    "4292": {
      "op": "ISZERO"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x10CD"
    },
    "4296": {
      "op": "JUMPI"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4299": {
      "op": "DUP1"
    },
    "4300": {
      "op": "REVERT"
    },
    "4301": {
      "op": "JUMPDEST"
    },
    "4302": {
      "op": "PUSH2",
      "value": "0x10D6"
    },
    "4305": {
      "op": "DUP4"
    },
    "4306": {
      "op": "PUSH2",
      "value": "0x109E"
    },
    "4309": {
      "jump": "i",
      "op": "JUMP"
    },
    "4310": {
      "op": "JUMPDEST"
    },
    "4311": {
      "op": "SWAP5"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4314": {
      "op": "SWAP4"
    },
    "4315": {
      "op": "SWAP1"
    },
    "4316": {
      "op": "SWAP4"
    },
    "4317": {
      "op": "ADD"
    },
    "4318": {
      "op": "CALLDATALOAD"
    },
    "4319": {
      "op": "SWAP4"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "op": "POP"
    },
    "4323": {
      "jump": "o",
      "op": "JUMP"
    },
    "4324": {
      "op": "JUMPDEST"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4329": {
      "op": "DUP3"
    },
    "4330": {
      "op": "DUP5"
    },
    "4331": {
      "op": "SUB"
    },
    "4332": {
      "op": "SLT"
    },
    "4333": {
      "op": "ISZERO"
    },
    "4334": {
      "op": "PUSH2",
      "value": "0x10F6"
    },
    "4337": {
      "op": "JUMPI"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4340": {
      "op": "DUP1"
    },
    "4341": {
      "op": "REVERT"
    },
    "4342": {
      "op": "JUMPDEST"
    },
    "4343": {
      "op": "PUSH2",
      "value": "0xF17"
    },
    "4346": {
      "op": "DUP3"
    },
    "4347": {
      "op": "PUSH2",
      "value": "0x109E"
    },
    "4350": {
      "jump": "i",
      "op": "JUMP"
    },
    "4351": {
      "op": "JUMPDEST"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4356": {
      "op": "DUP3"
    },
    "4357": {
      "op": "DUP5"
    },
    "4358": {
      "op": "SUB"
    },
    "4359": {
      "op": "SLT"
    },
    "4360": {
      "op": "ISZERO"
    },
    "4361": {
      "op": "PUSH2",
      "value": "0x1111"
    },
    "4364": {
      "op": "JUMPI"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4367": {
      "op": "DUP1"
    },
    "4368": {
      "op": "REVERT"
    },
    "4369": {
      "op": "JUMPDEST"
    },
    "4370": {
      "op": "POP"
    },
    "4371": {
      "op": "CALLDATALOAD"
    },
    "4372": {
      "op": "SWAP2"
    },
    "4373": {
      "op": "SWAP1"
    },
    "4374": {
      "op": "POP"
    },
    "4375": {
      "jump": "o",
      "op": "JUMP"
    },
    "4376": {
      "op": "JUMPDEST"
    },
    "4377": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "4380": {
      "op": "DUP2"
    },
    "4381": {
      "op": "ADD"
    },
    "4382": {
      "op": "DUP2"
    },
    "4383": {
      "op": "DUP4"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4386": {
      "op": "JUMPDEST"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "4389": {
      "op": "DUP2"
    },
    "4390": {
      "op": "LT"
    },
    "4391": {
      "op": "ISZERO"
    },
    "4392": {
      "op": "PUSH2",
      "value": "0x1141"
    },
    "4395": {
      "op": "JUMPI"
    },
    "4396": {
      "op": "DUP2"
    },
    "4397": {
      "op": "MLOAD"
    },
    "4398": {
      "op": "DUP4"
    },
    "4399": {
      "op": "MSTORE"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4402": {
      "op": "SWAP3"
    },
    "4403": {
      "op": "DUP4"
    },
    "4404": {
      "op": "ADD"
    },
    "4405": {
      "op": "SWAP3"
    },
    "4406": {
      "op": "SWAP1"
    },
    "4407": {
      "op": "SWAP2"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "SWAP1"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4412": {
      "op": "ADD"
    },
    "4413": {
      "op": "PUSH2",
      "value": "0x1122"
    },
    "4416": {
      "op": "JUMP"
    },
    "4417": {
      "op": "JUMPDEST"
    },
    "4418": {
      "op": "POP"
    },
    "4419": {
      "op": "POP"
    },
    "4420": {
      "op": "POP"
    },
    "4421": {
      "op": "SWAP3"
    },
    "4422": {
      "op": "SWAP2"
    },
    "4423": {
      "op": "POP"
    },
    "4424": {
      "op": "POP"
    },
    "4425": {
      "jump": "o",
      "op": "JUMP"
    },
    "4426": {
      "op": "JUMPDEST"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4431": {
      "op": "DUP3"
    },
    "4432": {
      "op": "DUP5"
    },
    "4433": {
      "op": "SUB"
    },
    "4434": {
      "op": "SLT"
    },
    "4435": {
      "op": "ISZERO"
    },
    "4436": {
      "op": "PUSH2",
      "value": "0x115C"
    },
    "4439": {
      "op": "JUMPI"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4442": {
      "op": "DUP1"
    },
    "4443": {
      "op": "REVERT"
    },
    "4444": {
      "op": "JUMPDEST"
    },
    "4445": {
      "op": "POP"
    },
    "4446": {
      "op": "MLOAD"
    },
    "4447": {
      "op": "SWAP2"
    },
    "4448": {
      "op": "SWAP1"
    },
    "4449": {
      "op": "POP"
    },
    "4450": {
      "jump": "o",
      "op": "JUMP"
    },
    "4451": {
      "op": "JUMPDEST"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4454": {
      "op": "DUP1"
    },
    "4455": {
      "op": "DUP3"
    },
    "4456": {
      "op": "MSTORE"
    },
    "4457": {
      "op": "DUP2"
    },
    "4458": {
      "op": "DUP2"
    },
    "4459": {
      "op": "ADD"
    },
    "4460": {
      "op": "MSTORE"
    },
    "4461": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4496": {
      "op": "DUP3"
    },
    "4497": {
      "op": "ADD"
    },
    "4498": {
      "op": "MSTORE"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4501": {
      "op": "ADD"
    },
    "4502": {
      "op": "SWAP1"
    },
    "4503": {
      "jump": "o",
      "op": "JUMP"
    },
    "4504": {
      "op": "JUMPDEST"
    },
    "4505": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4512": {
      "op": "SHL"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4515": {
      "op": "MSTORE"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4520": {
      "op": "MSTORE"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4525": {
      "op": "REVERT"
    },
    "4526": {
      "op": "JUMPDEST"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4529": {
      "op": "DUP3"
    },
    "4530": {
      "op": "NOT"
    },
    "4531": {
      "op": "DUP3"
    },
    "4532": {
      "op": "GT"
    },
    "4533": {
      "op": "ISZERO"
    },
    "4534": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4537": {
      "op": "JUMPI"
    },
    "4538": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4541": {
      "op": "PUSH2",
      "value": "0x1198"
    },
    "4544": {
      "jump": "i",
      "op": "JUMP"
    },
    "4545": {
      "op": "JUMPDEST"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "op": "ADD"
    },
    "4548": {
      "op": "SWAP1"
    },
    "4549": {
      "jump": "o",
      "op": "JUMP"
    },
    "4550": {
      "op": "JUMPDEST"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4553": {
      "op": "DUP2"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4556": {
      "op": "NOT"
    },
    "4557": {
      "op": "DIV"
    },
    "4558": {
      "op": "DUP4"
    },
    "4559": {
      "op": "GT"
    },
    "4560": {
      "op": "DUP3"
    },
    "4561": {
      "op": "ISZERO"
    },
    "4562": {
      "op": "ISZERO"
    },
    "4563": {
      "op": "AND"
    },
    "4564": {
      "op": "ISZERO"
    },
    "4565": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4568": {
      "op": "JUMPI"
    },
    "4569": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4572": {
      "op": "PUSH2",
      "value": "0x1198"
    },
    "4575": {
      "jump": "i",
      "op": "JUMP"
    },
    "4576": {
      "op": "JUMPDEST"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "MUL"
    },
    "4579": {
      "op": "SWAP1"
    },
    "4580": {
      "jump": "o",
      "op": "JUMP"
    },
    "4581": {
      "op": "JUMPDEST"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4584": {
      "op": "DUP3"
    },
    "4585": {
      "op": "PUSH2",
      "value": "0x1202"
    },
    "4588": {
      "op": "JUMPI"
    },
    "4589": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4596": {
      "op": "SHL"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4599": {
      "op": "MSTORE"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4604": {
      "op": "MSTORE"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4609": {
      "op": "REVERT"
    },
    "4610": {
      "op": "JUMPDEST"
    },
    "4611": {
      "op": "POP"
    },
    "4612": {
      "op": "DIV"
    },
    "4613": {
      "op": "SWAP1"
    },
    "4614": {
      "jump": "o",
      "op": "JUMP"
    },
    "4615": {
      "op": "JUMPDEST"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4618": {
      "op": "DUP3"
    },
    "4619": {
      "op": "DUP3"
    },
    "4620": {
      "op": "LT"
    },
    "4621": {
      "op": "ISZERO"
    },
    "4622": {
      "op": "PUSH2",
      "value": "0x1219"
    },
    "4625": {
      "op": "JUMPI"
    },
    "4626": {
      "op": "PUSH2",
      "value": "0x1219"
    },
    "4629": {
      "op": "PUSH2",
      "value": "0x1198"
    },
    "4632": {
      "jump": "i",
      "op": "JUMP"
    },
    "4633": {
      "op": "JUMPDEST"
    },
    "4634": {
      "op": "POP"
    },
    "4635": {
      "op": "SUB"
    },
    "4636": {
      "op": "SWAP1"
    },
    "4637": {
      "jump": "o",
      "op": "JUMP"
    },
    "4638": {
      "op": "JUMPDEST"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4641": {
      "op": "DUP1"
    },
    "4642": {
      "op": "DUP3"
    },
    "4643": {
      "op": "MSTORE"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4646": {
      "op": "SWAP1"
    },
    "4647": {
      "op": "DUP3"
    },
    "4648": {
      "op": "ADD"
    },
    "4649": {
      "op": "MSTORE"
    },
    "4650": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4685": {
      "op": "DUP3"
    },
    "4686": {
      "op": "ADD"
    },
    "4687": {
      "op": "MSTORE"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4690": {
      "op": "ADD"
    },
    "4691": {
      "op": "SWAP1"
    },
    "4692": {
      "jump": "o",
      "op": "JUMP"
    },
    "4693": {
      "op": "JUMPDEST"
    },
    "4694": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4701": {
      "op": "SHL"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4704": {
      "op": "MSTORE"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4709": {
      "op": "MSTORE"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4714": {
      "op": "REVERT"
    },
    "4715": {
      "op": "JUMPDEST"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4720": {
      "op": "DUP3"
    },
    "4721": {
      "op": "DUP5"
    },
    "4722": {
      "op": "SUB"
    },
    "4723": {
      "op": "SLT"
    },
    "4724": {
      "op": "ISZERO"
    },
    "4725": {
      "op": "PUSH2",
      "value": "0x127D"
    },
    "4728": {
      "op": "JUMPI"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4731": {
      "op": "DUP1"
    },
    "4732": {
      "op": "REVERT"
    },
    "4733": {
      "op": "JUMPDEST"
    },
    "4734": {
      "op": "DUP2"
    },
    "4735": {
      "op": "MLOAD"
    },
    "4736": {
      "op": "DUP1"
    },
    "4737": {
      "op": "ISZERO"
    },
    "4738": {
      "op": "ISZERO"
    },
    "4739": {
      "op": "DUP2"
    },
    "4740": {
      "op": "EQ"
    },
    "4741": {
      "op": "PUSH2",
      "value": "0xF17"
    },
    "4744": {
      "op": "JUMPI"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4747": {
      "op": "DUP1"
    },
    "4748": {
      "op": "REVERT"
    },
    "4749": {
      "op": "JUMPDEST"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4754": {
      "op": "NOT"
    },
    "4755": {
      "op": "DUP3"
    },
    "4756": {
      "op": "EQ"
    },
    "4757": {
      "op": "ISZERO"
    },
    "4758": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4761": {
      "op": "JUMPI"
    },
    "4762": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4765": {
      "op": "PUSH2",
      "value": "0x1198"
    },
    "4768": {
      "jump": "i",
      "op": "JUMP"
    },
    "4769": {
      "op": "JUMPDEST"
    },
    "4770": {
      "op": "POP"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4773": {
      "op": "ADD"
    },
    "4774": {
      "op": "SWAP1"
    },
    "4775": {
      "jump": "o",
      "op": "JUMP"
    },
    "4776": {
      "op": "JUMPDEST"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4779": {
      "op": "JUMPDEST"
    },
    "4780": {
      "op": "DUP4"
    },
    "4781": {
      "op": "DUP2"
    },
    "4782": {
      "op": "LT"
    },
    "4783": {
      "op": "ISZERO"
    },
    "4784": {
      "op": "PUSH2",
      "value": "0x12C3"
    },
    "4787": {
      "op": "JUMPI"
    },
    "4788": {
      "op": "DUP2"
    },
    "4789": {
      "op": "DUP2"
    },
    "4790": {
      "op": "ADD"
    },
    "4791": {
      "op": "MLOAD"
    },
    "4792": {
      "op": "DUP4"
    },
    "4793": {
      "op": "DUP3"
    },
    "4794": {
      "op": "ADD"
    },
    "4795": {
      "op": "MSTORE"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4798": {
      "op": "ADD"
    },
    "4799": {
      "op": "PUSH2",
      "value": "0x12AB"
    },
    "4802": {
      "op": "JUMP"
    },
    "4803": {
      "op": "JUMPDEST"
    },
    "4804": {
      "op": "DUP4"
    },
    "4805": {
      "op": "DUP2"
    },
    "4806": {
      "op": "GT"
    },
    "4807": {
      "op": "ISZERO"
    },
    "4808": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "4811": {
      "op": "JUMPI"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "op": "POP"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4816": {
      "op": "SWAP2"
    },
    "4817": {
      "op": "ADD"
    },
    "4818": {
      "op": "MSTORE"
    },
    "4819": {
      "jump": "o",
      "op": "JUMP"
    },
    "4820": {
      "op": "JUMPDEST"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4823": {
      "op": "DUP3"
    },
    "4824": {
      "op": "MLOAD"
    },
    "4825": {
      "op": "PUSH2",
      "value": "0x12E6"
    },
    "4828": {
      "op": "DUP2"
    },
    "4829": {
      "op": "DUP5"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4832": {
      "op": "DUP8"
    },
    "4833": {
      "op": "ADD"
    },
    "4834": {
      "op": "PUSH2",
      "value": "0x12A8"
    },
    "4837": {
      "jump": "i",
      "op": "JUMP"
    },
    "4838": {
      "op": "JUMPDEST"
    },
    "4839": {
      "op": "SWAP2"
    },
    "4840": {
      "op": "SWAP1"
    },
    "4841": {
      "op": "SWAP2"
    },
    "4842": {
      "op": "ADD"
    },
    "4843": {
      "op": "SWAP3"
    },
    "4844": {
      "op": "SWAP2"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "jump": "o",
      "op": "JUMP"
    },
    "4848": {
      "op": "JUMPDEST"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4851": {
      "op": "DUP2"
    },
    "4852": {
      "op": "MSTORE"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4855": {
      "op": "DUP3"
    },
    "4856": {
      "op": "MLOAD"
    },
    "4857": {
      "op": "DUP1"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4860": {
      "op": "DUP5"
    },
    "4861": {
      "op": "ADD"
    },
    "4862": {
      "op": "MSTORE"
    },
    "4863": {
      "op": "PUSH2",
      "value": "0x130F"
    },
    "4866": {
      "op": "DUP2"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4869": {
      "op": "DUP6"
    },
    "4870": {
      "op": "ADD"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4873": {
      "op": "DUP8"
    },
    "4874": {
      "op": "ADD"
    },
    "4875": {
      "op": "PUSH2",
      "value": "0x12A8"
    },
    "4878": {
      "jump": "i",
      "op": "JUMP"
    },
    "4879": {
      "op": "JUMPDEST"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4882": {
      "op": "ADD"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4885": {
      "op": "NOT"
    },
    "4886": {
      "op": "AND"
    },
    "4887": {
      "op": "SWAP2"
    },
    "4888": {
      "op": "SWAP1"
    },
    "4889": {
      "op": "SWAP2"
    },
    "4890": {
      "op": "ADD"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "SWAP3"
    },
    "4895": {
      "op": "SWAP2"
    },
    "4896": {
      "op": "POP"
    },
    "4897": {
      "op": "POP"
    },
    "4898": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "af8be4d4bda7dd40bb8bc3450cfe0801a09f6af4",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/*\n * @title TokenVesting\n */\ncontract AniwarTokenSale is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    IERC20 private immutable _token;\n    address public constant burnAddress =\n        0x000000000000000000000000000000000000dEaD;\n\n    struct Buyer {\n        uint256 totalAllowedAmount;\n        uint256 totalAmount;\n        // total amount of tokens has been withdrawn at the current time\n        uint256 amountHasBeenWithdrawn;\n        // Initiliazed\n        bool initialized;\n    }\n\n    mapping(address => Buyer) public buyers;\n    uint256 public startedTime;\n    uint256 public totalSold;\n    uint256 public splitDuration;\n    uint256 public price;\n    uint256 public constant splitCount = 12;\n    uint256 public initTokenAmount;\n    address[] public tokensAllowed;\n    // started when true\n    bool public isStarted;\n\n    event Released(uint256 amount);\n\n    modifier onlyIfSaleScheduleStarted() {\n        require(isStarted == true, \"Sale has not Started Yet!\");\n        _;\n    }\n\n    modifier onlyIfSaleScheduleNotStarted() {\n        require(isStarted == false, \"Sale has Started!\");\n        _;\n    }\n\n    modifier tokenAllowed(address tokenAddress_) {\n        bool isAllowed = false;\n        for (uint256 i = 0; i < tokensAllowed.length; i++) {\n            if (tokensAllowed[i] == tokenAddress_) {\n                _;\n                isAllowed = true;\n            }\n        }\n        require(isAllowed, \"Not Allowed Token\");\n    }\n\n    /*\n     * @dev Creates a vesting contract.\n     * @param token_ address of the ERC20 token contract\n     * @param splitDuration_ time for end split\n     */\n\n    constructor(\n        address token_,\n        uint256 splitDuration_,\n        uint256 price_,\n        address[] memory tokensAllowed_,\n        uint256 _initTokenAmount\n    ) {\n        require(token_ != address(0x0), \"Token address wrong!\");\n        price = price_;\n        tokensAllowed = tokensAllowed_;\n        initTokenAmount = _initTokenAmount;\n        _token = IERC20(token_);\n        isStarted = false;\n        splitDuration = splitDuration_;\n    }\n\n    function startSaleSchedule(uint256 _time)\n        public\n        onlyOwner\n        onlyIfSaleScheduleNotStarted\n    {\n        isStarted = true;\n        startedTime = _time;\n    }\n\n    function addBuyer(address buyerAddress, uint256 amount) public onlyOwner {\n        Buyer storage buyer = buyers[buyerAddress];\n        if (!buyer.initialized) {\n            buyer.initialized = true;\n        }\n        buyer.totalAllowedAmount = buyer.totalAllowedAmount + amount;\n    }\n\n    function buyToken(address _allowedToken, uint256 tokenAmount)\n        public\n        tokenAllowed(_allowedToken)\n        nonReentrant\n    {\n        Buyer storage buyer = buyers[msg.sender];\n        require(\n            buyer.totalAllowedAmount >= tokenAmount,\n            \"Allowed amount insufficent!\"\n        );\n        require(\n            initTokenAmount - totalSold >= tokenAmount,\n            \"Amount left insufficent!\"\n        );\n        uint256 allowedTokenAmount = tokenAmount * price;\n        IERC20 token = IERC20(_allowedToken);\n        require(\n            token.allowance(msg.sender, address(this)) >= allowedTokenAmount,\n            \"Allowance amount insufficent!\"\n        );\n        token.transferFrom(msg.sender, address(this), allowedTokenAmount);\n        totalSold = totalSold + tokenAmount * 1 ether;\n        buyer.totalAmount = buyer.totalAmount + tokenAmount * 1 ether;\n        buyer.totalAllowedAmount =\n            buyer.totalAllowedAmount -\n            tokenAmount *\n            1 ether;\n    }\n\n    function release() public onlyIfSaleScheduleStarted nonReentrant {\n        Buyer storage buyer = buyers[msg.sender];\n        uint256 _amount = calculateWithdrawableAmount(msg.sender);\n        require(_amount > 0, \"Amount insufficents\");\n        require(buyer.initialized, \"Wut?\");\n        address payable beneficiaryPayable = payable(msg.sender);\n        _token.safeTransfer(beneficiaryPayable, _amount);\n        buyer.amountHasBeenWithdrawn = buyer.amountHasBeenWithdrawn + _amount;\n        emit Released(_amount);\n    }\n\n    function calculateWithdrawableAmount(address _buyerAddress)\n        public\n        view\n        returns (uint256)\n    {\n        Buyer memory _buyer = buyers[_buyerAddress];\n        uint256 currentSplit = getSplitByTime(getCurrentTime());\n        uint256 totalWithdrawable = (_buyer.totalAmount * currentSplit) /\n            splitCount;\n        return totalWithdrawable - _buyer.amountHasBeenWithdrawn;\n    }\n\n    function burnContractBalanceLeft() public nonReentrant onlyOwner {\n        for (uint256 i = 0; i < tokensAllowed.length; i++) {\n            uint256 balance = IERC20(tokensAllowed[i]).balanceOf(\n                (address(this))\n            );\n            if (balance > 0) {\n                IERC20(tokensAllowed[i]).transfer(burnAddress, balance);\n            }\n        }\n    }\n\n    function getSplitByTime(uint256 _time) public view returns (uint256) {\n        if (_time < startedTime || !isStarted) {\n            return 0;\n        }\n        if ((_time - startedTime) / splitDuration >= splitCount) {\n            return splitCount;\n        }\n        return 1 + (_time - startedTime) / splitDuration;\n    }\n\n    function getBalance() public view returns (uint256) {\n        return _token.balanceOf(address(this));\n    }\n\n    function getCurrentTime() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    function getTimes() public view returns (uint256[splitCount] memory) {\n        uint256[splitCount] memory times;\n        for (uint256 i = 0; i < splitCount; i++) {\n            times[i] = startedTime + (splitDuration * i);\n        }\n        return times;\n    }\n}\n",
  "sourceMap": "327:5669:6:-:0;;;1916:453;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:5;867:9:0;:23::i;:::-;1637:1:1;1742:22;;-1:-1:-1;;;;;2107:22:6;;2099:55;;;;-1:-1:-1;;;2099:55:6;;1934:2:9;2099:55:6;;;1916:21:9;1973:2;1953:18;;;1946:30;2012:22;1992:18;;;1985:50;2052:18;;2099:55:6;;;;;;;;2164:5;:14;;;2188:30;;;;:13;;:30;;;;;:::i;:::-;-1:-1:-1;2228:15:6;:34;-1:-1:-1;;;;;;;2272:23:6;;;;;2305:9;:17;;-1:-1:-1;;2305:17:6;;;2332:13;:30;327:5669;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;327:5669:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;327:5669:6;-1:-1:-1;;;;;327:5669:6;;;;;;;;;;;-1:-1:-1;327:5669:6;;;;;;;-1:-1:-1;327:5669:6;;;-1:-1:-1;327:5669:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:9;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1399;459:6;467;475;483;491;544:3;532:9;523:7;519:23;515:33;512:53;;;561:1;558;551:12;512:53;584:40;614:9;584:40;:::i;:::-;643:2;670:18;;;664:25;729:2;714:18;;708:25;777:2;762:18;;756:25;574:50;;-1:-1:-1;664:25:9;;-1:-1:-1;708:25:9;-1:-1:-1;643:2:9;-1:-1:-1;;;;;830:14:9;;;827:34;;;857:1;854;847:12;827:34;895:6;884:9;880:22;870:32;;940:7;933:4;929:2;925:13;921:27;911:55;;962:1;959;952:12;911:55;991:2;985:9;1013:2;1009;1006:10;1003:36;;;1019:18;;:::i;:::-;1065:2;1062:1;1058:10;1097:2;1091:9;1160:2;1156:7;1151:2;1147;1143:11;1139:25;1131:6;1127:38;1215:6;1203:10;1200:22;1195:2;1183:10;1180:18;1177:46;1174:72;;;1226:18;;:::i;:::-;1262:2;1255:22;1312:18;;;1346:15;;;;-1:-1:-1;1388:11:9;;;1384:20;;;1416:19;;;1413:39;;;1448:1;1445;1438:12;1413:39;1472:11;;;;1492:159;1508:6;1503:3;1500:15;1492:159;;;1574:34;1604:3;1574:34;:::i;:::-;1562:47;;1525:12;;;;1629;;;;1492:159;;;1670:6;1660:16;;;;;;;;1716:3;1705:9;1701:19;1695:26;1685:36;;328:1399;;;;;;;;:::o;1732:344::-;327:5669:6;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/AniwarTokenSale.sol",
  "type": "contract"
}